<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[HERE Data Hub CLI]]></title>
      <url>/2020/08/24/HDataHubCLI/</url>
      <content type="html"><![CDATA[<p>HERE Data Hub 是一个用于空间数据存储的云服务，能够使用户简便地访问、管理空间数据。上一篇 HERE Studio 就是构建在 Data Hub 之上的网页应用程序。</p>
<p>Data Hub CLI （Command Line Interface）是基于 Node.js 的命令行接口，可以帮助用户进行一些数据管理方面的交互操作。</p>
<p><br></p>
<h2 id="1-如何安装-？"><a href="#1-如何安装-？" class="headerlink" title="1 如何安装 ？"></a>1 如何安装 ？</h2><h3 id="1-1-安装-Node-js-和-npm"><a href="#1-1-安装-Node-js-和-npm" class="headerlink" title="1.1 安装 Node.js 和 npm"></a>1.1 安装 Node.js 和 npm</h3><blockquote>
<p>安装方式很多种，我直接搬运了 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo 官网</a> 的安装指引。当年搭我这个博客时参考过，简洁好用，五星推荐：</p>
<p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">安装程序</a>。<br>对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">淘宝 Node.js 镜像</a> 下载。</p>
<p>其它的安装方法：</p>
<ul>
<li>Windows：通过 <a href="https://github.com/jasongin/nvs/" target="_blank" rel="noopener">nvs</a>（推荐）或者<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a> 安装。</li>
<li>Mac：使用 <a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a> 或 <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> 安装。</li>
<li>Linux（DEB/RPM-based）：从 <a href="https://github.com/nodesource/distributions" target="_blank" rel="noopener">NodeSource</a> 安装。</li>
<li>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 <a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noopener">指导</a></li>
</ul>
<p>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。</p>
</blockquote>
<p>验证 Node.js 安装成功。  命令 <code>node -v</code>； <code>npm -v</code> ，看到当前版本号即可：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\xiamu&gt;node -v</span><br><span class="line">v10.<span class="number">16.3</span></span><br><span class="line"></span><br><span class="line">C:\Users\xiamu&gt;npm -v</span><br><span class="line"><span class="number">6.9</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure>
<h3 id="1-2-安装-Data-Hub-CLI"><a href="#1-2-安装-Data-Hub-CLI" class="headerlink" title="1.2 安装 Data Hub CLI"></a>1.2 安装 Data Hub CLI</h3><p>使用如下命令完成 Data Hub CLI 安装。</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @here/cli</span><br></pre></td></tr></table></figure>
<p>提示：全局安装在某些环境下，需要管理员权限。</p>
<p>验证 Data Hub CLI 安装成功，  输入命令 <code>here -V</code> :</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;here -V</span><br><span class="line"><span class="number">1.5</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<h2 id="2-连接-HERE-账号"><a href="#2-连接-HERE-账号" class="headerlink" title="2 连接 HERE 账号"></a>2 连接 HERE 账号</h2><p>安装部署成功后，连接 HERE Developer 账号，从而管理自己账号下的项目和数据集。使用命令 <code>here configure account</code>：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;here configure account</span><br><span class="line">prompt: Email:  sharon.mu@here.com</span><br><span class="line">prompt: Password:</span><br><span class="line">Secrets verified successfully</span><br><span class="line">Add-on features enabled.</span><br><span class="line">Default App Selected - oyNWTbKIov6XPMlrXxCH</span><br></pre></td></tr></table></figure>
<p>连接成功后，你的账号配置信息会加密存储在当前系统账户目录下，文件名为：<strong>.herecli</strong> 。</p>
<p>命令 <code>here configure verify</code> 来验证当前 credentials 是否有权限使用 Data Hub APIs。</p>
<p><br></p>
<h2 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3 常用命令"></a>3 常用命令</h2><p>Data Hub CLI 的命令都遵循如下格式：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;HERE command&gt; &lt;API command&gt;</span><br></pre></td></tr></table></figure>
<p>常用命令：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;here -h</span><br><span class="line">Usage: here [options] [command]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -V, --version                           output the version number</span><br><span class="line">  -h, --help                              display help <span class="keyword">for</span> command</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  configure|c [verify|refresh]            setup configuration <span class="keyword">for</span> authentication</span><br><span class="line">  xyz|xs [list|create|upload]             work with <span class="keyword">Data</span> Hub spaces</span><br><span class="line">  studio [list|delete|show]               work with HERE Studio projects</span><br><span class="line">  transform|tf [csv2geo|shp2geo|gpx2geo]  convert from csv/shapefile/gpx to geojson</span><br><span class="line">  geocode|gc                              geocode feature</span><br><span class="line">  help [command]                          display help <span class="keyword">for</span> command</span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<ul>
<li><p>List All Spaces – <code>here xyz list</code></p>
<p><img src="http://kikitamap.com/images/blogImg/HDataHubCLI_list.jpg" alt=""></p>
</li>
<li><p>Create a New Space</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">here xyz create -t <span class="string">"title for space"</span> -d <span class="string">"description for space"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Upload Data to a Space， Geojson/CSV/Shapefile……</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">here xyz upload YOUR_SPACE_ID -f /Users/xyz/data.geojson</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>更多命令示例，详见文档： <a href="https://developer.here.com/documentation/studio/map_customization_suite_cli_hlp/dev_guide/topics/commands.html" target="_blank" rel="noopener">HERE Studio and HERE Data Hub  -  Commands</a></p>
<p><br></p>
<h2 id="4-Source-Code-on-Github"><a href="#4-Source-Code-on-Github" class="headerlink" title="4 Source Code on Github"></a>4 Source Code on Github</h2><p>Data Hub CLI 是 HERE 官方提供的跨平台的开源库，如果感兴趣可以扩展定制的其功能。</p>
<p><strong>heremaps/here-cli</strong>  <a href="https://github.com/heremaps/here-cli" target="_blank" rel="noopener">https://github.com/heremaps/here-cli</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
            <tag> HERE Platform </tag>
            
            <tag> HERE Data Hub </tag>
            
            <tag> Data Management </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[玩一玩 HERE Studio]]></title>
      <url>/2020/08/23/HStudio-intro/</url>
      <content type="html"><![CDATA[<p>可能国内并没有太多人知道， HERE 也有一款轻量级的地图在线应用程序 ，可以帮助用户管理自己的数据，快速配置出一幅看起来还不错的在线地图， 它叫 <strong><a href="https://studio.here.com/" target="_blank" rel="noopener">HERE Studio</a></strong>。</p>
<p>HERE Studio 提供了平台上的在线地图服务作为底图，并提供了常用的基础地图配置工具和样式，即使不愿意写代码，也可以配置出漂亮的地图； 当然，如果有更深入或批处理的数据管理和渲染需求，也可以使用 HERE Data Hub CLI 命令行或 RESTful API，Javascript API，因为 HERE Studio 本身就是基于 HERE Data Hub 的一个轻量级网页端应用。 </p>
<p><br></p>
<h3 id="如何获取-HERE-Studio-？"><a href="#如何获取-HERE-Studio-？" class="headerlink" title="如何获取 HERE Studio ？"></a>如何获取 HERE Studio ？</h3><p>首先，注册（Sign Up）或登录（Log In）HERE Developer 官网： <a href="https://developer.here.com/" target="_blank" rel="noopener"><strong><em>developer.here.com</em></strong></a> ；</p>
<p>然后，创建 Project： <a href="https://developer.here.com/projects" target="_blank" rel="noopener"><strong><em>developer.here.com/projects </em></strong></a> ；</p>
<p>这样个人 developer 默认就可以获得一系列的产品的试用 key， 例如 JS API， REST API， SDK 等。 当然，免费流量是有限制的，但对于个人developer了解功能做测试可以啦。</p>
<p>除了这些 key，免费账号中还有一个很低调的描述，以至于很多用户得了宝藏，还不知道是什么：</p>
<blockquote>
<ul>
<li>Data transfer per month 2.5GB</li>
<li>Database storage per month 5GB</li>
</ul>
</blockquote>
<p>YES， 这说的就是 HERE Data Hub，  包括 HERE Studio。</p>
<p>截止到今天，HERE Studio 的最新版本为 1.8.0。</p>
<p>最后，用 HERE Develper 账号登入： <a href="https://studio.here.com/studio/" target="_blank" rel="noopener"><strong><em>studio.here.com/studio</em></strong></a> 。</p>
<p><br></p>
<h3 id="HERE-Studio-可以做什么？"><a href="#HERE-Studio-可以做什么？" class="headerlink" title="HERE Studio 可以做什么？"></a>HERE Studio 可以做什么？</h3><ul>
<li><p>HERE Studio 提供了很多友好的地图数据管理与可视化的工具，能使用户便利高效地完成地图工作；</p>
</li>
<li><p>HERE Studio 提供了很多可供用户交互操作的 UI 组件，设置精细地地图样式就变得很容易啦， so easy；</p>
</li>
<li><p>所有的地图数据基于HERE Server host 的云存储，实时交互；</p>
</li>
<li><p>商业化服务环境的REST/JS API 和 命令行客户端工具 CLI可调用 HERE Studio 上传的数据。</p>
</li>
<li><p>一键分布和分享给你的朋友或读者。</p>
</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/HStudio_homepage.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/HStudio_basemap.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/HStudio_customization.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/HStudio_sharing.jpg" alt=""></p>
<p><br></p>
<h3 id="PS："><a href="#PS：" class="headerlink" title="PS："></a><em>PS：</em></h3><p>如果你从产品文档中，看到 HERE XYZ <em>*</em> 等产品名称，请自动脑补映射到 HERE Data Hub / HERE Studio  即可。傲娇的产品技术团队就是这么任性，觉得产品名称不能表达他们当下的思绪时，那就改个名字吧。 开个玩笑，XYZ 是这个产品的曾用名，文档通用，大家读起来吧。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
            <tag> HERE Platform </tag>
            
            <tag> Visualization </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[特别的2020：一些特别的感想]]></title>
      <url>/2020/08/22/Thinkings2020/</url>
      <content type="html"><![CDATA[<p>每过一段时间，对自己前一阶段工作和生活进行复盘，是很有必要的。目的很简单，总结既得经验，剖析问题原因，指导下个阶段更好地运行。</p>
<p>而更好的运行，才能给人带来持久的满足感和幸福感。</p>
<p><br></p>
<h2 id="定义自己的工作"><a href="#定义自己的工作" class="headerlink" title="定义自己的工作"></a><strong>定义自己的工作</strong></h2><p>对于大多数人，工作占了人生的相当大一部分时间。所以先要充分理解这份工作，以及它将对自己的影响。家人经常问我，你是做什么的？我总是回答做地图搞IT云云… 但是面对自己，当然清楚行业名称并不是自己工作的JD。</p>
<p>简而言之，我在做的是一份以地图技术为中心的不断解决各种问题的IT类工作。problem solver 曾是我认为的别人贴给我的最佳标签之一，毕竟这个世界里 problem maker 太多了。</p>
<p><br></p>
<h2 id="硬技能精进"><a href="#硬技能精进" class="headerlink" title="硬技能精进"></a><strong>硬技能精进</strong></h2><p><strong>Hard</strong> skill 方面，需要不断学习，拓展和精进产品技术。所有技术同学都懂，IT技术日新月异，一直学习都很难乘风破浪，何况随波逐流放弃治疗？任何一个”我知道”都不是信手拈来。</p>
<p>之前在esri的几年阅读英文技术文档的习惯对我有巨大的帮助，静心读文档解题总是会有助思路。前任和现任供职的这两家公司，有个共同特点，就是产品谱系庞大，产品名录远长于一般餐厅菜单，product manual 页数动辄几千，外加一个在线产品不断更新的developer portal。时间碎片，团队迷你，克服浮躁，学习速度和用户赛跑，都是重重挑战。</p>
<p>压力的边缘，心平气和地读完文档并研究解决实际问题，给我的是一种积极反馈。享受这个抽丝剥茧的过程，一旦上瘾也不好戒。技术工种必须保持学习，后面我会为自己分配的更多的学习时间来精进硬技能。摄入不够，输出就无力。</p>
<p><br></p>
<h2 id="软技能提升"><a href="#软技能提升" class="headerlink" title="软技能提升"></a><strong>软技能提升</strong></h2><p><strong>Soft</strong> skill 方面，是沟通和管理沟通。例如，常常需要同时至少面对3个客户企业，每个企业有2个人和我对接问题，那么外侧至少有6个人；几个问题并发，自己解决分析问题的同时，如有必要还要和不同国家不同技术团队沟通确认，内侧通常也会是同时几个人active；这是一个典型的 m:n relationship 多头沟通。</p>
<p>工作方式类似人肉版的 large-scale matrix routing 位置服务 ，我大概就是这些stakeholder们的沟通处理server，为每对匹配的Q&amp;A 双方建立最佳路径。既要向内侧说清楚当前客户诉求，又要把解决方案客观得体地反馈给外侧，兼顾沟通过程对双方的正向促进。</p>
<p>如上已经是理想情况，实际环境中毕竟是多方沟通，各有各的诉求，各有各的boundary和scope，如何能平衡和管理期待，取最大公约数，也是需要推敲的困难模式。论如何优雅地argue。正如，在很多个因子的统计归一化过程中，每一个因子都必要而不突出了；每个因子的最优不一定是整个算式的最优。大家好才是真的好。</p>
<p>这个部分需要我自己时常剖析问题，完善自己认知体系，勾画个人边界，锻炼实践能力。既然是所有问题和人的接口和处理器，外部环境不以自己的意志转移时，只有通过自我提升才能优化性能。沿用企业文化金句：be true.  be bold.  win together !</p>
<p><br></p>
<h2 id="平衡生活"><a href="#平衡生活" class="headerlink" title="平衡生活"></a><strong>平衡生活</strong></h2><p>疫情期间在家办公，无论主动被动，工作和生活搅在一起。遇到紧急状况，生活时间不得不被工作侵占，而这种侵占常常是无意识的。不知不觉错过吃饭休息时间，被家人催促和说教，而我又常常流露出不耐烦，差的脾气总是给了亲近的人。在孩子最淘气的 2,3岁都是父母在默默守护。我支持了所有别人，而家人默默地支持了我。仔细思考，这不是可持续的发展。好的状态是我们能自循环，而不是汲取与被汲取是不同方。所谓平衡生活，不是平衡自己的，是平衡一家人的。</p>
<p>厌恶标榜加班，尤其是自己在从事一份智力型工作。当出现模式化倾向，要思考陷入长期加班，是不是有什么系统性的问题？是不是模糊了某些边界和原则？是否还有合理改善的空间？如何能从本质上提高效率摆脱窘境？如果是，怎么做？如果否，现在怎么做？很多事情不是单纯延长工作时间本身能解决的。</p>
<p>能用智力解决的问题，不要只用体力；能用体力解决的问题，不要只用精力。越来越理解：成年人的世界没有容易二字。但是我和很多人有一样的执念，喜欢自己看起来游刃有余、举重若轻、深入浅出，而无需渲染背后的努力过程。</p>
<p><img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/via5YK5XT31HRCoI3TLVrlE01nw1mzxIwbKZg22KakI0pgNZHPAtQvL2vjBDXqRFRtKCH4iblN3RicKSicNaBVkjVw/640?wx_fmt=jpeg" alt="img"></p>
<p>人的一生是方方面面的。 如何做一个有趣的人？至少做一个不匮乏不枯燥的人？这是我人生探求的方向。人生各个维度的积极力量是可以相互影响的。</p>
<p>没有什么大不了，趁着还享受现在的大多数时刻，及时地优化系统，清除垃圾，或许又是新的篇章。虽然我们没有以前那么年轻了，但现在已经是这一生最年轻的时刻了，去日无多，笃定前行。</p>
<p>“生活不息，折腾不止”，不然不可能怎么可能发生。</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[HERE mSDK - Positioning]]></title>
      <url>/2020/04/19/HmSDK_Positioning/</url>
      <content type="html"><![CDATA[<p>地图技术是对真实世界既有位置的表达，定位技术是对当前位置的求解。随着各种传感器、移动设备的广泛使用，GIS和LBS通常无缝结合在同一个解决方案中。GIS更侧重于稳坐后台解决空间数据的提取、处理、分析、挖掘，LBS更侧重于深入终端实现信号收集、位置获取、轨迹追踪。GIS从一个小众而专业的领域，随着互联网的潮流，逐渐拥抱普适，增值LBS。</p>
<p>从终端用户的角度看，这些区别是不敏感的，也不必要的。例如，在一个陌生地方到了饭点儿，估计大家十有八九会打开App，看下周边地图，知道我在哪，搜下周边饭馆，然后计算路线导航过去，吃饱喝足一气呵成即可。</p>
<p>以上面这个觅食的例子展开，从产品功能角度，至少需要如下几个模块。App首先获取设备的位置（positioning），通过这个位置请求周边map tile（map service）, 然后搜索指定Category的POI（search&amp;F/R geocoding），然后计算路线（routing/direction）并导航（TBT Navigation）……</p>
<p>这一篇我想整理一下，位置服务第一步， Positioning 相关的内容。</p>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_Positioning_opening.jpg" alt=""></p>
<p>HERE Mobile SDK 中不仅提供了Android 系统中自带的基础定位接口，而且特别提供了HERE增强版的定位能力，更精准，高效，可靠。这些增强版的定位能力包括：</p>
<ul>
<li><strong>蜂窝网络定位 - 支持 GSM, CDMA, WCDMA, TD-SCDMA ，LTE</strong></li>
<li><strong>WiFi 网络定位</strong></li>
<li><strong>高精度室内定位 - 支持 WiFi 和 蓝牙</strong></li>
<li><strong>离线定位 - 无任何网络连接时，使用预先按需自动下载的定位数据缓存、辅助定位数据，实现离线定位</strong></li>
<li><strong>定位模式自动融合，择优切换， 包括 GNSS，WiFi，蓝牙，蜂窝信号间的切换</strong></li>
<li><strong>室内定位 -支持于室内地图结合使用，支持楼层探测。 室内地图既可以是HERE已发布的公共资源，也可以是用户私属地图</strong></li>
<li><strong>HERE定位能力无缝覆盖全球</strong></li>
</ul>
<p><br></p>
<p>以上功能列表解释几个点：</p>
<p><strong>GNSS</strong>（Global Navigation Satellite System）包括除了我们熟知的 GPS，还包括 GLONASS,  Beidou, </p>
<p>QZSS,  Galileo 这些星座。 HERE Positioning 产品族系中，还有可支持到芯片级的 <a href="https://www.here.com/products/tracking-positioning-solutions/hd-gnss" target="_blank" rel="noopener">HD GNSS / A-GNSS 产品</a>，用于显著提高首次定位时间和GNSS离线辅助定位。这里不展开了，以后有空再约起。</p>
<p><strong>WiFi离线定位</strong>，略复杂，是室内定位中成本较低的一种，不依赖于事先部署 Beacon。从使用者角度可以理解为两个使用场景：</p>
<ul>
<li><p>经常连接WiFi，有时断线使用，例如在办公室等熟悉场所。</p>
</li>
<li><p>周围无熟悉WiFi，例如进入一个陌生的大型购物中心。</p>
<p>前者可通过online WiFi定位的定位缓存数据解决离线问题；后者则需要大量的众包数据作为前提实现。</p>
<p>后者是一种更黑科技的技术，但是从原理上也不是难于理解。 可以想象，大型购物中心通常布满 WiFi热点，移动设备即使无法连接这些热点，也可以探测到这些WiFi热点的信息。根据信号场强的算法黑科技，最终是从已知点位解算未知点位的数学问题。</p>
<p>这里的问题是：已知点位怎么来？这正是源自众包、托关于定位服务器的 HERE Radio Map。采集和管理 Radio Map 实际官方也有给出工具<a href="https://indoor.here.com/#/tools" target="_blank" rel="noopener"> HERE Indoor Radio Mapper</a> 和 <a href="https://indoor.here.com/#/tools/help-text-3#indoor-radio-map-admin-tool" target="_blank" rel="noopener">HERE Radio Map Admin Tool</a> 。</p>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_Positioning_RadioMap.jpg" alt=""></p>
</li>
</ul>
<p><strong>室内地图 /Venue Map</strong>，在实际的使用场景中，室内定位一般与3D室内地图结合使用，但始终要理解，地图是地图，定位是定位，只是为了终端用户的视觉显示时，二者才绑到了一起。室内地图的显示和制作也有单独的工具，点<a href="https://venues.here.com/products/overview" target="_blank" rel="noopener">这里</a>看官网。</p>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_Positioning_indoor.jpg" alt=""></p>
<p>定位部分的开发部署，强烈建议仔细阅读开发文档，有关设备访问权限的几点一定要确保配置正确。</p>
<ul>
<li><p>HERE Mobile SDK - <a href="https://developer.here.com/documentation/android-premium/3.15/dev_guide/topics/advanced-positioning.html" target="_blank" rel="noopener">Developer Doc</a></p>
</li>
<li><p>HERE Mobile SDK on Github - <a href="https://github.com/heremaps/here-android-sdk-examples/tree/master/positioning" target="_blank" rel="noopener">Sample Code</a></p>
</li>
</ul>
<p>可以带手机到室外和室内试一下这个Demo，支持选择定位模式。</p>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_Positioning_Demo.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Positioning </tag>
            
            <tag> Mobile SDK </tag>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HERE mSDK - Vector Tile / Map Feedback]]></title>
      <url>/2020/03/29/HmSDK_VectorTile-MFs/</url>
      <content type="html"><![CDATA[<p><a href="http://kikitamap.com/2020/03/11/HmSDK_MapRendering/" target="_blank" rel="noopener"><strong>上一篇</strong></a>，我们一起结合  Interactive Maps 了解了HERE Map Service 的地图渲染样式， 在此之外，HERE Mobile SDK 向开发者提供的在线地图产品中，还有 Vector Tile 和 Map Feedback service 值得拥有。</p>
<p><em>PS：除了SDK产品之外，<a href="https://developer.here.com/documentation#maps_section" target="_blank" rel="noopener"><strong>HERE 在线地图产品</strong></a>中的 RESTful API 产品包括：Vector Tile，Image Map，Map Tile，Weather，Map Feeddback。</em></p>
<h2 id="Vector-Tile"><a href="#Vector-Tile" class="headerlink" title="Vector Tile"></a>Vector Tile</h2><p>Vector Tile 在 HERE 产品家族中是新进一员，截至此文章的发布日期，仅在 <a href="https://developer.here.com/documentation/android-sdk/dev_guide/topics/custom-map-styles-lite.html" target="_blank" rel="noopener"><strong>mSDK Lite 版本</strong></a> 中有支持，目前为 Lite Edition 4.2  。我们静待 mSDK Premium Edition 的 4.x 版本吧，快了。</p>
<p>这使用这个服务之前，可能我首先需要回答大家的十万个为什么。</p>
<p>例如，什么是Vector Tile？为什么使用 Vector Tile ？</p>
<p>Vector Tile 是相较于传统的 raster tile 而言的，可能很多读者会问，地图数据本身不就是vector data 吗？为什么早期的地图服务反而会是 raster tile ？哪种好？ 我该用什么？</p>
<p>在传统的地图服务生产过程中，后台地图数据是专业复杂的数据格式（如 Oracle Spatial，shapefile，FileGDB，等一切地理数据格式），需要专业的重地图数据编辑器才能读写（如商用专业的ArcGIS Desktop/Pro，免费的QGIS等）。当我们希望通过B/S服务的形式提供在线地图时，对浏览器要求不高、支持友好的png，jpg，tiff等图片就成了解决方案。 将地图在服务器端按预定义的切片结构/caching scheme 进行预渲染，然后，进行大量切片缓存工作。 在浏览器请求地图服务时，推送不同层级的图片（Raster Tile）就成了传统地图服务器的日常，其性能的保障都是依赖分布式高可用的服务器配置。例如，HERE 提供覆盖全球的地图服务（在Developer Portal可以查看具体的 <a href="https://developer.here.com/documentation/map-tile/dev_guide/topics/coverage-map.html" target="_blank" rel="noopener"><strong>map coverage level</strong></a>，就是由部署在AWS全球6个数据中心上支持的。 </p>
<p>自 <a href="https://github.com/mapbox/vector-tile-spec/" target="_blank" rel="noopener"><strong>Mapbox</strong></a> 提出更智慧的 vector tile ，这种切片格式早已备受各大GIS、LBS厂商的青睐。vector tile 采用了与 raster tile 类似的 caching scheme，只是每片tile的内容从raster 变成了vector。 我们想象一下，如果表示几条路的一片512px×512px 的tile，用raster格式，那就需要几个512×512 的矩阵表示，而用vector格式，只需要包含数对坐标和位移的串表示。 因此，vector tile 在尺寸上有明显优势，从而传输性能就高了。这是因为这个特性，vector tile 允许用户在客户端自定义 vector style ，例如路或点状地物的颜色和符号， 不像 raster tile 是预渲染的镜像，已经是静态结果，渲染样式不能被客户端修改。</p>
<p>如果提到vector 和 raster 哪个好？ 我想答案可能不是绝对唯一的。如果从传输性能和客户端简单符号的自定义的角度，一定是vector tile更优； 但如果从地图渲染丰富度、复杂度的支持角度，raster tile 还是占有一席之地。</p>
<p>现在回到 HERE Vector Tile Service ，为了方便客户快速生成 vector style configuration file ，HERE 提供了在线工具 <a href="https://enterprise.here.com/map-style-editor/" target="_blank" rel="noopener"><strong>Map Style Editor</strong></a>。可以在登录 Developer Portal之后，点击前面的连接进入即可，如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_VectorTile-MFs_map_editor.jpg" alt=""></p>
<ul>
<li><p>Github 获取到 mSDK Android Lite Edition 在线地图的官方 <a href="https://github.com/heremaps/here-sdk-examples/tree/master/examples/4.2.0.0/lite/android" target="_blank" rel="noopener"><strong>代码样例</strong></a>。</p>
</li>
<li><p>Developer Portal 定制地图渲染样式的 <a href="https://developer.here.com/documentation/android-sdk/dev_guide/topics/custom-map-styles-lite.html" target="_blank" rel="noopener"><strong>说明</strong></a>。</p>
</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_VectorTile-MFs_Lite_Demo.jpg" alt=""></p>
<h2 id="Map-Feedback"><a href="#Map-Feedback" class="headerlink" title="Map Feedback"></a>Map Feedback</h2><p>创建地图应用时，最常见问题之一就是“巧妇难为无米之炊” ，地图数据是“米”，之上的各种在线地图及位置能力的实现是“炊”。HERE 攒了30多年的数据采集经验，米仓充盈。在丰富的数据采集手段中，其中最平易近人的一支就是来自用户的数据问题回报。</p>
<p>无论是商业客户，还是免费社区，全球用户都可以使用 Map Feedback API 提出数据缺漏或错误。当然可想而知，整个群体数量非常庞大，数据生产单元会根据一系列的规则评定用户的信用优先级，来管理这些回报过来的数据问题的处理策略。</p>
<p>在 <a href="https://developer.here.com/documentation/map-feedback/dev_guide/topics/quick-start-submit-feedback.html" target="_blank" rel="noopener"><strong>Rest API</strong></a> ， <a href="https://developer.here.com/documentation/embedded-editor/dev_guide/topics/add-as-app-component.html" target="_blank" rel="noopener"><strong>mobile SDK</strong></a> ， <a href="https://developer.here.com/documentation/embedded-editor/dev_guide/topics/add-to-website.html" target="_blank" rel="noopener"><strong>Web SDK</strong></a> 各版本都有对数据回报的支持，其中最完整的开发文档，还是建议看 Rest API 的部分，它包含了全部可枚举的错误类型和信息上报的说明。用户也可以追踪数据问题的处理结果，例如，被采纳或拒绝，以及采纳后预计更新时间。</p>
<ul>
<li>Rest API - Request URL 的请见 <a href="https://developer.here.com/documentation/examples/rest/map_feedback" target="_blank" rel="noopener"><strong>样例</strong></a>。</li>
</ul>
<p>另外，在HERE 官方地图应用中，<a href="http://mapcreator.here.com/" target="_blank" rel="noopener"><strong>Map Creater</strong></a> 和 <a href="https://wego.here.com/" target="_blank" rel="noopener"><strong>HERE Wego</strong></a> 都包含了这个功能，只是这两个网站目前还在墙外，希望早日能与我们正式见面。</p>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_VectorTile-MFs_Map_Creator.jpg" alt=""></p>
<p>关于这两个服务就说这么多了，有空再继续进行下一集。</p>
<p>Stay tuned ！</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Vector Tiles </tag>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Mobile SDK </tag>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HERE mSDK - Map Rendering]]></title>
      <url>/2020/03/11/HmSDK_MapRendering/</url>
      <content type="html"><![CDATA[<p>通过上一个<a href="http://kikitamap.com/2020/03/09/HmSDK_QuickStart/" target="_blank" rel="noopener">入门篇</a>，相信你已经对 HERE mSDK 有了一定的印象。<br>作为一个地图SDK，最基础最重要的功能首先是地图渲染， 那么今天我们仍然以 HERE mSDK （Premium Edition）为例一起了解下。在 HERE Location Services 中有一个 <a href="https://developer.here.com/documentation#maps_section" target="_blank" rel="noopener">Interactive Maps Service</a>，用于访问服务器端预渲染的瓦片服务/tile map， 这就是今天要用到的原料。</p>
<p>Let’s get our hands dirty ！<br>今天这篇我们先从最基础的 Map Rendering 和 Map Schemes 开始。 <code>AndroidXMapFragment</code> 类提供了交互式地图体验支持， 例如缩放、平移等等。<code>AndroidXMapFragment</code>初始化之后，可以通过<code>Map map = mapFragment.getMap();</code> 获取 <code>Map</code> 。<br><code>Map</code> 类中提供了很多 map attributes 帮助开发者确定地图的展示方式，例如：map center，zoom level,  tilt, orientation, map projection, map animation …… </p>
<blockquote>
<p>详见开发文档：<a href="https://developer.here.com/documentation/android-premium/dev_guide/topics/maps.html" target="_blank" rel="noopener"><strong>Map</strong></a></p>
</blockquote>
<p>HERE Interactive Maps 提供了很多样式的地图外观（Map Scheme）可供选择，以满足不同审美和专题的需求。简而言之，地图数据是一套，皮肤可有很多种。 </p>
<blockquote>
<p>在开发者文档中，有一页图文可供参考：<a href="https://developer.here.com/documentation/android-premium/dev_guide/topics/map-schemes.html" target="_blank" rel="noopener"><strong>Map Scheme</strong></a></p>
</blockquote>
<p>HERE 在 Github上有官方的示例代码库，这篇的相关示例可以在这个连接中找到：<a href="https://github.com/heremaps/here-android-sdk-examples/tree/master/map-attribute" target="_blank" rel="noopener"><strong>Map Attribute</strong></a></p>
<p>我在这个工程中稍作修改，增加了 Satallite Mode 和 Night Mode，  因为后者是最近备受欢迎的一种渲染方式，这么好看的地图不做在样例里觉得有点可惜。 Night Mode 一方面可以作为夜晚时段的地图展示，另一方面可以作为设备暗色主题搭配的地图显示。<br>另外，这个示例工程中，还包含了公交/Transit 主题地图的展示（None/公交站/公交线路），以及路况/Realtime Traffic Service 的展示 （Traffic Flow / Incident）。</p>
<p>Happy testing ^^</p>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_MapRendering.jpg" alt=""></p>
<p>如下是在 Nexus 10 模拟器中的录屏:</p>
<p><div id="video"><video width="550" height="854" controls autoplay muted><source src="http://kikitamap.com/images/blogImg/HmSDK_MapRenderingDemo.mp4" type="video/mp4"></video></div></p>
<style type="text/css">#video{width:550px; height:854px;background:#ffcccc;}</style>



]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Mobile SDK </tag>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Quick Start of HERE SDK for Android]]></title>
      <url>/2020/03/09/HmSDK_QuickStart/</url>
      <content type="html"><![CDATA[<p>今天整理下 HERE SDK的入门攻略~</p>
<p>HERE mobile SDK 是HERE location Servie（HLS）产品家族中重要的一部分，支持 Android 和 iOS 两大主流系统；从功能上分为 Lite（旧版本称 Starter）和 Premium 两个license level，顾名思义，前者支持较轻量级的功能，后者具有更专业更高级的功能。具体的功能清单和版本对比，可以在点击 <a href="https://developer.here.com/products/here-sdk" target="_blank" rel="noopener">官网链接</a> 查到。</p>
<p>HERE Developer 网站提供免费测试账号，建议大家注册一个玩一玩。每个 <a href="https://developer.here.com/pricing" target="_blank" rel="noopener">Freemium Plan</a> 账号下的 Project 可以拥有 Rest API、JS API、mSDK、studio 等很多产品的测试权限。对于个人 developer 来说，我认为足矣。</p>
<blockquote>
<p><strong>Freemium Plan 福利内容</strong></p>
<p>Location Services</p>
<ul>
<li>250K Transactions per month</li>
<li>5K SDK Monthly Active Users</li>
<li>250 Assets per month</li>
<li>Pay per additional Transactions</li>
</ul>
<p>Studio</p>
<ul>
<li>2.5GB Data transfer per month</li>
<li>5GB Database storage per month</li>
<li>Pay per additional Data transfer or Database storage</li>
</ul>
</blockquote>
<h1 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h1><h2 id="获取Credentials及SDK安装包"><a href="#获取Credentials及SDK安装包" class="headerlink" title="获取Credentials及SDK安装包"></a>获取Credentials及SDK安装包</h2><p>登录 HERE Developer 账户之后，即可在自己创建的Project中生成每个产品对应的密钥/credentials。</p>
<p>在 SDK 密钥下方就有 SDK安装包可供下载。如下图即为 HERE mSDK （premium edition） 的示例：</p>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_QuickStart_keys.jpg" alt=""></p>
<h2 id="检查-System-Requirments"><a href="#检查-System-Requirments" class="headerlink" title="检查 System Requirments"></a>检查 System Requirments</h2><p>这是安装一切软件产品之前，仔细阅读<a href="https://developer.here.com/documentation/android-premium/dev_guide/topics/system-requirements.html" target="_blank" rel="noopener">官方系统要求</a>，永远是不错的选择。</p>
<h2 id="快速运行-Tutorial-Example"><a href="#快速运行-Tutorial-Example" class="headerlink" title="快速运行 Tutorial Example"></a>快速运行 Tutorial Example</h2><p>下载后的SDK 安装包中包含了 user guild，release notes，SDK libraries， tutorial example 这几大件。 如果要快速入门，tutorial example 运行起来是必须的啦。</p>
<p>这里假设大家使用的开发环境都是 <a href="https://developer.android.google.cn/studio" target="_blank" rel="noopener">Android Studio</a>， 解压缩 SDK 安装包后，开始吧！</p>
<ol>
<li><p>启动 Android Studio，选择 open an existing Android Studio project， 浏览至 tutorial example 所在目录， <code>.../HERE-sdk/tutorial/BasicMapSolution</code> 。 </p>
</li>
<li><p>接着会发现一条报错 <code>Error: Failed to resolve: :HERE-sdk:</code>， 这个不用担心，是因为 HERE SDK 的 libraries 默认没有包含在这个工程中。</p>
</li>
<li><p>在 <code>BasicMapSolution</code> 中的 <code>app</code> 文件夹下创建一个名为 <code>libs</code> 的文件夹，并将安装包中的 <code>HERE-sdk/libs</code> 下的 <code>HERE-sdk.aar</code> 复制到这里。上步遇到的问题就解决料。</p>
</li>
<li><p>检查 <code>app/build.gradle</code> 文件，确保如下内容已经包含：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">  flatDir &#123;</span><br><span class="line">    dirs <span class="string">'libs'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">dependencies &#123;</span><br><span class="line">  implementation(name:<span class="string">'HERE-sdk'</span>, ext:<span class="string">'aar'</span>)</span><br><span class="line">  <span class="comment">// Depending on your specific project configuration you may have other entries here.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>准备许可。每个 application 都需要一套单独的credentials。需要注意：为app申请credentials时，填写的 package name 需要和注册的bundle identifier 完全一致。就这个 sample来说， 应该使用 package name：<code>com.here.android.tutorial</code> 。如果在文章的开始，你已经注册了credential，那也没有关系，在 developer 网站的 project 页面中，你还可以修改哦，同时密钥会重新刷一遍，请使用最新的。<br><img src="http://kikitamap.com/images/blogImg/HmSDK_QuickStart_PackageName.jpg" alt=""> </p>
</li>
<li><p>写入许可。 打开目录 <code>BasicMapSolution/app/src/main/</code> 下的<code>AndroidManifest.xml</code>文件。找到三行 <code>&lt;meta-data&gt;</code>开头的语句，填写 credentials 即可。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"com.here.android.maps.appid"</span> <span class="attr">android:value</span>=<span class="string">"&#123;YOUR_APP_ID&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"com.here.android.maps.apptoken"</span> <span class="attr">android:value</span>=<span class="string">"&#123;YOUR_APP_CODE&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"com.here.android.maps.license.key"</span> <span class="attr">android:value</span>=<span class="string">"&#123;YOUR_LICENSE_KEY&#125;"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>连接设备，运行程序，Bingo ！</p>
</li>
</ol>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><p>测试过程中，不确定大家有没有遇到我曾遇到的问题？</p>
<p><code>This project uses AndroidX dependencies, but the &#39;android.useAndroidX&#39; property is not enabled. Set this property to true in the gradle.properties file and retry.</code></p>
<p>解决方法：</p>
<p>在sample project 中的 <code>gradle.properties</code>文件中，增加一句：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android.useAndroidX=<span class="keyword">true</span></span><br></pre></td></tr></table></figure>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>最后上图，我手头没有 Android 设备，用了 Nexus 10 模拟器：</p>
<p><img src="http://kikitamap.com/images/blogImg/HmSDK_QuickStart_Run.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Mobile SDK </tag>
            
            <tag> Android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[the Shade]]></title>
      <url>/2020/03/05/theShade/</url>
      <content type="html"><![CDATA[<p>又是很久没来更新，以至于kikitamap.com这个域名因为没有续费而已经停用接近两周；要不是今晚忽然想写点什么，还不知道什么时候我才能发现。</p>
<p>工作结束了，宝贝睡下了，每到接近12点，似乎属于我自己的完整时间才开始展开。所以，我的母亲总是不解，为什么终于到了你的休息时间，反而又要”熬夜“ ？事情不能明天做吗？ 我总是无言以对，我这种矫情的时间独占需求，估计她不会理解，只好安抚她说马上就睡。大概，也不是所有人都有与自己独处的强需求。</p>
<p>我喜欢拍照，拍各种自认为有趣的东西，因此手机空间经常告急，只好翻一翻，删除一些不喜欢的或是没有什么内容的。忽然发现了这张很久前拍的。</p>
<p><img src="http://kikitamap.com/images/blogImg/SSN_theShade_20160403_TJWQ.jpg" alt=""></p>
<p>当时的场景是我在等人，刚好从站的位置，看到自己的影子叠在橱窗里的模特身上，感觉很有点意思，就顺手拍了下来。世间熙熙攘攘，我们大多数都是追寻成为模特壳子的样子；住在壳子里面的人的样子呢？ta们是同一个吗？</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[WiFi Network Positioning]]></title>
      <url>/2019/06/27/wlanNetworks/</url>
      <content type="html"><![CDATA[<p>在设备开启WiFi之后，会对周边 WiFi Access Point (AP)进行扫描，并将这些可见WiFi名称推给用户供选择。这是几乎是我们的PC和手机的日常。 除了连接WiFi登录Internet 之外，实际上，我们还可以通过 WiFi AP进行定位。</p>
<p>定位和地图一直是紧密联系的，无论是面向消费者的第一人称应用，还是关于管理者的追踪需求。各大LBS厂商，早就提供了各种定位功能，尤其HERE，Positioning 历史可以追溯到 Nokia年代，包括基于 GPS，WiFi network，Cell Signal，Bluetooth 等各种信号源的定位能力。</p>
<p><br></p>
<h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><ul>
<li>除了Mobile Hotspot、WiFi Egg，大多数情况下 AP不会经常的移动， 这就为WiFi定位的基础参照位置信息；</li>
<li><p>理论上，每一个 AP 都有全球唯一标识符— mac地址；当然也不排除有重复mac的问题，至于如何去重和更新后端数据库就是 another story，这里不展开了；</p>
</li>
<li><p>设备WiFi扫描到AP即可同时获取AP的信息，信号的强度，mac地址（BSSID）等，无论是否连接上；</p>
</li>
<li>根据WiFi信号强度衰减和距离的函数，可以判断设备离AP的距离；如果多个AP存在，那么这多个圆相交的区域就可以判定设备的位置；</li>
</ul>
<p>从上面的原理可以看出，AP的位置越准确，设备扫描到的AP越多，那么设备的位置越准确。</p>
<p><br></p>
<h1 id="Quick-Testing"><a href="#Quick-Testing" class="headerlink" title="Quick Testing"></a>Quick Testing</h1><p>做个小测试，帮助快速理解。</p>
<p>假设已经拥有了 HERE Developer 账号和密钥，如果没有，这里 <a href="https://developer.here.com/?create=Freemium-Basic&amp;keepState=true&amp;step=account" target="_blank" rel="noopener">免费注册</a>。 </p>
<p>以我手头的 Windows 和 <a href="https://developer.here.com/documentation/positioning/topics/request-constructing.html" target="_blank" rel="noopener">HERE Positioning API</a> 的 WLAN Positioning为例。</p>
<p><br></p>
<p><strong>1</strong>   获取周边WiFi信息，可以使用 <code>netsh</code> 命令查到当前扫描到的AP。 </p>
<p>   <code>netsh wlan show networks mode=BSSID</code></p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;netsh wlan show networks <span class="attribute">mode</span>=BSSID</span><br><span class="line"></span><br><span class="line">Interface name : Wi-Fi</span><br><span class="line">There are 18 networks currently visible.</span><br><span class="line"></span><br><span class="line">SSID 1 : guest</span><br><span class="line">   <span class="built_in"> Network type </span>           : Infrastructure</span><br><span class="line">    Authentication          : WPA2-Personal</span><br><span class="line">    Encryption              : CCMP</span><br><span class="line">    BSSID 1                 : 0a:69:6c:0c:08:c2</span><br><span class="line">         Signal             : 30%</span><br><span class="line">         Radio<span class="built_in"> type </span>        : 802.11n</span><br><span class="line">         Channel            : 11</span><br><span class="line">         Basic rates (Mbps) : 1 2 5.5 11</span><br><span class="line">         Other rates (Mbps) : 6 9 12 18 24 36 48 54</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line"></span><br><span class="line">SSID 18 : Regus-76</span><br><span class="line">   <span class="built_in"> Network type </span>           : Infrastructure</span><br><span class="line">    Authentication          : WPA2-Personal</span><br><span class="line">    Encryption              : CCMP</span><br><span class="line">    BSSID 1                 : 0c:d8:6c:9f:1e:80</span><br><span class="line">         Signal             : 68%</span><br><span class="line">         Radio<span class="built_in"> type </span>        : 802.11n</span><br><span class="line">         Channel            : 13</span><br><span class="line">         Basic rates (Mbps) : 1 2 5.5 11</span><br><span class="line">         Other rates (Mbps) : 6 9 12 18 24 36 48 54</span><br></pre></td></tr></table></figure>
<p><br></p>
<p><strong>2</strong>  使用收集到的 BSSID 发送类似 <a href="https://developer.here.com/documentation/positioning/topics/example-wlan.html" target="_blank" rel="noopener">这个示例</a> 中的请求即可，so easy!</p>
<p>   当然, 这只是 online WiFi positioning， 还有更黑科技的 offline positioning，有空再更。</p>
<p>   <br></p>
<p>   <br></p>
<p><strong>Demo Screenshot</strong></p>
<p>   Chian HLS JS API + Global Positioning API </p>
<p>   <img src="http://kikitamap.com/images/blogImg/wlanNetworks_CHLS.png" alt=""></p>
<p>   Global HLS Imagery View</p>
<p>   <img src="http://kikitamap.com/images/blogImg/wlanNetworks_imagary.png" alt=""></p>
<p>Have Fun！</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Network </tag>
            
            <tag> Positioning </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HERE MAP API - Part4 Advanced Routing - 2]]></title>
      <url>/2019/05/12/Icecream_Part4-Adcanced-Routing_2/</url>
      <content type="html"><![CDATA[<p>在上一篇中，尝试给出三条备选路线方案，只是看看是不够的，还需要做些交互式的操作支持。</p>
<h3 id="1-Visual-Tweaks"><a href="#1-Visual-Tweaks" class="headerlink" title="1 Visual Tweaks"></a>1 Visual Tweaks</h3><p>首先，这里我们做点小小的视觉调整，让路线和位置更漂亮一点。例如：</p>
<p>给路线的加上半透明效果，在<code>drawRoute()</code>中增加：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routeLine = <span class="keyword">new</span> H.map.Polyline(strip, &#123;</span><br><span class="line">  style: &#123; <span class="attr">strokeColor</span>: <span class="string">'rgba(0, 85, 170, 0.5)'</span>, <span class="attr">lineWidth</span>: <span class="number">3</span> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>再给配送的起点、终点，快递员的当前位置赋予不同的显示符号，在<code>map.js</code>中修改<code>addMarker()</code>：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">HEREMap.prototype.addMarker = <span class="function"><span class="keyword">function</span> (<span class="params">coordinates, icon</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Add an markerOptions object</span></span><br><span class="line">  <span class="keyword">var</span> markerOptions = &#123;&#125;</span><br><span class="line">  <span class="comment">// three different icons for origin, destination and the user's current position</span></span><br><span class="line">  <span class="keyword">var</span> icons = &#123;</span><br><span class="line">    iceCream: &#123;</span><br><span class="line">      url: <span class="string">'./images/marker-gelato.svg'</span>,</span><br><span class="line">      options: &#123;</span><br><span class="line">        size: <span class="keyword">new</span> H.math.Size(<span class="number">26</span>, <span class="number">34</span>),</span><br><span class="line">        anchor: <span class="keyword">new</span> H.math.Point(<span class="number">14</span>, <span class="number">34</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    origin: &#123;</span><br><span class="line">      url: <span class="string">'./images/origin.png'</span>,</span><br><span class="line">      options: &#123;</span><br><span class="line">        size: <span class="keyword">new</span> H.math.Size(<span class="number">32</span>, <span class="number">32</span>),</span><br><span class="line">        anchor: <span class="keyword">new</span> H.math.Point(<span class="number">12</span>, <span class="number">36</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    destination: &#123;</span><br><span class="line">      url: <span class="string">'./images/destination.png'</span>,</span><br><span class="line">      options: &#123;</span><br><span class="line">        size: <span class="keyword">new</span> H.math.Size(<span class="number">32</span>, <span class="number">32</span>),</span><br><span class="line">        anchor: <span class="keyword">new</span> H.math.Point(<span class="number">12</span>, <span class="number">36</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (icons[icon]) &#123;</span><br><span class="line">    markerOptions = &#123;</span><br><span class="line">      icon: <span class="keyword">new</span> H.map.Icon(icons[icon].url, icons[icon].options)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates, markerOptions)</span><br><span class="line">  <span class="keyword">this</span>.map.addObject(marker)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> marker</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-Route-Selection"><a href="#2-Route-Selection" class="headerlink" title="2  Route Selection"></a>2  Route Selection</h3><p>在显示的三条路线中，允许用户选择一条作为最佳选项，那么我们需要在onSuccess()中增加一个回调函数来实现。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (result.response.route) &#123;</span><br><span class="line">    <span class="keyword">var</span> routeLineGroup = <span class="keyword">new</span> H.map.Group()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> routes = result.response.route.map(<span class="function"><span class="keyword">function</span> (<span class="params">route</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> routeLine = drawRoute(route)</span><br><span class="line">      routeLineGroup.addObject(routeLine)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        route: route,</span><br><span class="line">        routeLine: routeLine</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    map.addObject(routeLineGroup)</span><br><span class="line">    map.setViewBounds(routeLineGroup.getBounds())</span><br><span class="line"></span><br><span class="line">    onRouteSelection(routes[<span class="number">0</span>])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了在地图上高亮出选中的路线，就需要给Polyline指定不同的制图符号，</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routeLineStyles = &#123;</span><br><span class="line">  normal: &#123; <span class="attr">strokeColor</span>: <span class="string">'rgba(0, 85, 170, 0.5)'</span>, <span class="attr">lineWidth</span>: <span class="number">3</span> &#125;,</span><br><span class="line">  selected: &#123; <span class="attr">strokeColor</span>: <span class="string">'rgba(255, 0, 0, 0.7)'</span>, <span class="attr">lineWidth</span>: <span class="number">7</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>路线选择的目的是为了允许用户用户点选prefer的道路，因此我们需要增加一个函数，允许渲染引擎更改道路的符号，<code>onRouteSelection()</code>。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onRouteSelection = <span class="function"><span class="keyword">function</span> (<span class="params">route</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'A route has been selected.'</span>, route)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了测试以上逻辑的正确与否，做个简单测试，在onSuccess()中调用onRouteSelection()，并且将返回结果中的第一条路线作为参数传入。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pass the first route as argument for temperary testing</span></span><br><span class="line">onRouteSelection(routes[<span class="number">0</span>])</span><br></pre></td></tr></table></figure>
<p>到这里，你可能会发现被选中的道路可能位于其他道路之下，因此在道路的公共部分出现了叠加的多层效果。为了确保所选道路在所有道路之上显示，我们可以设置下渲染顺序，即 z-index。如下例子中，10 为更接近上层的渲染顺序。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> (selectedRoute) &#123;</span><br><span class="line">      selectedRoute.routeLine.setStyle(routeLineStyles.normal).setZIndex(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    route.routeLine.setStyle(routeLineStyles.selected).setZIndex(<span class="number">10</span>)</span><br><span class="line">    selectedRoute = route</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样就清爽了很多。</p>
<p><img src="http://kikitamap.com/images/blogImg/Icecream_Part4_Adcanced_Routing_2.png" alt=""></p>
<h3 id="3-Route-Selection-Panel"><a href="#3-Route-Selection-Panel" class="headerlink" title="3 Route Selection Panel"></a>3 Route Selection Panel</h3><p>这一步我们最后完善与道路的“交互”。 增加一个小的面板指示已经选择的道路。我们将这一部分的功能也放到另外一个独立的脚本文件中，在 scripts目录下新建一个<code>routes_panel.js</code>的文件。当然，不要忘记在 html 页面中增加加载此脚本文件的语句。 <code>&lt;script src=&quot;scripts/routes_panel.js&quot;&gt;&lt;/script&gt;</code></p>
<p>另外，在html文件中需要增加一个容器来渲染路线选择面板。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"route-panel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>定义 <em>HERERoutesPanel</em> 类，用于渲染路线选择面板中的内容，详见我的GitHub 中 <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/blob/master/Part4_Advanced_Routing_SS5_selectionPanel/scripts/routes_panel.js" target="_blank" rel="noopener"> <strong>routes_panel.js</strong></a> 的内容。</p>
<p><img src="http://kikitamap.com/images/blogImg/Icecream_Part4_Adcanced_Routing_Panel.png" alt=""></p>
<h3 id="4-Directions"><a href="#4-Directions" class="headerlink" title="4 Directions"></a>4 Directions</h3><p>HERE Routing API 也会返回自然语言形式的导航信息（direction information），继续再 <code>HERERoutesPanel</code>类中增加内容：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> renderRouteElement = <span class="function"><span class="keyword">function</span> (<span class="params">route, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> element = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> routeSummary = route.route.summary</span><br><span class="line">    element.innerHTML = renderRouteTitle(routeSummary, i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> maneuvers = route.route.leg[<span class="number">0</span>].maneuver</span><br><span class="line">    element.innerHTML += renderManeuvers(maneuvers)</span><br></pre></td></tr></table></figure>
<p>上面代码中， <code>leg</code> 是什么？ 一个<code>leg</code>代表的是两个 waypoint之间的路线部分，求算一条路线至少要有起点和终点两个 waypoint，其他的waypoint 可以是途经点。见 Developer doc：<a href="https://developer.here.com/documentation/routing/topics/waypoints.html" target="_blank" rel="noopener">Waypoints</a> 。</p>
<p>看起来HERE已经提供了 pre-formatted maneuver instruction string，那么就直接用好了。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> renderManeuvers = <span class="function"><span class="keyword">function</span> (<span class="params">maneuvers</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> [</span><br><span class="line">     <span class="string">'&lt;ol class="directions"&gt;'</span>,</span><br><span class="line">     maneuvers.map(<span class="function"><span class="keyword">function</span> (<span class="params">maneuver</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">'&lt;li&gt;'</span> + maneuver.instruction + <span class="string">'&lt;/li&gt;'</span></span><br><span class="line">     &#125;).join(<span class="string">''</span>),</span><br><span class="line">     <span class="string">'&lt;/ol&gt;'</span></span><br><span class="line">   ].join(<span class="string">''</span>)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>这篇Tutorial的原文巨长，看得我一度想放弃，因为最近工作忙碌的关系，断断续续总算看完了； 并且参照原文思路和示例代码review完结。</p>
<p><img src="http://kikitamap.com/images/blogImg/Icecream_Part4_Adcanced_Routing_Direction.png" alt=""></p>
<p><br></p>
<p><em>original resource</em>  <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-4-advanced-routing" target="_blank" rel="noopener">Part4: Advanced Routing</a></p>
<p><em>complete code</em>   <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part4_Advanced_Routing_SS5_selectionPanel" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Javascript </tag>
            
            <tag> Routing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HERE MAP API - Part4 Advanced Routing - 1]]></title>
      <url>/2019/03/06/Icecream_Part4_Advanced_Routing_1/</url>
      <content type="html"><![CDATA[<p>在 Part 3 中我们了解到如何调用 HERE Routing API 实现两点间路径规划，以及如何从当前位置出发规划路径。</p>
<p>这个部分继续来看看，如何展示多条路线及其信息，并允许用户交互选择。</p>
<h3 id="Pre-session-重构代码"><a href="#Pre-session-重构代码" class="headerlink" title="Pre-session: 重构代码"></a>Pre-session: 重构代码</h3><p>这一部分不是改进功能，而是整理思绪。磨刀不误砍柴工，放之四海而皆准。</p>
<p>冰淇凌小网页的功能不断增多，代码也随之膨胀，我们要时不时地整理收纳一下，避免自己在找乐子的路上备受打击。</p>
<p>在 Scripts 文件夹中，新建：</p>
<ul>
<li>map.js  用于存放和<strong>底图</strong>及<strong>绘制路线</strong>相关的逻辑；</li>
<li>utils.js  用于存放<strong>辅助功能</strong>，例如，将 latlog 坐标转化成 WayPointString 以供 Routing Service 使用。</li>
</ul>
<p>代码与Part 3 类似，但是因为做了重构，需要注意其中的调用关系及 html页面中的加载顺序。</p>
<p><em>complete code</em>  <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part4_Advanced_Routing_SS1_refactor" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>
<h3 id="Multiple-Routes"><a href="#Multiple-Routes" class="headerlink" title="Multiple Routes"></a>Multiple Routes</h3><p>在日常导航出行时，多给出几条路线供用户选择，也是一个极常见的需求。</p>
<p>使用 HERE Routing API 计算路线时，可在请求中加入参数 <code>alternatives</code> 来获得多个推荐路线。</p>
<p>alternatives: 2； 即，1 (primary) + 2 (alternatives) = 3  条路线。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HEREMap.prototype.drawRoute = <span class="function"><span class="keyword">function</span> (<span class="params">fromCoordinates, toCoordinates</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> routeOptions = &#123;</span><br><span class="line">        mode: <span class="string">'fastest;car'</span>,</span><br><span class="line">        representation: <span class="string">'display'</span>,</span><br><span class="line">        # add parameter</span><br><span class="line">        alternatives: <span class="number">2</span>,</span><br><span class="line">        waypoint0: Utils.locationToWaypointString(fromCoordinates),</span><br><span class="line">        waypoint1: Utils.locationToWaypointString(toCoordinates)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">this</span>.routes = <span class="keyword">new</span> HERERoute(<span class="keyword">this</span>.map, <span class="keyword">this</span>.platform, routeOptions);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>由于产生了多条道路，绘制道路的过程就要被执行多次，那么我们就把 <code>drawRoute</code> 函数挪到 <code>route.js</code> 中的 <code>HERERoute</code> 对象中，以供每次绘制道路调用。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Add drawRoute Function to HERERoute</span></span><br><span class="line">    <span class="keyword">var</span> drawRoute = <span class="function"><span class="keyword">function</span> (<span class="params">route</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> routeShape = route.shape;</span><br><span class="line">        <span class="keyword">var</span> LineString = <span class="keyword">new</span> H.geo.LineString();</span><br><span class="line"></span><br><span class="line">        routeShape.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">point</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> parts = point.split(<span class="string">','</span>);</span><br><span class="line">            LineString.pushLatLngAlt(parts[<span class="number">0</span>], parts[<span class="number">1</span>]);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> routeLine = <span class="keyword">new</span> H.map.Polyline(LineString, &#123;</span><br><span class="line">            style: &#123;</span><br><span class="line">                strokeColor: <span class="string">'blue'</span>,</span><br><span class="line">                lineWidth: <span class="number">3</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        map.addObject(routeLine);</span><br><span class="line">        <span class="comment">// map.setViewBounds(routeLine.getBounds());</span></span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<p>与此同时，做 <code>onSuccess</code>函数的对应修改，在返回结果中依次调用 <code>drawRoute</code>。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">       <span class="comment">// Simplify on success function</span></span><br><span class="line">       <span class="keyword">if</span> (result.response.route) &#123;</span><br><span class="line">           <span class="keyword">var</span> routes = result.response.route;</span><br><span class="line">           Setting view bounds</span><br><span class="line">           routes.forEach(drawRoute);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;;</span><br></pre></td></tr></table></figure>
<p>Bingo！</p>
<p><img src="http://kikitamap.com/images/blogImg/Icecream_Part4_Advanced_Routing.png" alt=""></p>
<h3 id="View-Bounds"><a href="#View-Bounds" class="headerlink" title="View Bounds"></a>View Bounds</h3><p>基本功能已实现，为了更好的体验，我们继续加工加工。</p>
<p>在 Part 3 中的我们通过 <code>setViewBounds</code>  将地图显示为路线的范围，在Part 4 中显然就不适用了，因为这样只会返回跳转到最后一条路线的范围。将所有的路线加入到一个组中，然后跳转组的范围，来解决这个问题。</p>
<p>对 <code>onSuccess</code> 进行修改：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (result.response.route) &#123;</span><br><span class="line">        <span class="keyword">var</span> routes = result.response.route;</span><br><span class="line">        <span class="comment">// Setting view bounds</span></span><br><span class="line">        <span class="comment">// routes.forEach(drawRoute);</span></span><br><span class="line">        <span class="comment">// add all routes to a group</span></span><br><span class="line">        <span class="keyword">var</span> routeLines = routes.map(drawRoute);</span><br><span class="line">        <span class="keyword">var</span> routeLineGroup = <span class="keyword">new</span> H.map.Group(&#123;</span><br><span class="line">            objects: routeLines</span><br><span class="line">        &#125;);</span><br><span class="line">        map.addObject(routeLineGroup);</span><br><span class="line">        map.setViewBounds(routeLineGroup.getBounds());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>同时移除 <code>drawRoute</code> 中原先的 <code>setViewBounds</code>语句，并向 <a href="https://developer.here.com/documentation/maps/topics_api/h-map-group.html" target="_blank" rel="noopener">H.map.Group</a> 容器中增加返回的route。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setting view bounds using Group bounds not the last route</span></span><br><span class="line"><span class="comment">// map.addObject(routeLine);</span></span><br><span class="line"><span class="comment">// map.setViewBounds(routeLine.getBounds());</span></span><br><span class="line"><span class="keyword">return</span> routeLine;</span><br></pre></td></tr></table></figure>
<p><br></p>
<p><em>original resource</em>  <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-4-advanced-routing" target="_blank" rel="noopener">Part4: Advanced Routing</a></p>
<p><em>complete code</em>   <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part4_Advanced_Routing_SS2_multiRoutes" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Javascript </tag>
            
            <tag> Routing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HERE MAP API - Part3 Basic Routing]]></title>
      <url>/2019/03/05/Icecream_Part3_Basic_Routing/</url>
      <content type="html"><![CDATA[<p>Part 1 中我们准备了底图，Part 2 中我们获取了位置，现在终于开张了，“您有新的  ‘ 饿了乎 ’  订单到了！”  我们给外卖小哥规划下路线吧！</p>
<h3 id="1-Routing-Service"><a href="#1-Routing-Service" class="headerlink" title="1 Routing Service"></a>1 Routing Service</h3><p>首先，HERE Map API 中提供了一个叫做 Platform 的类，实例化Platform后，我就可以借以访问 HERE Routing Service。 有关 Routing API 的帮助文档，点<a href="https://developer.here.com/documentation/routing/topics/what-is.html" target="_blank" rel="noopener">这里</a>。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> platform = <span class="keyword">new</span> H.service.Platform(&#123;</span><br><span class="line">		app_id: <span class="string">'[YOUR APP ID HERE]'</span>,</span><br><span class="line">		app_code: <span class="string">'[YOUR APP CODE HERE]'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = platform.getRoutingService();</span><br></pre></td></tr></table></figure>
<h3 id="2-Request-Route"><a href="#2-Request-Route" class="headerlink" title="2 Request Route"></a>2 Request Route</h3><p>在发请求之前，需要先至少定义起点和终点，或者必要的时候增加途经点，这些点是通过 <code>WayPointParameterType</code> 对象传递。</p>
<p>为了让代码更简洁易维护，我们在 <code>scripts</code> 目录下创建一个 <code>route.js</code>文件，取代开始直接在 <code>app.js</code>中直接调用 Routing Service 的繁琐。如下，在 route.js 中增加一个用于封装 底图、platform对象、路径规划参数的 <code>HERERoute</code>函数，这个函数也会在浏览器控制台返回简单的错误日志。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// build a function to take the map and platform objects as parameters</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HERERoute</span> (<span class="params">map, platform, routeOptions</span>) </span>&#123;</span><br><span class="line"><span class="comment">// access the routing service by calling getRoutingService()</span></span><br><span class="line">    <span class="keyword">var</span> router = platform.getRoutingService();</span><br><span class="line"><span class="comment">// error handling    </span></span><br><span class="line">    <span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Route found!'</span>, result);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> onError = <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.error(<span class="string">'Oh no! There was some communication error!'</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    router.calculateRoute(routeOptions, onSuccess, onError);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-Drawing-the-Route"><a href="#3-Drawing-the-Route" class="headerlink" title="3 Drawing the Route"></a>3 Drawing the Route</h3><p>现在我们可以在控制台看到 response，<strong>如何将 route 绘制到地图上呢</strong>？</p>
<p>在成功返回结果的函数中增加如下代码，其中 Option_2 的部分用于实现向地图绘制路径：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// Option_1 Simply put the response to the console log</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Route found!'</span>, result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Option_2 Furtherly draw the response to the map</span></span><br><span class="line">        <span class="keyword">var</span> route,</span><br><span class="line">            routeShape,</span><br><span class="line">            startPoint,</span><br><span class="line">            endPoint,</span><br><span class="line">            lineString;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (result.response.route) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Just take the first Route in the array</span></span><br><span class="line">            route = result.response.route[<span class="number">0</span>];</span><br><span class="line">            routeShape = route.shape;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// H.geo.LineString is recommended, instead of H.geo.Strip in the offical demo code</span></span><br><span class="line">            lineString = <span class="keyword">new</span> H.geo.LineString();</span><br><span class="line">            routeShape.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">point</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> parts = point.split(<span class="string">','</span>);</span><br><span class="line">                lineString.pushLatLngAlt(parts[<span class="number">0</span>], parts[<span class="number">1</span>]);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Utilize H.map.Polyline to draw a blue line</span></span><br><span class="line">            <span class="keyword">var</span> routeLine = <span class="keyword">new</span> H.map.Polyline(lineString, &#123;</span><br><span class="line">                style: &#123;</span><br><span class="line">                    strokeColor: <span class="string">'blue'</span>,</span><br><span class="line">                    lineWidth: <span class="number">10</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            map.addObject(routeLine);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// update the map bounds to that of our route</span></span><br><span class="line">            map.setViewBounds(routeLine.getBounds());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>备注</strong></p>
<ul>
<li>原文写得早一些，示例代码中 <code>H.geo.Strip</code>类已经从 HERE Maps JS API v3.0.15.0 及之后弃用了，需要使用 <code>H.geo.LineString</code> 类来替换。详情点 <a href="https://developer.here.com/documentation/maps/topics_api/h-geo-strip.html" target="_blank" rel="noopener">这里</a> 。</li>
<li>如上代码是我修改后的版本。</li>
</ul>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/Icecream_Part3_Basic_Routing.png" alt=""></p>
<h3 id="4-More"><a href="#4-More" class="headerlink" title="4 More"></a>4 More</h3><p>到 Steps 3 路径规划的功能基本实现了，Step 4 再增加一个获取当前位置作为起点，并将指定位置作为终点的功能吧。</p>
<p>例如，外卖小哥要给颐和园逛公园的小朋友送去冰凉可口的冰激凌……</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a small helper which converts a location into a waypoint</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">locationToWaypointString</span>(<span class="params">coordinates</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'geo!'</span> + coordinates.lat + <span class="string">','</span> + coordinates.lng;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// set a flag called RouteRendered</span></span><br><span class="line"><span class="comment">// to ensure that the route is only rendered the first time</span></span><br><span class="line"><span class="keyword">var</span> routeRendered = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updatePosition</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> coordinates = &#123;</span><br><span class="line">    lat: event.coords.latitude,</span><br><span class="line">    lng: event.coords.longitude</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates);</span><br><span class="line">  map.addObject(marker);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If the route has not been rendered yet, </span></span><br><span class="line">  <span class="comment">// calculate and render it</span></span><br><span class="line">  <span class="keyword">if</span> (!routeRendered) &#123;</span><br><span class="line">    <span class="keyword">var</span> route = <span class="keyword">new</span> HERERoute(map, platform, &#123;</span><br><span class="line">      mode: <span class="string">'fastest;car'</span>,</span><br><span class="line">      representation: <span class="string">'display'</span>,</span><br><span class="line">      waypoint0: locationToWaypointString(coordinates),</span><br><span class="line">      waypoint1: locationToWaypointString(EndCoordinates)</span><br><span class="line">    &#125;);</span><br><span class="line">    routeRendered = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// request the user's current location</span></span><br><span class="line">navigator.geolocation.watchPosition(updatePosition);</span><br></pre></td></tr></table></figure>
<p>结果大概是这样：</p>
<p><img src="http://kikitamap.com/images/blogImg/Icecream_Part3_Basic_Routing_current.png" alt=""></p>
<blockquote>
<p>由于相关法律的限制，HERE Developer 网站中提供免费试用的中国境内的 HERE 在线地图是非常粗略的等级（Entry Level），如下代码仅为了展示功能，并不为了较真位置的精确程度。</p>
<p> 当然，精密级别的 China HERE Map 也已经上线了 ，并且有 <a href="https://developer.here.com/documentation?variant=cn" target="_blank" rel="noopener">China Spec HLS API</a> 可供使用，只是没有默认包含在<a href="https://developer.here.com/documentation?create=Freemium-Basic&amp;keepState=true&amp;step=terms" target="_blank" rel="noopener">Global Freemium licenses</a> 之中。如果需要试用评估或购买，需要通过 <a href="https://developer.here.com/contact-us#contact-sales" target="_blank" rel="noopener">商务途径</a>；也可以留言我，我也愿意帮助联系。</p>
</blockquote>
<p><em>original resource</em>  <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-3-basic-routing" target="_blank" rel="noopener">Part3: Basic Routing</a></p>
<p><em>complete code</em>  <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part3_Basic_Routing" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Javascript </tag>
            
            <tag> Routing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HERE MAP API - Part2 Geolocation]]></title>
      <url>/2019/03/05/Icecream_Part2_Geolocation/</url>
      <content type="html"><![CDATA[<p>在 Part 1 地图底图准备好的基础之上，我们增加一个获取浏览器当前位置并持续更新的功能，来解决“Where am I ？”的问题。</p>
<p>具体可以通过浏览器的 Geolocation API 来实现。在app.js 脚本中，使用 <code>navigator.geolocation</code> 对象来访问此API。 <code>navigator.geolocation</code> 对象有这样几个方法：<code>getCurrentPosition()</code>，<code>watchPosition()</code>，<code>clearWatch()</code>， 可以帮助我们实现开始的需求。</p>
<h3 id="1-获取位置"><a href="#1-获取位置" class="headerlink" title="1 获取位置"></a>1 获取位置</h3><p>首先，通过 <code>getCurrentPosition()</code> 一次性获取浏览器当前位置，在 app.js 中使用如下代码 </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">navigator.geolocation.getCurrentPosition(success[, error[, options]]);</span><br></pre></td></tr></table></figure>
<p>各个浏览器都有 Geolocation API 的支持，建议参考相关的帮助文档。这个Demo建议在 Firefox 中测试，因为Chrome似乎禁用从本地文件访问位置。你可以根据需要增加获取位置是否成功后的行为，详情查看 <a href="https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions" target="_blank" rel="noopener">Firefox的开发者文档</a>。 </p>
<p><img src="http://kikitamap.com/images/blogImg/Icecream_Part2_Geolocation.png" alt=""></p>
<h3 id="2-持续更新位置"><a href="#2-持续更新位置" class="headerlink" title="2 持续更新位置"></a>2 持续更新位置</h3><p><code>watchPosition()</code> 用于持续“关注” 客户端位置的变化，在每次变化之后，都会将新的位置返回。在 app.js 中增加如下代码，用于在当前位置不断地显示“冰激凌”。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updatePosition</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> coordinates = &#123;</span><br><span class="line">    lat: event.coords.latitude,</span><br><span class="line">    lng: event.coords.longitude</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> iconUrl = <span class="string">'./images/icecream.svg'</span>;</span><br><span class="line">  <span class="keyword">var</span> iconOptions = &#123;</span><br><span class="line">    size: <span class="keyword">new</span> H.math.Size(<span class="number">26</span>, <span class="number">34</span>),</span><br><span class="line">    anchor: <span class="keyword">new</span> H.math.Point(<span class="number">14</span>, <span class="number">34</span>)</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> markerOptions = &#123;</span><br><span class="line">    icon: <span class="keyword">new</span> H.map.Icon(iconUrl, iconOptions)</span><br><span class="line">  &#125;;</span><br><span class="line">   <span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates, markerOptions);</span><br><span class="line">  map.addObject(marker);</span><br><span class="line">  map.setCenter(coordinates);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Action</span></span><br><span class="line">navigator.geolocation.watchPosition(updatePosition);</span><br></pre></td></tr></table></figure>
<p><img src="http://kikitamap.com/images/blogImg/Icecream_Part2_Geolocation_view.png" alt=""></p>
<p><em>original resource</em>    <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-2-geolocation" target="_blank" rel="noopener">Part2: Geolocation</a></p>
<p><em>complete code</em>    <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part2_Geolocation" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HERE MAP API - Part1 Basemap Setup]]></title>
      <url>/2019/03/05/Icecream_Part1_Basemap_Setup/</url>
      <content type="html"><![CDATA[<p>Quick Start for HERE Map Javascript API</p>
<p>HERE 官网有一个很有趣的Tutorial， <strong>Who wants ice cream !?</strong> </p>
<p>如果你注册了HERE Developer 账号，很可能会被推送到这个教程的小广告。</p>
<p>假设你是冰激凌店的老板，那么用HERE Map 做个交互式的地图小网页，边测试边记录。</p>
<p><strong><em>Let’s get our hands dirty……</em></strong></p>
<h3 id="1-准备资源"><a href="#1-准备资源" class="headerlink" title="1. 准备资源"></a>1. 准备资源</h3><p>准备如下结构的目录和文件：</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">WhoWantsIceCream</span><br><span class="line"><span class="string">|--base_map_set_up.html</span></span><br><span class="line"><span class="string">|--scripts</span></span><br><span class="line">	<span class="string">|--app.js</span></span><br><span class="line"><span class="string">|--images</span></span><br><span class="line">	<span class="string">|--icecream.svg</span></span><br><span class="line"><span class="string">|--styles</span></span><br><span class="line">	<span class="string">|--main.css</span></span><br></pre></td></tr></table></figure>
<h3 id="2-设计页面"><a href="#2-设计页面" class="headerlink" title="2.  设计页面"></a>2.  设计页面</h3><p>HTML 的 <code>head</code> 中引用 HERE Map JS API 以及必要的 CSS；</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> Who Want's Icecream ? <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- HERE Javascript SDK modules --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-ui.css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-core.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-service.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-ui.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"https://js.api.here.com/v3/3.0/mapsjs-mapevents.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Styles --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"styles/main.css"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>HTML的 <code>body</code> 中需要至少包含一个<code>div</code> ，用于作为 地图显示的容器； 以及引用<code>js</code>来完成 map 的规定动作。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Container for the map --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"map-container"</span> <span class="attr">class</span>=<span class="string">"map"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Scripts --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"scripts/app.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3-交互式地图底图"><a href="#3-交互式地图底图" class="headerlink" title="3. 交互式地图底图"></a>3. 交互式地图底图</h3><p><strong>增加如下内容到 app.js</strong> </p>
<p>1 从HERE Developer 网站申请账号，获取 APPID 和 APPCODE ，在初始化服务时使用。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Get Map Container Element</span></span><br><span class="line"><span class="keyword">var</span> mapContainer = <span class="built_in">document</span>.getElementById(<span class="string">'map-container'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Specify the APPID &amp; APPCODE</span></span><br><span class="line"><span class="keyword">var</span> platform = <span class="keyword">new</span> H.service.Platform(&#123;</span><br><span class="line">  app_id: <span class="string">'oyNWTb---PMlrXxCH'</span>, <span class="comment">// // &lt;-- ENTER YOUR APP ID HERE</span></span><br><span class="line">  app_code: <span class="string">'_W_7qfgp-----tQQKkbLA'</span>, <span class="comment">// &lt;-- ENTER YOUR APP CODE HERE</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>2 创建 Map 对象，并指定初始化时的位置、显示级别、底图样式…… everything as you wish……</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ----------------------------------------------------------------------- </span></span><br><span class="line"><span class="comment">// Displaying a Basic Map， Initialize Map Object</span></span><br><span class="line"><span class="comment">// Create Defaulr Layer</span></span><br><span class="line"><span class="keyword">var</span> defaultLayers = platform.createDefaultLayers();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Adjust the Map Center and the Initial Zoom Level </span></span><br><span class="line"><span class="keyword">var</span> coordinates = &#123;</span><br><span class="line">  lat: <span class="number">52.530974</span>, <span class="comment">// HERE HQ in Berlin, Germany</span></span><br><span class="line">  lng: <span class="number">13.384944</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> mapOptions = &#123;</span><br><span class="line">  center: coordinates,</span><br><span class="line">  zoom: <span class="number">14</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> H.Map(</span><br><span class="line">  mapContainer,</span><br><span class="line">  defaultLayers.normal.map,</span><br><span class="line">  mapOptions);</span><br></pre></td></tr></table></figure>
<p>3  让地图动起来，至少可以平移缩放，很简单的一段即可。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ----------------------------------------------------------------------- </span></span><br><span class="line"><span class="comment">// Interacting with the map, at least move around and zoom in / out</span></span><br><span class="line"><span class="keyword">var</span> behavior = <span class="keyword">new</span> H.mapevents.Behavior(<span class="keyword">new</span> H.mapevents.MapEvents(map));</span><br></pre></td></tr></table></figure>
<p>4 给地图中心加个图标， 换成一个自定义的也成。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// Adding Markers to the Map</span></span><br><span class="line"><span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Custom Icons for Markers</span></span><br><span class="line"><span class="keyword">var</span> iconUrl = <span class="string">'./images/icecream.svg'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> iconOptions = &#123;</span><br><span class="line">	<span class="comment">// The icon's size in pixel:</span></span><br><span class="line">  size: <span class="keyword">new</span> H.math.Size(<span class="number">26</span>, <span class="number">34</span>),</span><br><span class="line">	<span class="comment">// The anchorage point in pixel, </span></span><br><span class="line">	<span class="comment">// defaults to bottom-center</span></span><br><span class="line">  anchor: <span class="keyword">new</span> H.math.Point(<span class="number">14</span>, <span class="number">34</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> markerOptions = &#123;</span><br><span class="line">   icon: <span class="keyword">new</span> H.map.Icon(iconUrl, iconOptions)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> marker = <span class="keyword">new</span> H.map.Marker(coordinates, markerOptions);</span><br><span class="line">map.addObject(marker);</span><br></pre></td></tr></table></figure>
<p>TIPS 加个监听，可以在你改变窗口尺寸的时候，自动更新地图的尺寸。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ----------------------------------------------------------------------- </span></span><br><span class="line"><span class="comment">// Set Event Listener to Make Map React Properly</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  map.getViewPort().resize();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>这就完成 Interactive Basemap 了，Have fun！</p>
<p> <img src="http://kikitamap.com/images/blogImg/Icecream_Part1_Basemap_Setup.png" alt=""></p>
<p><em>original resource</em>  <a href="https://developer.here.com/blog/who-wants-ice-cream-a-here-maps-api-for-javascript-tutorial-part-1-basic-map-set-up" target="_blank" rel="noopener">Part1: Basic Map Set-up</a></p>
<p><em>complete code</em>    <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/tree/master/Part1_Basic_Map_Set_up" target="_blank" rel="noopener">Github - kikitaMoon/HERE_JS_Who_Wants_Icecream</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HERE Map </tag>
            
            <tag> HLS </tag>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决七牛云存储bucket无法访问问题]]></title>
      <url>/2018/11/11/qiniuIssue/</url>
      <content type="html"><![CDATA[<p>因为工作的事情，最近忙于切换节奏适应新环境，有一个月没来 kikitaMap “巡检”了。果然昨天发现了小故障，七牛云存储的存储空间的临时域名失效了，之上的我的图床也就挂了。涉及到的对象：<a href="https://kikitamap.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/" target="_blank" rel="noopener">碎碎念</a> 、<a href="http://kikitamap.com/categories/%E7%9B%B8%E6%9C%BA%E9%87%8C/" target="_blank" rel="noopener">相机里</a> 中的全部图片和 <a href="https://kikitamap.com/categories/%E6%9C%A8%E5%B7%A5%E5%BC%80%E7%89%A9/" target="_blank" rel="noopener">木工开物</a> 的小部分博客中图片。Just too bad …</p>
<h2 id="解决方法建议"><a href="#解决方法建议" class="headerlink" title="解决方法建议"></a>解决方法建议</h2><p>这种情况下只能发工单联系技术支持了，七牛的技术支持回复比较及时，给出了解决方案，如下：</p>
<blockquote>
<p>有两种方式来获取文件：</p>
<p>1.<br>您需要先新建一个同区域存储空间，会分配一个新的测试域名到新空间。<br>通过qshell batchcopy 到有域名的同区域空间然后再进行qdownload下载操作<br>1）<code>qshell listbucket 原bucket名 list.txt</code><br>​       （list出全部文件，<a href="https://github.com/qiniu/qshell/blob/master/docs/listbucket.md" target="_blank" rel="noopener">listbucket的文档</a>）<br>2）<code>cat list.txt | awk &#39;{print $1}&#39; &gt;list_final.txt</code><br>​       （用awk获取list结果的第一列）<br>3）<code>qshell batchcopy 原bucket名 新bucket名 list_final.txt</code><br>​       （复制到新bucket的文件和原bucket文件名一致，<a href="https://github.com/qiniu/qshell/blob/master/docs/batchcopy.md" target="_blank" rel="noopener">batchcopy的文档</a>）<br>4）<code>qshell qdownload newfilelist.txt</code><br>​      （newfilelist.txt为下载的<a href="https://github.com/qiniu/qshell/blob/master/docs/qdownload.md" target="_blank" rel="noopener">配置文档</a>）<br> <br>qshell安装包及文档请参考<br> <a href="https://developer.qiniu.com/kodo/tools/1302/qshell" target="_blank" rel="noopener">https://developer.qiniu.com/kodo/tools/1302/qshell</a></p>
<p>如果您不熟悉命令行工具的安装使用，也可以结合文档最后提供的视频教程<br> <a href="https://developer.qiniu.com/kodo/tools/1302/qshell#9" target="_blank" rel="noopener">https://developer.qiniu.com/kodo/tools/1302/qshell#9</a><br> <br>2.<br>使用工具qrsctl<br><a href="https://developer.qiniu.com/kodo/tools/1300/qrsctl" target="_blank" rel="noopener">https://developer.qiniu.com/kodo/tools/1300/qrsctl</a><br><code>qrsctl get &lt;bucket&gt; &lt;file&gt; &lt;file&gt;</code></p>
</blockquote>
<h2 id="实践过程"><a href="#实践过程" class="headerlink" title="实践过程"></a>实践过程</h2><p>选择了第一种方式，问题解决，因为看起来像是批量的。</p>
<p>按照提示下载的zip包类似 qshell-v2.2.0.zip 这样的名字，里面包含了Windows，Linux，Mac各操作系统使用的程序。</p>
<p>我以Mac为例，使用Mac自带的 Commandline 访问解压之后的文件夹 qshell-v2.2.0。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kikitamoondeMBP:SoftwareSetup kikitamoon$ cd qshell-v2.2.0</span><br><span class="line">kikitamoondeMBP:qshell-v2.2.0 kikitamoon$ ls</span><br><span class="line">qshell-darwin-x64	qshell-linux-x64	qshell-windows-x64.exe</span><br><span class="line">qshell-linux-arm	qshell-linux-x86	qshell-windows-x86.exe</span><br></pre></td></tr></table></figure>
<p>其中 qshell-darwin-x64 是Mac可用的 Qshell 版本。在使用Qshell之前需要配置账户信息，qshell account即可设置AK和SK。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64</span></span><br><span class="line">Use help or help [cmd1 [cmd2 [cmd3 ...]]] to see supported commands.</span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 account</span></span><br><span class="line">Open account file error, open /Users/kikitamoon/.qshell/account.json: no such file or directory, please use `account` to set AccessKey and SecretKey first</span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 account &lt;AK&gt; &lt;SK&gt;</span></span><br></pre></td></tr></table></figure>
<p>接着使用七牛技术支持给出的建议，将旧库的文件list出来，然后batchcopy到新库中。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 listbucket kikitamapgallery list.txt</span></span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> cat list.txt | awk <span class="string">'&#123;print $1&#125;'</span> &gt;list_final.txt</span></span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 batchcopy kikitamapgallery kikitamapgallerycopy list_final.txt</span></span><br></pre></td></tr></table></figure>
<p>最后，通过 qdownload 命令下载所有源文件。在执行命令之前还需要做个配置文件，download.conf ; 并且可以设置开几个任务并行下载。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">kikitamoon$</span><span class="bash"> ./qshell-darwin-x64 qdownload 4 download.conf</span></span><br><span class="line"></span><br><span class="line">Writing download log to file /Users/kikitamoon/.qshell/qdownload/7d41b43ca364d28da34dbd030f1331be/7d41b43ca364d28da34dbd030f1331be.log</span><br><span class="line">Downloading MGKW_ArcGIS_Daemon.png [1/62, 1.6%] ...</span><br><span class="line">Downloading MGKW_ArcMapStartupLog.png [2/62, 3.2%] ...</span><br><span class="line">Downloading MGKW_BatchClip.png [3/62, 4.8%] ...</span><br><span class="line">Downloading MGKW_FeatureTable.png [4/62, 6.5%] ...</span><br><span class="line">Downloading MGKW_HelloArcGISPythonAPI.png [5/62, 8.1%] ...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">Downloading XJL_TripToGreece.png [61/62, 98.4%] ...</span><br><span class="line">Downloading XJL_TripToHongkong.png [62/62, 100.0%] ...</span><br><span class="line">See download log at path /Users/kikitamoon/.qshell/qdownload/7d41b43ca364d28da34dbd030f1331be/7d41b43ca364d28da34dbd030f1331be.log</span><br><span class="line"></span><br><span class="line"><span class="meta">kikitamoon$</span><span class="bash"></span></span><br></pre></td></tr></table></figure>
<p>至此，源图片文件算是都找回来了。当然我还需要把我的网站中使用到旧地址的位置update一下喽。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> Cloud Storage </tag>
            
            <tag> Webmaster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[矢量切片局部更新工具改进与工作收尾]]></title>
      <url>/2018/09/27/partialUpdateVTPKv3/</url>
      <content type="html"><![CDATA[<p>在<a href="http://kikitamap.com/2018/08/13/vectorTileBundle/" target="_blank" rel="noopener">上一篇博客</a>中提到工具还有投影坐标系支持和切片方案（.xml）自动获取的问题尚未解决，更新这篇的目的在于说明问题已经找到了workaround，并且新的版本已经在上周五（9.21）发布了。</p>
<h2 id="问题诊断过程"><a href="#问题诊断过程" class="headerlink" title="问题诊断过程"></a>问题诊断过程</h2><p>这两个问题其实本质上是一个问题。</p>
<p>我们知道，当需要生成矢量切片的地图的坐标系不是 3857（web mercator）时，ArcGIS Pro 提供的 Create Vector Tile Package / Index 工具可以自动生成与地图的坐标系统一致的切片方案（.xml）文件，默认放置于 C:\Users\当前用户\AppData\Local\ESRI\Geoprocessing 下。<br>这是个极好的功能，但是通过python调用此工具时，这个功能是没有提供接口的。此处的疑惑，也咨询了Esri US 的工程师，确实arcpy没有提供像工具UI中的自动计算功能。</p>
<p>在最初的版本中，我尝试使用arcpy.GenerateMapServerCacheTilingScheme_server() 来生成xml文件，可以应对地理坐标系的地图。也是这个过程中遇到了切片原点传参失败<a href="http://kikitamap.com/2018/02/05/AlterXMLScheme/" target="_blank" rel="noopener">这个坑</a>。<br>投影坐标系的切片原点不像是地理坐标系一样简单粗暴，不同的投影方法都会导致不同的原点坐标，我想过将常用坐标系枚举出来，可是从工具的通用角度来讲，不是个好事。最佳的解决方法还是想办法生成相同的xml，至少可以获取工具生成的xml。</p>
<p>在上个版本的局部更新矢量切片工具中，我和马老师还自命名了“Advanced Vector Tile Package”的矢量切片包，我们在矢量切片包中还打包塞入了切片方案和切片索引面。这样，局部工具在更新这种包时，可以自动解析原包获取xml和index。但是，需要用户事先使用我们定制的 Create Advanced Vector Tile Package 工具来创建矢量切片包。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>考虑到用户在更新矢量切片之前，已经做过该地图的矢量切片，那么在User那个目录下已经有了对应的xml文件，那么我只要代码中获取了地图的坐标系，然后按照xml的命名规则顺藤摸瓜并顺手牵羊即可。<br>现实总是比想象骨感。ArcGIS Pro 的 arcpy 中提供的 Map 对象竟然没有提供查询其坐标系统的属性或方法…… 测试基于ArcGIS Pro 2.2.1，写这篇时的最新版本。相信新的版本早晚会有的。好在我还是找到了一个workaround：从map的defaultCamera属性中获取，如下图左边最下部分所示。（现在没有测试环境，图出自讨论时的聊天记录，将就看吧）<br><img src="http://kikitamap.com/images/blogImg/partialUpdateVTPKv3_defaultCamera.jpg" alt=""></p>
<p>使用这个思路之后，解决了本文开头提到的问题，但是要求用户本机user目录下事先有相关的xml文件，没有的话需要打开创建矢量切片工具自动生产一次。</p>
<p>工具的相关代码都进行了更新，采用了新的逻辑，目前可以支持矢量切片工具自身支持的全部坐标系统。并同时保留了，上个版本的局部更新工具中可以自动解析 Advanced Vector Tile Package 功能。<br><img src="http://kikitamap.com/images/blogImg/partialUpdateVTPKv3_AdvancedSupport.jpg" alt=""></p>
<h2 id="工具地址"><a href="#工具地址" class="headerlink" title="工具地址"></a>工具地址</h2><p><strong>Latest Version</strong>： <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools/releases/tag/3.1.0" target="_blank" rel="noopener">Partially Upate ArcGIS Vector Tiles Toolbox 3.1.0</a></p>
<h2 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h2><p>这个工具即与工作相关，又是业余之作。自己执念太重，希望在esri工作的最后一天归还机器前尽快改好发布出来，因为将来的投入时间和测试环境，不知道是否能够保证。自己可见的坑还是自己填好比较稳妥，哈。姑且把这个版本当成最后的latest版本吧。因为这个工具的更新，搞得最后一天的时间特别紧张，没有和很多同事道别，不过将来总有机会再见的。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Raster </tag>
            
            <tag> Geoprocessing </tag>
            
            <tag> Python </tag>
            
            <tag> Vector Tiles </tag>
            
            <tag> Cloud Storage </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Testing Report for Image Service]]></title>
      <url>/2018/08/30/cloudStorageImageService/</url>
      <content type="html"><![CDATA[<p>An image service of ArcGIS Server provides access to raster data through a web service.  ArcGIS Image Server is required to share a mosaic dataset.  This testing reporting indicates workflows and issues of sharing Image Service which is basing on a mosaic dataset referencing the raster dataset on a cloud storage.</p>
<p><strong>Local Testing Environment</strong></p>
<ul>
<li>Latest Esri Technologies<ul>
<li>ArcMap 10.6.1 ( both final release version and  early adopter version)</li>
<li>ArcGIS Enterprise 10.6.1 with ArcGIS Image Server 10.6.1</li>
</ul>
</li>
<li>Windows 10 Pro 64 bit English Version</li>
</ul>
<h2 id="Huawei-Cloud"><a href="#Huawei-Cloud" class="headerlink" title="Huawei Cloud"></a>Huawei Cloud</h2><p><strong>Steps</strong></p>
<ol>
<li><p>Create Huawei Cloud connection file                                                                (√)</p>
<p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_1Connection.png" alt=""></p>
</li>
<li><p>Add raster to a local mosaic dataset referencing the connection file          (√)</p>
<p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_2AddRaster.png" alt=""></p>
</li>
<li><p>Share the mosaic dataset as an image service                                                 (√)</p>
<p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_3Publishing.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_3Publishing2.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_4ServerMan.png" alt=""></p>
</li>
<li><p>Consume this service in various client browsers                                             (√)</p>
<p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_5MapViewer.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_6JSviewer.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_7ArcMap.png" alt=""></p>
</li>
</ol>
<h2 id="Alibaba-Cloud"><a href="#Alibaba-Cloud" class="headerlink" title="Alibaba Cloud"></a>Alibaba Cloud</h2><p><strong>Steps</strong></p>
<ol>
<li>Create Huawei Cloud connection file                                                                (√)</li>
<li>Add raster to a local mosaic dataset referencing the connection file          (√)</li>
<li>Share the mosaic dataset as an image service                                                 (√)</li>
<li>Consume this service in various client browsers                                             (×)</li>
</ol>
<p><strong>Explanation</strong></p>
<ul>
<li><p>It requires  EA version installed on English language windows OS to avoid the failure of step 1 and step 2.</p>
</li>
<li><p>Checkerboarding on image service at now. and new case summitted for diagnose this issue.</p>
<p><a href="https://my.esri.com/#/support/cases/02172207" target="_blank" rel="noopener">Internal Case #02172207</a> summited</p>
</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/cloudStorageImageService_8Issue.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Raster </tag>
            
            <tag> Geoprocessing </tag>
            
            <tag> Python </tag>
            
            <tag> Cloud Storage </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Testing Report for Raster Data Source in Cloud Storage]]></title>
      <url>/2018/08/15/cloudStorage4MD/</url>
      <content type="html"><![CDATA[<blockquote>
<p>For the purpose of assisting and sharing ,  I will try to write in English. </p>
</blockquote>
<p>The new tool <strong>Create Cloud Storage Connection File</strong> is first introduced to ArcGIS Desktop 10.6.1 which is the latest version until now.  The <a href="file:///C:/Program%20Files/ArcGIS/Pro/Resources/Help/pro-app/tool-reference/data-management/create-cloud-storage-connection-file.htm" target="_blank" rel="noopener">Create Cloud Storage Connection File</a> tool creates a connection file (<strong>*.acs</strong>) for ArcGIS-supported cloud storage.  It allows existing raster geoprocessing tools to <strong>write</strong> cloud raster format (CRF) datasets into the cloud storage bucket or <strong>read</strong> raster datasets (not limited to CRF) stored in the cloud storage as input.</p>
<p>This is an amazing new feature of ArcGIS Desktop, including <strong>ArcMap 10.6.1</strong> and <strong>ArcGIS Pro 2.2</strong>.  The stuff from one of our partners and I are doing some researching on the new capability.  This article is something about the testing report, which indicates the feasibility of various workflows for adding raster datasets to mosaic dataset. </p>
<p><br></p>
<p><strong>Local Testing Environment</strong></p>
<ul>
<li><p>Latest Esri Technologies</p>
<ul>
<li><p>ArcMap 10.6.1</p>
</li>
<li><p>ArcGIS Pro 2.2.1</p>
</li>
</ul>
</li>
<li>Windows 10 Pro 64 bit English Version</li>
</ul>
<p><br></p>
<p><br></p>
<h2 id="Huawei-Cloud"><a href="#Huawei-Cloud" class="headerlink" title="Huawei Cloud"></a>Huawei Cloud</h2><h3 id="ArcMap"><a href="#ArcMap" class="headerlink" title="ArcMap"></a>ArcMap</h3><ul>
<li><p><strong>Steps</strong></p>
<ol>
<li>Create Huawei Cloud connection file                              (√)</li>
<li>Add raster to a local mosaic dataset                               (√)</li>
</ol>
</li>
<li><p><strong>Conclusion</strong></p>
<ul>
<li>Bingo !   This workflow for source raster dataset in Huawei Cloud is perfect.</li>
</ul>
</li>
</ul>
<h3 id="ArcGIS-Pro"><a href="#ArcGIS-Pro" class="headerlink" title="ArcGIS Pro"></a>ArcGIS Pro</h3><ul>
<li><p><strong>Steps</strong></p>
<ol>
<li><p>Create Huawei Cloud connection file                             (√)</p>
</li>
<li><p>Add Raster to Mosaic Dataset                                         (×)</p>
<ul>
<li><p>Error Message as below:</p>
<p>Failed to execute. Parameters are not valid.</p>
<p>Error: 000732  Input Data: Dataset …\HuaWeiConnection.acs\…LGN00_MTL.txt does not exist or is not supported</p>
</li>
</ul>
</li>
<li><p>Trying  workaround:  Add Raster to Mosaic Dataset using arcpy  (python 3.x for ArcGIS Pro).   </p>
<p>For the purpose of verification ,  Add Raster to Mosaic Dataset using arcpy  (python 2.x for ArcMap), it works.                                                                                (√) </p>
</li>
</ol>
</li>
<li><p><strong>Conclusion</strong></p>
<ul>
<li><p>It should be a bug of ArcGIS Pro,  that the  tool <strong>Add Rasters To Mosaic Dataset</strong> can not recognize the logical file path including cloud connection.  The tool will justify the path if it exists. The path containing cloud connection is a logical path , not a physical path.   The same input file path works in ArcMap.</p>
</li>
<li><p>Internal case submitted <a href="https://my.esri.com/#/support/cases/02166069" target="_blank" rel="noopener">#02166069</a>  - <em>closed</em></p>
<p>Related bug:  <em>BUG-000116191</em> </p>
<p>Workaround:  Store the rasters in the root of the bucket, and add them from that location. </p>
</li>
</ul>
</li>
</ul>
<p>   <br></p>
<h2 id="ALiBaBa-Cloud"><a href="#ALiBaBa-Cloud" class="headerlink" title="ALiBaBa Cloud"></a>ALiBaBa Cloud</h2><p>   In China, we also call it ALiYun.</p>
<h3 id="ArcMap-1"><a href="#ArcMap-1" class="headerlink" title="ArcMap"></a>ArcMap</h3><ul>
<li><p><strong>Steps</strong></p>
<ol>
<li><p>Create ALiBaBa Cloud connection file   (×)</p>
<p>The connection file was created,  but there was a warning:  <em>WARNING 002574: Could not connect to cloud storage</em>  in the log </p>
</li>
<li><p>Create a mosaic dataset in a local file geodatabase   (√)</p>
</li>
<li><p>Add raster to mosaic dataset   (×) </p>
<p>An error occurred:  <em>Error: 8004205f: No new mosaic dataset item was added.</em>  </p>
<p>This error may due to the warning before, I think.</p>
</li>
</ol>
</li>
<li><p><strong>Conclusion</strong></p>
<ul>
<li><p>It may be a bug related to creating connection file to ALiBaBa Cloud Storage.  ArcPy (python 27) for ArcMap didn’t work, either.</p>
</li>
<li><p>Extra diagnose</p>
<ul>
<li><p>Using Fiddler to capture the HTTP(S) requests…</p>
<p>I have used Fiddler Software to catch the HTTP(S) requests made by ArcMap, but nothing was found. I had enable the https capture before testing. At the same time , I checked the Windows Task Manager and Resource Monitor that there was a lot of network activities.</p>
</li>
<li><p>Using Wireshark to  capture the network transaction …</p>
<p>Bad TCP records were found.</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="ArcGIS-Pro-1"><a href="#ArcGIS-Pro-1" class="headerlink" title="ArcGIS Pro"></a>ArcGIS Pro</h3><ul>
<li><p><strong>Steps</strong></p>
<ol>
<li>Create ALiBaBa Cloud connection file                              (×)</li>
<li>Create a mosaic dataset in a local file geodatabase      (√)</li>
<li>Add raster to mosaic dataset                                             (×)</li>
</ol>
</li>
<li><p><strong>Conclusion</strong></p>
<ul>
<li>Same issue with using HUAWEI cloud source data, and the issue points to the tool not to the cloud itself.</li>
<li>ArcPy (python 36) for ArcGIS Pro didn’t work, either.</li>
</ul>
</li>
</ul>
<p>Internal case submitted  <a href="https://my.esri.com/#/support/cases/02157762" target="_blank" rel="noopener">#02157762</a></p>
<p>Related bug:  <em>BUG-000116297</em></p>
<p>Workaround:  Internal Version 9226</p>
<p><br></p>
<h2 id="Custom-Cloud"><a href="#Custom-Cloud" class="headerlink" title="Custom Cloud"></a>Custom Cloud</h2><p>using s3 compatible cloud, for example,  Tencent Cloud.</p>
<ul>
<li><p><strong>Steps</strong></p>
<ol>
<li>Create Tencent Cloud connection file using ArcPy (python 27) for ArcMap </li>
<li>Capture network interaction information using WireShark<ul>
<li>As Amazon Provider selected, the region and endpoint will request Amazon CNAME address. In this condition, I don’t think the custom cloud works for now.</li>
</ul>
</li>
</ol>
</li>
<li><p>Internal case submitted</p>
<p><a href="https://my.esri.com/#/support/cases/02157772" target="_blank" rel="noopener">#02157772 Can Service End Point parameter be customized by users when connecting to the cloud storage ?</a> </p>
</li>
</ul>
<p><br></p>
<h2 id="Other-Issue"><a href="#Other-Issue" class="headerlink" title="Other Issue"></a>Other Issue</h2><p>failure with file Geodatabase transfer</p>
<ul>
<li><p><strong>Details</strong></p>
<p>When the file geodatabase was copied to a new location ,which was some scheme of path as before, on the other new machine . The mosaic dataset didn’t show up the source raster data at all. </p>
</li>
<li><p>Internal case submitted</p>
<p><a href="https://my.esri.com/#/support/cases/02165287" target="_blank" rel="noopener">#02165287 how to transfer mosaic dataset referencing raster dataset in cloud storage</a> </p>
</li>
</ul>
<p><br></p>
<p><br></p>
<p>The information above is valid as the day it published, I will try my best to have it up to date.</p>
<p>Thank you for reviewing.</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Raster </tag>
            
            <tag> Geoprocessing </tag>
            
            <tag> Python </tag>
            
            <tag> Cloud Storage </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[探索矢量切片的Bundle]]></title>
      <url>/2018/08/13/vectorTileBundle/</url>
      <content type="html"><![CDATA[<p>为什么会有这个需求和想法呢？还是源自于 <a href="http://kikitamap.com/2018/07/20/lovelyGit/" target="_blank" rel="noopener"><strong>局部更新矢量切片</strong></a> 的想法，当我们遭遇一个海量矢量数据的矢量切片<strong>创建</strong>和<strong>更新</strong>任务时，希望尽可能少且尽可能准确地更新受影响的bundle，而不是全局，那么了解bundle的范围是十分必要的。在写上一篇<a href="http://kikitamap.com/2018/07/23/CompactCache/" target="_blank" rel="noopener"><strong>《紧凑型缓存技术小结》</strong></a>的时候，目的在于在其基础之上探索矢量切片的bundle。</p>
<p>为了确保单个bundle文件的矢量切片数据的完整性，每级每次至少需要更新一个bundle文件。当矢量切片的数据量不显著的时候，可能每级本身也就一个或几个bundle，那局部更新体现不出它的优势； 当某些等级（例如LOD比较大的级别）矢量切片bundle非常多的时候，如果更新的范围只影响了其中一个，或者几个文件时，局部更新是有必要的。</p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>参照栅格切片的 <a href="http://enterprise.arcgis.com/en/server/latest/publish-services/windows/inside-the-compact-cache-storage-format.htm" target="_blank" rel="noopener">帮助文档</a> 中明确说明的，  “A bundle contains up to 16,384 tiles. ”   那就是 128 × 128 的关系，照搬到矢量切片是否适用呢？ 通过验证，确实如此。</p>
<p>先上结论，第N级的矢量切片的bundle范围刚好是第N-7级的切片范围，如下图，红线是 level 6 的切片索引，刚好可以作为level 13 的bundle范围：</p>
<p><img src="http://kikitamap.com/images/blogImg/vectorTileBundle_bundlelevel.png" alt=""></p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>为了做验证和测试，我用了美国大选的区块数据做实验，这个面数据包含182895条记录，节点较多，很适合做矢量切片。假设，需要更新的切片范围仅仅是密歇根湖的一角：</p>
<p><img src="http://kikitamap.com/images/blogImg/vectorTileBundle_UpdateDetails.png" alt=""></p>
<blockquote>
<p>PS：上图是完全由 ArcGIS Pro 制作导出的，使用到了 Layout , Extent Indicator; 从制图角度来说，ArcGIS Pro 是个非常好的桌面端应用，可以继承和超越ArcMap。 </p>
</blockquote>
<p>以13级为例，更新的这一角仅需替换一个bundle：</p>
<p><img src="http://kikitamap.com/images/blogImg/vectorTileBundle_BundleReplace.png" alt=""></p>
<p>那么自定义工具 Create Part Vector Tile Package 所要做的工作，逻辑就变得非常清晰，也就是通过用户提供的待更新区域（AOI）来计算每级被影响到的bundle文件的地理范围，从而进行bundle的替换工作；包含了为其服务的，解包、打包、解析类的工作。</p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><strong>Latest Version：</strong>   <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools/releases/tag/2.1.1" target="_blank" rel="noopener">Partially Upate ArcGIS Vector Tiles Toolbox 2.1.1</a></p>
<p><strong>待解决的问题</strong>：</p>
<ul>
<li>投影坐标系和自定义坐标系支持</li>
<li>tile scheme 原生获取</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ArcGIS Pro </tag>
            
            <tag> ArcGIS Enterprise </tag>
            
            <tag> Web </tag>
            
            <tag> Vector Tiles </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[紧凑型缓存技术小结]]></title>
      <url>/2018/07/23/CompactCache/</url>
      <content type="html"><![CDATA[<h2 id="Tiling-Scheme"><a href="#Tiling-Scheme" class="headerlink" title="Tiling Scheme"></a>Tiling Scheme</h2><p>每个缓存服务的切片目录中都会包含一个 <strong>Conf.xml</strong>，也是就是tile scheme 文件了。</p>
<p>这个文件包含了很多有关切片设置的信息：</p>
<ul>
<li>Spatial reference information</li>
<li>Tile origin</li>
<li>Tile width/height</li>
<li>DPI</li>
<li>LODs (Levels of detail - scales)</li>
<li>Tile Image format</li>
<li>Compression quality</li>
<li>Antialiasing settings</li>
<li>Storage method</li>
</ul>
<h2 id="Version-Issue"><a href="#Version-Issue" class="headerlink" title="Version Issue"></a>Version Issue</h2><p>紧凑型缓存的存储格式为<strong>.bundle</strong> 。但有时我们会看到缓存目录中包含<strong>.bundlx</strong> 这样的文件，这说明这些缓存是ArcGIS 10.2.2 或以下版本创建的。从 ArcGIS 10.3 开始，紧凑型缓存做了些改进， .bundlx（tile index information） 文件被包含到了 .bundle 文件中 ，从而进一步降低了文件的数量。</p>
<p>你可以在缓存服务的tiling scheme “<strong>Conf.xml</strong>“ 中查看确认：</p>
<p><em>10.3 or later (Compact cache V1)</em></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">CacheStorageInfo</span> <span class="attr">xsi:type</span>=<span class="string">'typens:CacheStorageInfo'</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">StorageFormat</span>&gt;</span>esriMapCacheStorageModeCompact<span class="tag">&lt;/<span class="name">StorageFormat</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">PacketSize</span>&gt;</span>128<span class="tag">&lt;/<span class="name">PacketSize</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">CacheStorageInfo</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><em>10.2.2 or former (Compact cache V2)</em></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">CacheStorageInfo</span> <span class="attr">xsi:type</span>=<span class="string">'typens:CacheStorageInfo'</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">StorageFormat</span>&gt;</span>esriMapCacheStorageModeCompactV2<span class="tag">&lt;/<span class="name">StorageFormat</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">PacketSize</span>&gt;</span>128<span class="tag">&lt;/<span class="name">PacketSize</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">CacheStorageInfo</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>10.3 及之后版本的 ArcGIS Server 仍然可以使用低版本的生产的切片来运行现有服务。如果我们需要将低版本的缓存拷贝过来给高版本的服务用，要注意这个<code>&lt;StorageFormat&gt;</code>参数的一致性。</li>
<li>ArcToolbox工具 <strong>Upgrade Map Server Cache Storage Format</strong>  来升级缓存。升级的过程中不会重新创建切片，而是重组原有的切片。这个工具在ArcGIS Pro 中没有提供。目前，我们还只能使用ArcMap或者使用ArcGIS Server 带有的arcpy包，通过Python来调用。</li>
<li>不支持将高版本的切片供低版本软件使用。如果希望降级，可以使用 <strong>Export Map Server Cache</strong> 工具导出紧凑型切片。</li>
</ul>
<h2 id="Tile-Format"><a href="#Tile-Format" class="headerlink" title="Tile Format"></a>Tile Format</h2><p>Tile Format 是指存储切片使用了何种栅格格式，而不是切片文件的本身存储格式 / Storage Format ( Exploded / Compact )。</p>
<ul>
<li><p><strong>PNG</strong>   </p>
<p>ArcGIS 10.1开始引入的类型。选择这种类型，Server会自行确认每张切片的PNG位深，从而达到缩减磁盘占用的目的。在我们不确定使用何种PNG格式时，保持这个默认设置就不错。</p>
<p>如果磁盘空间不在考虑范围下，而希望优先考虑切片速度，那最好选择MIXED格式了。</p>
</li>
<li><p><strong>PNG8</strong></p>
<p>位深为8位的PNG图片格式；可以最多存储256色，支持布尔透明，磁盘空间占用小，并且无损。适合于颜色相对简单，并且需要透明背景的地图，例如公路数据切图。</p>
</li>
<li><p><strong>PNG24</strong></p>
<p>位深为24的PNG图片格式；可以最多支持约1600万色。当地图的色彩复杂程度超过256时，你就该考虑使用这个格式。但是，PNG24不支持透明，另外不建议在IE6及以前版本浏览器中使用。</p>
</li>
<li><p><strong>PNG32</strong></p>
<p>在PNG24的基础上增加了Alpha通道，因而增加了各种程度半透明的支持。当地图色彩复杂，并开启了抗锯齿功能，PNG32就是最佳选择了，并且PNG32在各个版本的浏览器中支持良好。</p>
</li>
<li><p><strong>JPEG</strong></p>
<p>当切片中不需要透明背景时，JPEG是最常用的切片格式，并且JPEG可以hold住大量的复杂色彩。例如，包含影像、符号化精细程度高的矢量地图都可以使用这个格式。</p>
<p>JPEG是种有损压缩格式，可以在1%-100%间设置压缩比率，默认值75%一般是显示质量和磁盘空间的最佳平衡。如果觉得噪点过多质量不够，可以调高这个百分比，但你需要在响应性能和图片质量之间做好博弈。</p>
</li>
<li><p><strong>MIXED</strong></p>
<p>顾名思义，混合格式，在切片不透明区域使用JPEG，在透明区域使用PNG32。这是种非常智能的搭配方案，降低硬盘占用的同时，很好的解决了例如在切片边缘需要的透明需求。</p>
</li>
<li><p><strong>LERC</strong></p>
<p>LERC是Esri自主研发的开源的有损压缩格式，点<a href="http://esri.github.io/lerc/" target="_blank" rel="noopener">这里</a>有更多信息。推荐用于位深较大的单波段影像或高程数据服务中，如浮点型，32-bit、16-bit、12-bit的数据。 官方声称，LERC压缩方法在压缩速度和压缩质量方面分别是LZ77的5-10倍。当LERC用于整型栅格数据时，损失率在0.99或更低，几乎可以视为无损压缩。</p>
<p>LERC压缩方式目前只支持Image Service ，而不支持 Map Service。</p>
</li>
</ul>
<h2 id="Performance-Suggestion"><a href="#Performance-Suggestion" class="headerlink" title="Performance Suggestion"></a>Performance Suggestion</h2><p>紧凑型切片比松散型切片有诸多有点，详见文末的官方文档。但不是说选了紧凑型切片性能就没有继续改善的余地了，下面的这些点也是提升切片性能的一些有效建议：</p>
<ul>
<li>地图数据尽可能使用本地数据，共享目录的数据切片时间可能会更长些；</li>
<li>尽可能的避免使用动态投影；</li>
<li>设置图层的可见比例尺；</li>
<li>谨慎设置反锯齿的级别，标注的反锯齿对切片性能影响甚微，但要素符号的反锯齿会显著增长切片的时长；</li>
<li>建议切片期间关闭防病毒等安全软件；</li>
<li>尽可能地使用MIXED格式</li>
<li>在切片之前为所有数据创建空间索引</li>
<li>CachingTools服务的最大实例数 = 核数 + 1，这是官方给出的最佳实践建议</li>
<li>降低日志的级别，如果在大量切图任务中把Server日志开到Debug或Verbose级别，会产生极大的资源浪费。</li>
</ul>
<h2 id="Tile-SuperTile-Bundle"><a href="#Tile-SuperTile-Bundle" class="headerlink" title="Tile|SuperTile|Bundle"></a>Tile|SuperTile|Bundle</h2><p>这三者的关系早在多年前就有大牛们探索发现过，见本文末的相关文章，文中有逻辑缜密且经得起时间检验的详细演绎过程……</p>
<p>简言之，他们的关系是个简单的数学关系，如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">如果：</span><br><span class="line">    Tile = <span class="number">256</span> × <span class="number">256</span> pixel             <span class="comment"># 256×256 是ArcGIS Server默认的切片大小</span></span><br><span class="line">    Supertile = <span class="number">4096</span> × <span class="number">4096</span> pixel      <span class="comment"># 未开抗锯齿情况下是 4096×4096</span></span><br><span class="line">那么：</span><br><span class="line">	Supertile = <span class="number">16</span> × <span class="number">16</span> Tile           </span><br><span class="line">已知：</span><br><span class="line">	Bundle = <span class="number">128</span> × <span class="number">128</span> Tile            </span><br><span class="line">因此：</span><br><span class="line">	Bundle 范围是 N<span class="number">-3</span> 级的 Supertile 的范围</span><br></pre></td></tr></table></figure>
<p>看图说话：</p>
<p><img src="http://kikitamap.com/images/blogImg/CompactCache_SupertileBundle.png" alt=""></p>
<blockquote>
<p><em>官方文档：</em></p>
<ul>
<li><a href="http://enterprise.arcgis.com/zh-cn/server/latest/publish-services/windows/inside-the-compact-cache-storage-format.htm" target="_blank" rel="noopener">了解紧凑型缓存存储格式</a></li>
</ul>
<p><em>相关文章：</em></p>
<ul>
<li><a href="http://blog.newnaw.com/?p=789" target="_blank" rel="noopener">菩提老王的葡萄架子：ArcGIS Server 10中的切图/缓存机制深入</a></li>
<li><a href="https://blog.csdn.net/warrenwyf/article/details/6069711" target="_blank" rel="noopener">牛魔王的作坊：ArcGIS 切片缓存紧凑文件格式分析与使用</a></li>
<li><a href="https://blog.csdn.net/arcgis_all/article/details/50536569" target="_blank" rel="noopener">ArcGIS产品与技术专栏：Esri中国ArcGIS for Server 10.3.X 新型紧凑型缓存的解读和应用</a></li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Contributing to Our Github Project]]></title>
      <url>/2018/07/20/lovelyGit/</url>
      <content type="html"><![CDATA[<p>这是一篇日记。</p>
<p>最近，终于把年初我和<a href="https://makeling.github.io/" target="_blank" rel="noopener">马老师</a>的脑洞项目 <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools" target="_blank" rel="noopener"><strong>局部更新矢量切片</strong></a> 放在了大型程序员G友交流社区，开始出 <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools/releases" target="_blank" rel="noopener">release</a>了…… </p>
<p>在项目的开始，这个需求来自于用户的真实需求，如下是正经的背景信息：</p>
<blockquote>
<p>矢量切片是Esri在新版本中推出的一项亮点新技术，通过ArcGIS Pro中的Create Vector Tile Service工具生成切片包，再通过Portal发布成 Vector Tile Service，在前端支持各种应用，采用统一的接口进行调用，实现了一体化的平台应用解决方案。矢量切片技术充分利用GPU的渲染能力，以全新方式在设备、浏览器中以矢量的方式展现缓存地图。这项技术解决了传统基于栅格缓存切片展现地图存在的诸多问题：如设备分辨率对地图渲染效果的影响，缓存创建后无法再动态更改样式，生成缓存切片的周期过长，对硬件的需求过大等等。</p>
<p>众所周知，矢量切片包的生成速度相对于传统的栅格切片包具有指数极的性能提升，这也是体现矢量切片优越性的一个重要方面。对于一个常规数据量在100MB-10GB级的数据，全部生成一次矢量切片包的速度在分钟级。可能正是因为这个原因，截至目前最新版本（ArcGIS Pro 2.2），Esri仍未提供局部更新矢量切片包的功能。虽然矢量切片生成速度很快，但是到了TB级别的大数据来说，生成一次完整的切片包也是需要相当长的时间的，如果仅是更新了局部的小范围数据，那基于更新范围自动化更新矢量切片就是一个非常有实际应用价值的需求。 正是在这样的背景下，我们发起了创建自动化局部更新矢量切片工具的项目。</p>
<p>—— @马老师</p>
</blockquote>
<p>既然是两个人的项目，又会涉及很多版本的更新同步问题，<em>Why not Github</em> ？</p>
<p>我们一共设计了5个Python工具，用于扩展ArcGIS Pro的功能，分别实现原始矢量切片包的创建，局部矢量切片包的创建，以及矢量切片包的更新，矢量切片服务的更新，托管在阿里云平台的矢量切片服务的更新。</p>
<p>截止到今天的版本 <a href="https://github.com/makeling/PartiallyUpateArcGISVectorTilesTools/releases/tag/1.1.0" target="_blank" rel="noopener">Partially Upate ArcGIS Vector Tiles Toolbox 1.1.0</a></p>
<p><strong>Mark：</strong></p>
<p>后续还有很多有待优化的关键点：</p>
<ul>
<li>Bundle空间范围的精确计算</li>
<li>LOD值的自动计算</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Web </tag>
            
            <tag> Vector Tiles </tag>
            
            <tag> Github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[你知道 CityEngine 中的 Leaf Shape 吗？]]></title>
      <url>/2018/07/13/CELeafshape/</url>
      <content type="html"><![CDATA[<p>CityEngine 的CGA建模过程是个不断迭代繁衍的过程，我们将这个过程想象成一棵树。</p>
<p>通过 Shapefile，File Geodatabase，AutoCAD DXF 这些矢量数据格式导入CityEngine中的2D基面（Footprint），通常称为 CityEngine <strong>Initial Shape</strong>，这是这棵树的根节点。通过CGA中的命令符 <code>--&gt;</code> ，将一个shape经过各种形状（Geometry）和位置（Pivot，Scope） 的函数操作，生成另一个shape。直到最后，模型建立，最终的shape节点，通常称为 CityEngine <strong>Leaf Shape</strong>。</p>
<blockquote>
<p>这个细节的概念，在2013年的开发者大会中提过一次，结合模型层次结构的幻灯片理解下：</p>
<p><img src="http://kikitamap.com/images/blogImg/CELeafShape_2013DS.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/CELeafShape_2013DS2.png" alt=""></p>
<p>完整的幻灯片可以点 <a href="https://github.com/kikitaMoon/kikitamap.github.io/blob/gh-pages/attaches/EsriChinaDevSum-2013-EsriCityEngine%E8%A7%84%E5%88%99%E5%BC%80%E5%8F%91-%E6%85%95%E6%99%93%E7%87%95.pdf" target="_blank" rel="noopener"><strong>这里</strong></a> 下载。</p>
</blockquote>
<p>为什么说是“迭代繁衍”？ 因为除了 Leaf Shape 之外的所有shape 在建模过程中都被紧跟它其后的shape替代而消亡了。</p>
<p>举例子，在这条规则中，</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A --&gt; function() B </span><br><span class="line">      B  --&gt; function() C</span><br></pre></td></tr></table></figure>
<p>这条规则中 ，A shape 对象已经消亡被B替代，在后续的规则中无法再调用到 A， 如果希望取到与A相同的对象，就需要提前复制出来，如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A --&gt; <span class="function">Anew <span class="title">function</span><span class="params">()</span> B            <span class="comment">//A被复制而创建了分支</span></span></span><br><span class="line"><span class="function">      B    --&gt; <span class="title">function</span><span class="params">()</span> C</span></span><br><span class="line"><span class="function">      Anew --&gt; <span class="title">function</span><span class="params">()</span> D</span></span><br></pre></td></tr></table></figure>
<p>了解了这些，那么我们可以进一步回答这个问题：“如何将CityEngine规则建模的模型导出成各组件独立存储的模型？”   </p>
<p>可以的，再导出FileGDB或 Scene Layer Package的时候选中 “<strong>One Feature per Leaf Shape</strong>” 即可。</p>
<p><img src="http://kikitamap.com/images/blogImg/CELeafShape_FGDB.png" alt="Export to FileGDB"></p>
<p><img src="http://kikitamap.com/images/blogImg/CELeafShape_SLPK.png" alt="Export to Scene Layer Package"></p>
<p>这些导出的模型数据拿到其他软件中使用，例如ArcGIS Pro，各组件即为不同的静态模型对象。</p>
<p><img src="http://kikitamap.com/images/blogImg/CELeafShape_Pro.png" alt=""></p>
<p><em>这个示例的CGA脚本在 <a href="https://github.com/kikitaMoon/BuildingCGA/tree/master/Demoforkikitamap.com/4-FloorsAsLeafshape" target="_blank" rel="noopener">我的<strong>Github</strong></a> 可以查看和下载。</em></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
            <tag> ArcGIS Pro </tag>
            
            <tag> CGA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何获取30天试用版 Esri CityEngine ？]]></title>
      <url>/2018/07/11/CEFreeTrial/</url>
      <content type="html"><![CDATA[<p>Esri CityEngine 是一款面向于大规模城市规划行业的，交互式、沉浸式高级三维建模软件，相比传统建模更加高效省时。 通过CityEngine我们可以基于现实世界的GIS数据，构造城市的现实状态，模拟城市的历史风貌，设计城市的未来蓝图。</p>
<p>如何申请Esri CityEngine 30天试用？</p>
<h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><p>访问Esri官方试用地址：<a href="https://www.esri.com/en-us/arcgis/products/esri-cityengine/trial" target="_blank" rel="noopener">https://www.esri.com/en-us/arcgis/products/esri-cityengine/trial</a></p>
<p> 点击“<strong>Start CityEngine Trial</strong>”</p>
<p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_Start.png" alt=""></p>
<h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><p>创建一个Esri账号，点击“<strong>Create a Public Account</strong>”； 如果已经拥有过 Esri 账号，可以直接登录。</p>
<blockquote>
<p>PS：每个邮箱只能申请一次试用。请申请试用时，确保邮箱是第一次注册。</p>
<p>​         国内不建议使用Facebook和Google账户登录，避免后续登录的麻烦，你懂的。</p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_SignUp.png" alt=""></p>
<p>在新的创建账户的页面中添加，名字、姓氏、邮箱，点击创建账户按钮，直至收到如下提示。</p>
<blockquote>
<p>Thank you for signing up.</p>
<p>An e-mail has been sent to [上一步填写过的邮箱]</p>
</blockquote>
<h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h2><p>查看自己的邮箱，你会发现类似的一封，点击 “<strong>Activate Your Account</strong>”。</p>
<p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_Activate.png" alt=""></p>
<p>在弹出页面中，填写标星号的必要信息，例如：用户名、密码、国家、安全问题。然后点击创建账户。</p>
<p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_CreateUserName.png" alt=""></p>
<h2 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h2><p>选择几项附加信息，点击下一步，会看到最终的包含了类似 <strong><code>EVA123456789</code></strong> 格式授权码的页面。</p>
<p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_IndustryInfo.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_EVAcode.png" alt=""></p>
<p>请记录这个号码以备后用。如果忘记了也没有关系，注册邮箱中也会收到一封 “<strong>Esri CityEngine Trial Confirmation</strong>”主题的邮件，可以查询。</p>
<h2 id="Step-5"><a href="#Step-5" class="headerlink" title="Step 5"></a>Step 5</h2><p>下载并安装 Esri CityEngine 2018 软件。</p>
<p>如果不确认自己的系统是否满足安装要求，请查看 <strong><a href="http://desktop.arcgis.com/en/cityengine/latest/get-started/esri-cityengine-system-requirements.htm" target="_blank" rel="noopener">Esri CityEngine 系统要求</a></strong> 。</p>
<p>大多数情况下，我们安装在 Windows 操作系统中；当然 CityEngine 也支持 Mac OS X，Linux。</p>
<p>安装过程简单，与常规应用程序无差，按向导下一步即可完成，不赘述。</p>
<h2 id="Step-6"><a href="#Step-6" class="headerlink" title="Step 6"></a>Step 6</h2><p>启动开始菜单 Esri CityEngine 目录下的 <strong>CityEngine 2018 Administrator</strong>。</p>
<p>选择左侧 CityEngine 节点，右边选择 <strong>高级版单机许可</strong>，点击下方的 “<strong>Authorize Now</strong>”。</p>
<p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_AdvSingleUse.png" alt=""></p>
<p>按照默认设置，一直下一步，并填写带信号的信息即可。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Authorize.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Internet.png" alt=""></p>
<p>填写入CityEngine的授权号码，下一步，直至看到祝贺页面即授权成功。</p>
<p><img src="http://kikitamap.com/images/blogImg/CEFreeTrial_FillinEVA.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Congrs.png" alt=""></p>
<p>从开始菜单，启动CityEngine软件即可。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在 CityEngine 中使用 Python]]></title>
      <url>/2018/04/10/pythonInCE/</url>
      <content type="html"><![CDATA[<p>​        CityEngine的同义词几乎就是“规则建模”，规则指的是CGA脚本。说到脚本，很多用户又会联想到 Python， 衍生出来的问题就是，“CityEngine中是用python脚本建模吗？”  答案是No。</p>
<p>​         CityEngine中确实也引入了python，只不过使用python的姿势不是建模，而是自动化。通过python脚本，可以增强CityEngine的建模功能，自动化驱动脚本建模工作流，提高建模效率。我们既可以在控制台交互式执行python命令，也可以在python editor 中书写python执行文件，甚至可以将一些自定义功能扩展到CityEngine中。如下是CityEngine官方教程中的几个示例代码：</p>
<h2 id="Example-1-选择部分对象"><a href="#Example-1-选择部分对象" class="headerlink" title="Example 1  选择部分对象"></a>Example 1  选择部分对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Created on 2018-4-9</span></span><br><span class="line"><span class="string">@author: kikita</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> scripting <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># get a CityEngine instance</span></span><br><span class="line">ce = CE()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectByAttribute</span><span class="params">(attr, value)</span>:</span></span><br><span class="line">    objects = ce.getObjectsFrom(ce.scene)</span><br><span class="line">    selection = []</span><br><span class="line">    <span class="keyword">for</span> o <span class="keyword">in</span> objects:</span><br><span class="line">        attrvalue = ce.getAttribute(o, attr)</span><br><span class="line">        <span class="keyword">if</span> attrvalue  ==  value:</span><br><span class="line">            selection.append(o)     </span><br><span class="line">    ce.setSelection(selection)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    selectByAttribute(<span class="string">"connectionStart"</span>,<span class="string">"JUNCTION"</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Example-2-修改对象属性"><a href="#Example-2-修改对象属性" class="headerlink" title="Example 2  修改对象属性"></a>Example 2  修改对象属性</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Created on 2018-4-9</span></span><br><span class="line"><span class="string">@author: kikita</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> scripting <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># get a CityEngine instance</span></span><br><span class="line">ce = CE()</span><br><span class="line"></span><br><span class="line"><span class="string">''' increment the street width parameter of all selected street segments'''</span></span><br><span class="line"><span class="comment"># @noUIupdate</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">incrementStreetWidths</span><span class="params">(increment)</span>:</span></span><br><span class="line">    selectedSegments = ce.getObjectsFrom(ce.selection, ce.isGraphSegment)</span><br><span class="line">    <span class="keyword">for</span> segment <span class="keyword">in</span> selectedSegments:</span><br><span class="line">        oldWidth = ce.getAttribute(segment, <span class="string">"/ce/street/streetWidth"</span>)</span><br><span class="line">        newWidth = oldWidth+increment</span><br><span class="line">        ce.setAttribute(segment, <span class="string">"/ce/street/streetWidth"</span>, newWidth)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    incrementStreetWidths(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Example-3-动态模拟建筑物生长"><a href="#Example-3-动态模拟建筑物生长" class="headerlink" title="Example 3 动态模拟建筑物生长"></a>Example 3 动态模拟建筑物生长</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Created on 2018-4-12</span></span><br><span class="line"><span class="string">@author: kikita</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> scripting <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># get a CityEngine instance</span></span><br><span class="line">ce = CE()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">growBuilding</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">14</span>):</span><br><span class="line">        height = <span class="number">20</span>+i</span><br><span class="line">        doStep(i,height,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">15</span>,<span class="number">35</span>):</span><br><span class="line">        height = <span class="number">34</span></span><br><span class="line">        width = i<span class="number">-14</span></span><br><span class="line">        doStep(i,height,width)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">doStep</span><span class="params">(i,height,width)</span>:</span>    </span><br><span class="line">    object = ce.getObjectsFrom(ce.scene, ce.withName(<span class="string">"'Lot1'"</span>))</span><br><span class="line">    ce.setAttributeSource(object, <span class="string">"height"</span>, <span class="string">"OBJECT"</span>)</span><br><span class="line">    ce.setAttributeSource(object, <span class="string">"width"</span>, <span class="string">"OBJECT"</span>)</span><br><span class="line">    ce.setAttribute(object, <span class="string">"height"</span>, height)</span><br><span class="line">    ce.setAttribute(object, <span class="string">"width"</span>, width)  </span><br><span class="line">    Generate(object)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Generate</span><span class="params">(object)</span>:</span></span><br><span class="line">    ce.generateModels(object)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   growBuilding()</span><br></pre></td></tr></table></figure>
<h2 id="Example-4-陈列资源库"><a href="#Example-4-陈列资源库" class="headerlink" title="Example 4 陈列资源库"></a>Example 4 陈列资源库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Created on 2018-4-12</span></span><br><span class="line"><span class="string">@author: kikita</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> scripting <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># get a CityEngine instance</span></span><br><span class="line">ce = CE()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writeCGAlib</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># open the cga file to be written</span></span><br><span class="line">    cga = <span class="string">"/*Asset Library Loader : Generated by asset_lib.py*/\n version \"2014.0\"\n\n"</span>   </span><br><span class="line">    <span class="comment"># write start rule</span></span><br><span class="line">    cga += <span class="string">"Lot --&gt;  Geometries Textures"</span>  </span><br><span class="line">    <span class="comment"># write rule showing geometries</span></span><br><span class="line">    cga += <span class="string">"\n\nGeometries --&gt; "</span>   </span><br><span class="line">    <span class="comment"># get all .obj files from asset directory, and call their loader</span></span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> ce.getObjectsFrom(<span class="string">"/"</span>, ce.isFile, ce.withName(<span class="string">"/Tutorial_10*/assets/*.obj"</span>)):    </span><br><span class="line">        <span class="comment"># and write </span></span><br><span class="line">        cga += <span class="string">"\n\t t(2,0,0)  Geometry(\""</span>+obj+<span class="string">"\")"</span></span><br><span class="line">        <span class="keyword">print</span> obj</span><br><span class="line">    <span class="comment"># write rule showing jpg textures</span></span><br><span class="line">    cga += <span class="string">"\n\nTextures --&gt; \n\ts(1,0,0) set(scope.tz,0) set(scope.ty,3) i(\"facades/xy-plane.obj\")"</span></span><br><span class="line">    <span class="comment"># get all .jpg files from asset directory, and call their loader</span></span><br><span class="line">    <span class="keyword">for</span> jpg <span class="keyword">in</span> ce.getObjectsFrom(<span class="string">"/"</span>, ce.isFile, ce.withName(<span class="string">"/Tutorial_10*/assets/*.jpg"</span>)):</span><br><span class="line">        cga += <span class="string">"\n\tt(2,0,0)  Texture(\""</span>+jpg+<span class="string">"\")"</span></span><br><span class="line">    <span class="comment">#write geometry loader rule</span></span><br><span class="line">    cga += <span class="string">"\n\n Geometry(asset) --&gt; s(1,0,0) i(asset) set(scope.ty,0) set(scope.tz,0)"</span></span><br><span class="line">    <span class="comment">#write texture loader rule</span></span><br><span class="line">    cga += <span class="string">"\n\n Texture(asset) --&gt; set(material.colormap, asset)"</span>    </span><br><span class="line">    cgafile = ce.toFSPath(<span class="string">"rules/asset_lib2.cga"</span>)</span><br><span class="line">    CGA = open(cgafile, <span class="string">"w"</span>)</span><br><span class="line">    CGA.write(cga)</span><br><span class="line">    CGA.close()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"written file "</span>+cgafile</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">assignAndGenerateLib</span><span class="params">()</span>:</span></span><br><span class="line">    object = ce.getObjectsFrom(ce.scene, ce.withName(<span class="string">"'Lot2'"</span>))</span><br><span class="line">    ce.refreshWorkspace()</span><br><span class="line">    ce.setRuleFile(object, <span class="string">"asset_lib2.cga"</span>)</span><br><span class="line">    ce.setStartRule(object, <span class="string">"Lot"</span>)</span><br><span class="line">    ce.generateModels(object)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    writeCGAlib()</span><br><span class="line">    assignAndGenerateLib()</span><br></pre></td></tr></table></figure>
<h2 id="Example-5-扩展CityEngine功能"><a href="#Example-5-扩展CityEngine功能" class="headerlink" title="Example 5 扩展CityEngine功能"></a>Example 5 扩展CityEngine功能</h2><p>相关的python功能实现后，确保在CityEngine的python editor中可以正常运行。然后，在CityEngine的工作空间根目录创建 scripting.py 文件，内容如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">sys.path.append(&#123;PATH_TO_YOUR_SCRIPTS_DIRECTORY&#125;)</span><br><span class="line"><span class="comment"># e.g. sys.path.append("C:\user\CityEngine\MyProject\scripts")</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import customized python module</span></span><br><span class="line"><span class="keyword">import</span> myEfficiencyModule</span><br></pre></td></tr></table></figure>
<p>重启CE之后，可以在python编辑器或控制台中直接使用此模块的功能。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>myEfficiencyModule.selectByAttribute(<span class="string">"connectionEnd"</span>, <span class="string">"JUNCTION"</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
            <tag> Python </tag>
            
            <tag> CGA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Parthenon Temple]]></title>
      <url>/2018/04/04/Parthenon/</url>
      <content type="html"><![CDATA[<blockquote>
<p>摄于 2014-5-9, Acropolis, Athens, Greece</p>
</blockquote>
<p>CityEngine的教程中刚好有个Parthenon Temple 的 Demo</p>
<p><img src="http://kikitamap.com/images/blogImg/Parthenon_ParthenonModel.png" alt=""></p>
<p>不禁会想起在雅典卫城里它的断壁残垣，晒晒我们的合影</p>
<p>不知道几年过去，修复工作又向前推进了多少</p>
<p>那些带有编号的石头是不是已经归位了呢</p>
<p><img src="http://kikitamap.com/images/blogImg/Parthenon_Athens.jpg" alt=""></p>
<p>整个卫城中我最喜欢的是上图中最后一张的“厄瑞克忒翁神庙”，据说用于供奉雅典娜、波塞冬和英雄厄瑞克忒翁。</p>
<p>神庙一侧的女神柱像精致优美，即使经过了这么多的时光，都可以感受到雕刻师的精湛技艺。</p>
<p><img src="http://kikitamap.com/images/blogImg/Parthenon_IMG_3545.jpg" alt="厄瑞克忒翁神庙"></p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CityEngine中纹理贴图之道(二)]]></title>
      <url>/2018/03/30/textureinCE2/</url>
      <content type="html"><![CDATA[<p>​        接着<a href="http://kikitamap.com/2018/03/22/textureinCE/" target="_blank" rel="noopener">上一篇</a>。</p>
<p>​       <img src="http://kikitamap.com/images/blogImg/textureinCE_6.png" alt=""></p>
<p>​        为了让脚本看起来更连贯，无需跳转上一篇，我们从头开始。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * File:    MyTestforBaseTexure.cga</span></span><br><span class="line"><span class="comment"> * Created: 30 Mar 2018 08:16:37 GMT</span></span><br><span class="line"><span class="comment"> * Author:  Xiaoyan Mu</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">version <span class="string">"2017.1"</span></span><br><span class="line">attr height = <span class="number">10</span></span><br><span class="line">attr groundfloor_height = <span class="number">4</span></span><br><span class="line">attr floor_height = <span class="number">3.5</span></span><br><span class="line">attr tile_width = <span class="number">3.5</span></span><br><span class="line"></span><br><span class="line">wall_tex        = <span class="string">"facades/textures/brickwall.jpg"</span></span><br><span class="line">dirt_tex        = <span class="string">"facades/textures/dirtmap.15.tif"</span></span><br><span class="line">graffiti_tex    = <span class="string">"facades/textures/Graffiti.jpg"</span></span><br><span class="line">window_tex      = <span class="string">"facades/textures/window.5.tif"</span></span><br><span class="line"></span><br><span class="line">Lot --&gt; extrude(height) Building</span><br><span class="line"></span><br><span class="line">Building --&gt; comp(f) &#123;<span class="attr">front</span> : Sidefacade&#125;</span><br></pre></td></tr></table></figure>
<p>​        假设我希望在这面墙上“凿”出窗户，就需要将<code>Sidefacade</code>进行细化切割。贴纹理时也要注意一下新的技巧，也就是在细分表面之前先定义纹理UV，细分之后再用上一篇中提到的贴纹理的方法应用到<code>Wall</code>，这样就可以得到连续的墙体贴图。这样的做的原因在于，CE中的shape都是被不断迭代替换的，如果不在细分之前定义UV，<code>Sidefacade</code>对象在细分之后已经消亡了。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># Sidefacade is modified</span><br><span class="line"></span><br><span class="line">Sidefacade --&gt;  </span><br><span class="line">    # Setup texturing</span><br><span class="line">    setupProjection(<span class="number">1</span>, scope.xy, <span class="number">1.5</span>, <span class="number">1</span>) </span><br><span class="line">    setupProjection(<span class="number">2</span>, scope.xy, scope.sx, scope.sy)</span><br><span class="line">    # Divide Sidefacade</span><br><span class="line"> 	split(y)&#123; <span class="attr">groundfloor_height</span>: Wall | &#123;~floor_height : Floor&#125;* &#125;</span><br><span class="line"></span><br><span class="line">Floor --&gt;</span><br><span class="line">	split(x)&#123; <span class="number">1</span> : Wall | &#123; ~tile_width : Tile &#125;* | <span class="number">1</span> : Wall &#125;            </span><br><span class="line">Tile --&gt;</span><br><span class="line">	split(x)&#123; ~<span class="number">1</span> : Wall |  <span class="number">2</span> : split(y)&#123; ~<span class="number">1</span>: Wall | <span class="number">1.5</span>: Window | ~<span class="number">1</span>: Wall &#125; | ~<span class="number">1</span> : Wall &#125;	</span><br><span class="line"></span><br><span class="line">Wall --&gt;</span><br><span class="line">    # Apply the texture         </span><br><span class="line">    set(material.bumpmap,wall_tex)</span><br><span class="line">    set(material.dirtmap, dirt_tex)</span><br><span class="line">    projectUV(<span class="number">1</span>)</span><br><span class="line">    projectUV(<span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line">Window --&gt;</span><br><span class="line">    offset(<span class="number">0.05</span>) </span><br><span class="line">    comp(f) &#123; <span class="attr">inside</span>: WondowInner | border: WondowFrame &#125;</span><br><span class="line">    WondowInner --&gt;</span><br><span class="line">	  setupProjection(<span class="number">0</span>, scope.xy, scope.sx,  scope.sy) </span><br><span class="line">	  texture(window_tex)</span><br><span class="line">	projectUV(<span class="number">0</span>)      </span><br><span class="line">      WondowFrame --&gt;</span><br><span class="line">      extrude(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure>
<h2 id="material-opacitymap"><a href="#material-opacitymap" class="headerlink" title="material.opacitymap"></a>material.opacitymap</h2><p><code>material.opacitymap</code> 通道可以用于控制纹理的透明度。</p>
<p><img src="http://kikitamap.com/images/blogImg/textureinCE_7.png" alt=""></p>
<p>继续上面的例子，如果希望做出透明的窗户效果，可以将Window的代码替换为如下的样子。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Window --&gt;</span><br><span class="line">    offset(<span class="number">0.05</span>) </span><br><span class="line">    comp(f) &#123; <span class="attr">inside</span>: WondowInner | border: WondowFrame &#125;</span><br><span class="line">    WondowInner --&gt;    </span><br><span class="line">      setupProjection(<span class="number">4</span>, scope.xy, scope.sx,  scope.sy) </span><br><span class="line">      set(material.opacitymap, window_tex)</span><br><span class="line">      projectUV(<span class="number">4</span>) </span><br><span class="line">    WondowFrame --&gt;</span><br><span class="line">    extrude(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure>
<h2 id="material-specularmap"><a href="#material-specularmap" class="headerlink" title="material.specularmap"></a>material.specularmap</h2><p>为了虚拟现实，窗户玻璃来点反光效果吧。</p>
<p><img src="http://kikitamap.com/images/blogImg/textureinCE_8.png" alt=""></p>
<p>上代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Window --&gt;</span><br><span class="line">    offset(<span class="number">0.05</span>)   </span><br><span class="line">    comp(f) &#123; <span class="attr">inside</span>: WondowInner | border: WondowFrame &#125;</span><br><span class="line">    WondowInner --&gt;   </span><br><span class="line">	 setupProjection(<span class="number">0</span>, scope.xy, scope.sx,  scope.sy) </span><br><span class="line">	 texture(window_tex)</span><br><span class="line">	 projectUV(<span class="number">0</span>)</span><br><span class="line">	 set(material.specular.r, <span class="number">1</span>) </span><br><span class="line">     set(material.specular.g, <span class="number">1</span>)   </span><br><span class="line">     set(material.specular.b, <span class="number">1</span>)</span><br><span class="line">	 set(material.shininess, <span class="number">2</span>)	</span><br><span class="line">	 setupProjection(<span class="number">3</span>, scope.xy, scope.sx,  scope.sy)</span><br><span class="line">	 set(material.specularmap, specular_tex)</span><br><span class="line">	 projectUV(<span class="number">3</span>)</span><br><span class="line">    WondowFrame --&gt;</span><br><span class="line">    extrude(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure>
<p>剩下最后的 normalmap了，法向贴图。手里没有什么好例子，找到一篇<a href="http://www.opengl-tutorial.org/cn/intermediate-tutorials/tutorial-13-normal-mapping/" target="_blank" rel="noopener">OpenGL的文档</a>，帮助理解。</p>
<p>完结。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
            <tag> CGA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CityEngine中纹理贴图之道(一)]]></title>
      <url>/2018/03/22/textureinCE/</url>
      <content type="html"><![CDATA[<p>​        </p>
<p>​        经常看到官微、公众号的各种推送，了解到很多轰动一时的大片和电游的视觉制作都有CityEngine 助力过。CityEngine 在影娱视觉行业早已硕果累累，而对于GIS大众，CityEngine 算是刚从幕后走到了台前，从神秘娱乐圈走近了烟火人间。这几年来，这个不姓“Arc”的非主流产品在不断地推陈出新，吸引着慕名围观的用户去了解。3D模型的纹理贴图问题通常是建模中的高频问题，作为前排围观群众之一，我今天就用CityEngine做一面“墙”娱乐一下吧。</p>
<blockquote>
<p>环境： Esri City Engine 2017.1</p>
</blockquote>
<p>​        在 CityEngine中的 <code>shape</code> 对象具有<code>material</code>属性，这一属性可以控制模型的纹理贴图、阴影效果、外观等。CityEngine 支持的纹理图片的格式有：<strong>.bmp、.gif、.jpg/.jpeg、.png、.tif/.tiff</strong>。 CityEngine贴图支持6个纹理通道，它们通过特定的关键字来表达，如下：</p>
<table>
<thead>
<tr>
<th>uv-set</th>
<th>Texture Layer</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>colormap</td>
</tr>
<tr>
<td>1</td>
<td>bumpmap</td>
</tr>
<tr>
<td>2</td>
<td>dirtmap</td>
</tr>
<tr>
<td>3</td>
<td>specularmap</td>
</tr>
<tr>
<td>4</td>
<td>opacitymap</td>
</tr>
<tr>
<td>5</td>
<td>normalmap</td>
</tr>
</tbody>
</table>
<p><strong>下面我通过几个实例来说明下它们的用途：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/textureinCE_1.png" alt=""></p>
<p>​        基于共同的基础脚本向下进行，这里不再解释，相信你一看即懂。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * File:    MyTestforBaseTexure.cga</span></span><br><span class="line"><span class="comment"> * Created: 21 Mar 2018 08:26:37 GMT</span></span><br><span class="line"><span class="comment"> * Author:  Xiaoyan Mu</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">version <span class="string">"2017.1"</span></span><br><span class="line">attr height = <span class="number">6</span></span><br><span class="line">wall_tex        = <span class="string">"facades/textures/brickwall.jpg"</span></span><br><span class="line">dirt_tex        = <span class="string">"facades/textures/dirtmap.15.tif"</span></span><br><span class="line">graffiti_tex    = <span class="string">"facades/kiktia/Graffiti.jpg"</span></span><br><span class="line">Lot --&gt; extrude(height) Building</span><br><span class="line">Building --&gt; comp(f) &#123;<span class="attr">side</span> : Sidefacade&#125;</span><br></pre></td></tr></table></figure>
<h2 id="material-colormap"><a href="#material-colormap" class="headerlink" title="material.colormap"></a>material.colormap</h2><p><img src="http://kikitamap.com/images/blogImg/textureinCE_2.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Sidefacade --&gt;</span><br><span class="line">	setupProjection(<span class="number">0</span>, scope.xy, <span class="number">1.5</span>, <span class="number">1</span>, <span class="number">1</span>) </span><br><span class="line">	texture(wall_tex)  # set(material.colormap,wall_tex)</span><br><span class="line">	projectUV(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p>​        <code>texture(wall_tex)</code> ，实际是 <code>set(material.colormap,wall_tex)</code> 的简写，这个函数仅用于为当前shape指定纹理图片，而没有创建纹理坐标系。因此事先需要使用 <code>setupProjection()</code> ，用于指定贴图表面上的UV坐标系，以及贴图矩阵的排布样式。最后使用 <code>ProjectUV()</code>将贴图UV坐标系应用到贴图表面，这个过程有时被称为“烘焙（bake）”。相关函数的具体语法请查 <a href="http://cehelp.esri.com/help/index.jsp?topic=/com.procedural.cityengine.help/html/toc.html" target="_blank" rel="noopener"><strong>帮助</strong></a>。</p>
<p>​        “烘焙”是个形象生动的词，是个3D建模领域的常用词，对于GIS圈子的朋友可能有点陌生，在一个<strong><a href="https://www.blenderartists.org/forum/showthread.php?116259-what-is-texture-baking" target="_blank" rel="noopener">论坛</a></strong>里找到一个描述觉得不错分享大家。</p>
<blockquote>
<p>“Baking” generally refers to the process of recording as an image, some aspect of the Material or Mesh characteristics of a model. One value of this is that certain kinds of Material parameters can take longer to compute and apply to a model than an Image Texture, so it saves rendering time. Baking is usually done once a Material or Mesh is finalized. </p>
<p>In texture baking, for example, what is originally a procedural texture can be recorded as an image. Sometimes various “channels” of a material can be consolidated into a single image, simplifying the number of texture images used. Material colors applied in Texture Paint mode can be saved to an image. Texture baking can also help with disguising seams on a UV unwrap, a somewhat complicated but very useful process.</p>
<p>In normal baking, the mesh normals (which affect how light appears to reflect from the model’s surface) can be recorded – this results in very specialized images with RGB values based on normal vectors.</p>
<p>Usually baking requires having the model UV-unwrapped and -mapped, so the resulting image is properly fit to the model.</p>
</blockquote>
<h2 id="material-bumpmap"><a href="#material-bumpmap" class="headerlink" title="material.bumpmap"></a>material.bumpmap</h2><p>​    <code>material.bumpmap</code> 可以实现贴图的浮雕效果。</p>
<p><img src="http://kikitamap.com/images/blogImg/textureinCE_3.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Sidefacade --&gt;</span><br><span class="line">	setupProjection(<span class="number">1</span>, scope.xy, <span class="number">1.5</span>, <span class="number">1</span>, <span class="number">1</span>) </span><br><span class="line">	set(material.bumpmap,wall_tex)  </span><br><span class="line">	projectUV(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h2 id="material-dirtmap"><a href="#material-dirtmap" class="headerlink" title="material.dirtmap"></a>material.dirtmap</h2><p>​        如果想使这面墙更逼真，来点“做旧”的感觉，可以使用 <code>material.dirtmap</code> 通道来增加图片镶嵌的效果。</p>
<p><img src="http://kikitamap.com/images/blogImg/textureinCE_4.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sidefacade --&gt;</span><br><span class="line">	setupProjection(<span class="number">0</span>, scope.xy, <span class="number">1.5</span>, <span class="number">1</span>, <span class="number">1</span>) </span><br><span class="line">	texture(wall_tex)</span><br><span class="line">	projectUV(<span class="number">0</span>) </span><br><span class="line">    # Add dirtmap channel</span><br><span class="line">    setupProjection(<span class="number">2</span>, scope.xy, scope.sx, scope.sy)</span><br><span class="line">	set(material.dirtmap, dirt_tex)</span><br><span class="line">	projectUV(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>​        相同的方法来做一面涂鸦墙也可以哦。（涂鸦图片来自网络，侵删）</p>
<p>​        将dirtmap换张图，  <code>set(material.dirtmap, graffiti_tex)</code></p>
<p><img src="http://kikitamap.com/images/blogImg/textureinCE_5.png" alt=""></p>
<p>先到这里，下篇继续……</p>
<p>## </p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
            <tag> CGA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[导入3D模型至CityEngine]]></title>
      <url>/2018/03/21/importingmodels/</url>
      <content type="html"><![CDATA[<p>我们可以将2D矢量数据、3D模型格式导入到CityEngine 中使用，前者一般作为CityEngine shape 来使用，后者作为模型来使用。</p>
<p>OBJ，DAE，FBX这几种模型格式导入时可以作为两种角色来使用，shape 或 static model。这是由导入窗口中的 <code>Import as static model</code> 设置控制的。</p>
<blockquote>
<p><strong>Import as static model</strong></p>
<p>When checked, the file will be imported ‘as is’ and will not be modifiable by cga rules.</p>
<ul>
<li>Shapes—Serve as a base for CGA generation. A typical example is footprint data.</li>
<li>Static models—Can be scaled, rotated, and translated after import but cannot be processed further with CGA. </li>
</ul>
</blockquote>
<p>通过如上说明，我们可以清晰的了解到把模型转为shape或Static Model的差异。 一般实际应用中，我们会把当作“素材”使用的模型小件作为static model用；而把表示基础结构的模型作为shape来使用。</p>
<p>static model导入之后，仍然可以再转换为shape，操作：菜单栏 Shapes-&gt;Convert  Models to Shapes。成为shapes 之后，就可以通过cga对这个模型的继续进行改造了。</p>
<p>在如下示例图中了解：</p>
<p><img src="http://kikitamap.com/images/blogImg/importingmodels.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《Scent of a Woman》]]></title>
      <url>/2018/03/18/ScentofaWoman/</url>
      <content type="html"><![CDATA[<p>这是一部老片。</p>
<p>年少无知的时候，看到题目《闻香识女人》，暗自以为这是一部有关调情高手的电影，完全无感，从此错过。</p>
<p>在没有很多电影可以走入内心的今天，翻看旧电影真的是种享受。竟然有几句台词可以让我记住和感动。</p>
<blockquote>
<hr>
<p>Now I’ve come to the crossroad in my life. I always knew what the right path was.  Without exception.  I knew, but I never took it. You know why. It’s was too damn hard.</p>
<hr>
<p>But there is nothing like the sight of an amputated spirit. There is no prosthetic for that.</p>
<hr>
</blockquote>
<p>我虽不是很相信人有灵魂，但我确信看到过人性的高贵。</p>
<p><img src="http://kikitamap.com/images/blogImg/ScentofaWoman_1.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ScentofaWoman_2.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[OSM在ArcGIS产品线中的使用小结]]></title>
      <url>/2018/03/15/osm2ce/</url>
      <content type="html"><![CDATA[<p><img src="http://kikitamap.com/images/blogImg/osm2ce_1.png" alt=""></p>
<p>说到免费开放的数据，自然会想到 Open Street Map，这里分享下在 ArcGIS 产品线中osm数据的使用实践。</p>
<blockquote>
<p>环境：ArcGIS Desktop 10.6， Esri CityEngine 2017.1</p>
</blockquote>
<h3 id="在ArcMap中使用osm数据"><a href="#在ArcMap中使用osm数据" class="headerlink" title="在ArcMap中使用osm数据"></a><strong>在ArcMap中使用osm数据</strong></h3><p>一般情况下，我们可以在 <a href="https://www.openstreetmap.org" target="_blank" rel="noopener">Open Street Map</a> 官网可以通过指定范围直接下载osm格式数据，然后在 ArcMap中直接读取。如下，以Esri中国所在的金泰大厦为中心的数据：</p>
<p><img src="http://kikitamap.com/images/blogImg/osm2ce_2.png" alt="ArcMap直读OSM"></p>
<p>osm数据是基于xml的数据格式，ArcMap不能直接编辑。如果希望导入地理数据库中编辑，可以利用插件，这是Esri额外提供的一个桌面端的免费开源的osm插件，<a href="https://www.arcgis.com/home/item.html?id=0c4b24608fc94542ba5d1130c0606802" target="_blank" rel="noopener">ArcGIS Editor for OSM 10.6.x Desktop</a>。 通过这个插件可以下载、更新OSM数据有关这个插件的源码、文档，可以在<a href="https://github.com/Esri/arcgis-osm-editor" target="_blank" rel="noopener">Github</a>上获得。</p>
<blockquote>
<p>OSM is an XML-based format used to describe vector data in a map. It defines three basic data types—nodes, ways, and closed ways—which are used to describe all the other elements: </p>
<ul>
<li>Nodes—Points between which segments are drawn. </li>
<li>Ways—Ordered list of nodes, displayed as connected by line segments in the editor. </li>
<li>Closed Ways—Ways that go in a complete loop. They are used to describe areas such as parks, lakes, or islands.</li>
</ul>
</blockquote>
<p>以前10.3年代的时候，整理过一次简单的说明，点<a href="http://kikitamap.com/2015/04/01/ArcGISEditorforOSM103xDesktop/" target="_blank" rel="noopener">这里</a>直达。通过测试，相同的网络环境下，官网下载osm数据，之后再使用 Load OSM File 导入GDB，效率明显优于直接使用 Download OSM Data导入GDB。</p>
<h3 id="在CityEngine中使用osm数据"><a href="#在CityEngine中使用osm数据" class="headerlink" title="在CityEngine中使用osm数据"></a><strong>在CityEngine中使用osm数据</strong></h3><p>如果osm数据用于CityEngine，那么无需事先导入GDB，CityEngine可以直接解析osm并可分类导入数据，例如下图中导入highway，Building类：</p>
<p><img src="http://kikitamap.com/images/blogImg/osm2ce_3.png" alt="导入OSM至CityEngine场景"></p>
<p>在CityEngine中导入osm时，可以勾选“Map OSM tags”，从而CityEngine会通过OSM street type来定义道路的宽度，并给与不同道路组成部分不同的起始规则，方便后续利用规则批量建模。如下，以金泰大厦以南的东直门大枢纽为例，复杂的交通仍然保持错落有致：</p>
<p><img src="http://kikitamap.com/images/blogImg/osm2ce_4.png" alt="OSM Highway"></p>
<p>选中<code>Jintai_Streets</code> 这个图层，可以在Inspect窗口中看到图层的属性，其中即为默认情况下osm数据在CityEngine中的映射规则，可以根据需要修改：</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//------------------------- </span></span><br><span class="line"><span class="comment">// Example OSM Tag Mapping</span></span><br><span class="line"></span><br><span class="line">streetscale = <span class="number">1</span>  <span class="comment">// street width scale factor</span></span><br><span class="line"></span><br><span class="line">width = getObjectAttr(<span class="string">"width"</span>, <span class="literal">false</span>)</span><br><span class="line">lanes = getObjectAttr(<span class="string">"lanes"</span>, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">attr streetWidth = <span class="comment">// street width dependeding on available attributes</span></span><br><span class="line">    <span class="keyword">case</span> width &gt; <span class="number">0</span> : width       * streetscale</span><br><span class="line">    <span class="keyword">case</span> lanes &gt; <span class="number">0</span> : lanes * <span class="number">3.5</span> * streetscale</span><br><span class="line">    <span class="keyword">else</span>           : streetWidthByClass * streetscale * oneway</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> = getObjectAttr(<span class="string">"highway"</span>, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">streetWidthByClass =</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"primary"</span>     : <span class="number">8</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"secondary"</span>   : <span class="number">7</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"tertiary"</span>    : <span class="number">6</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"motorway"</span>    : <span class="number">12</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"trunk"</span>       : <span class="number">11</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"road"</span>        : <span class="number">6</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"residential"</span> : <span class="number">5</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"footway"</span>     : <span class="number">2</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"cycleway"</span>    : <span class="number">2</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"steps"</span>       : <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>                        : <span class="number">4</span></span><br><span class="line"></span><br><span class="line">oneway = <span class="comment">// oneway width correction</span></span><br><span class="line">    <span class="function"><span class="keyword">case</span> <span class="title">getObjectAttr</span>(<span class="params"><span class="string">"oneway"</span>, <span class="literal">false</span></span>) </span>== <span class="string">"yes"</span> : <span class="number">0.5</span></span><br><span class="line">    <span class="keyword">else</span>                                  : <span class="number">1</span></span><br><span class="line"></span><br><span class="line">sidewalkscale = <span class="number">1</span> <span class="comment">// sidewalk width scale factor</span></span><br><span class="line"></span><br><span class="line">sidewalkWidth =</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"primary"</span>     : <span class="number">2</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"secondary"</span>   : <span class="number">2</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"tertiary"</span>    : <span class="number">2</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">class</span> == <span class="string">"residential"</span> : <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>                        : <span class="number">0</span></span><br><span class="line"></span><br><span class="line">attr sidewalkWidthLeft = sidewalkWidth * sidewalkscale</span><br><span class="line">attr sidewalkWidthRight = sidewalkWidth * sidewalkscale</span><br></pre></td></tr></table></figure>
<p>默认情况下，进入cityEngine中的道路数据，会使用Esri.lib库中的规则Street_Modern_Standard.cga，当然也可以自己来编写。</p>
<p><img src="http://kikitamap.com/images/blogImg/osm2ce_5.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CityEngine中的Terrain Map Layer]]></title>
      <url>/2018/03/13/CEMaplayer/</url>
      <content type="html"><![CDATA[<p>​    CityEngine 中的Map Layer可以参与到批量建模当中，根据角色的不同可以分为Terrain，Texture，Obstacle，Mapping，Function几个类型的图层。</p>
<p><strong>Terrain Map Layer</strong> </p>
<p>​    顾名思义，用于表示场景的地表结构和底图图层，这个图层可以由一个DEM和一个影像共同构成。 这类图层在创建的时候，可以设置影像取值的通道、高程的拉伸范围、影像的尺寸、锚点位置、偏移量等参数。</p>
<p>​    在图层创建之后，我们可以看到属性窗口中，有这样一段代码表述了上面的一些设置：</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attr elevation = map_01(<span class="name">brightness</span>, <span class="number">0.0</span>, <span class="number">150.0</span>) + elevationDelta</span><br></pre></td></tr></table></figure>
<p>这时，有个疑问，<code>elevationDelta</code> 是什么？如何体现出来的？带着这个疑问我们来看看CE对于场景高程的作用机制。</p>
<p>导入CE场景中的道路线数据一般被识别为Graph Segment，静态模型一般为Static Shape，这两种类型数据可以通过 Align graph to terrain，Align shapes to terrain 来向地形数据对齐。在实际应用中，很多建筑物或道路的底面是个平面，需要将地形整平到与模型底面完美贴合，这时再使用工具 Align terrain to shape 来解决这个问题。</p>
<p>这时保存场景，在CE的工程目录的data文件夹下，就会出现一个场景同名的文件夹，并在其下自动生成一个16bit的栅格数据，储存地形变化量，这个栅格数据即为 elevationDelta。当预览数据时，从渲染方案上可以得到直观印象，灰色为无变化，黑色为减低，白色为增加。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何部署通过Portal管理的ArcGIS Pro Named User许可？]]></title>
      <url>/2018/03/09/ProNamedUserforPortalUse/</url>
      <content type="html"><![CDATA[<p>在开始如下部署之前，一定要注意下<strong>版本对应</strong>的情况，否则会部署失败：</p>
<table>
<thead>
<tr>
<th>版本</th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>Portal 10.6</td>
<td>Portal 10.5.1</td>
<td>Portal 10.5</td>
<td>Portal10.4.1</td>
</tr>
<tr>
<td>Pro 2.1</td>
<td>LM 10.6</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>Pro 2.0</td>
<td>LM 10.6</td>
<td>LM 10.5.1、10.6</td>
<td>LM 10.5.1、10.6</td>
<td>不支持</td>
</tr>
<tr>
<td>Pro 1.4</td>
<td>LM 10.6</td>
<td>LM 10.5.1、10.6</td>
<td>LM 10.5、10.5.1、10.6</td>
<td>LM 10.4.1</td>
</tr>
</tbody>
</table>
<p><em>LM : License Manager,  Portal: Portal for ArcGIS;   Pro: ArcGIS Pro</em> </p>
<p><br></p>
<p>如果您购买并已经部署了 Portal for ArcGIS，搭建了您的组织门户， 并且您希望在内网环境中通过 Named User 方式使用 ArcGIS Pro，那么您可以选择通过Portal for ArcGIS为组织成员配置Named User许可的方式。</p>
<h2 id="1-为组织配置-ArcGIS-Pro-许可"><a href="#1-为组织配置-ArcGIS-Pro-许可" class="headerlink" title="1 为组织配置 ArcGIS Pro 许可"></a>1 为组织配置 ArcGIS Pro 许可</h2><p><strong>1)</strong> 首先您需要确定哪个组织门户将用于管理ArcGIS Pro的许可（这个指定的组织门户称为“许可门户”）， 尤其当您的组织有多个门户的时候，请确保您指定的门户是您想要用来管理许可的那个门户。此种许可模式，需要安装ArcGIS License Server Administrator 程序。</p>
<p><strong>2)</strong> 完成安装后，打开 ArcGIS License Server Administrator，并单击“计算机 ID…” 按钮。</p>
<p><img src="http://images.esrichina.com.cn/article/20170310/dbb2b70dea49a6649e5fed410bf1dc28.png" alt=""></p>
<p><strong>3)</strong> 复制并保存计算机标识符对话框中的 MAC 地址 </p>
<ul>
<li>例如，005056a700c7（您需要向 My Esri 提供此信息）。 如果该对话框中存在两个 MAC 地址，则只复制其中之一。</li>
</ul>
<p><img src="http://images.esrichina.com.cn/article/20170310/0f5f97c5f0d6bebb6ced505533453c09.png" alt=""></p>
<p>4) 请记录上一步中您的Mac地址，并且提供您以下信息之一（用户ID、合同编号、用户单位全称），致电易智瑞(中国)信息技术有限公司合同部，为您生成可用于配置许可门户的文件（*.lic）。<br>联系电话： 010-5673228，拨0，转合同部。</p>
<p>5) 当您收到合同部发送的文件 (*.lic)之后， 将其保存到前面安装了 ArcGIS License Server Administrator 的计算机可访问的目录中。</p>
<p>6) 打开 ArcGIS License Server Administrator 并启动许可服务（如果未运行）。 单击“授权”选项卡，选择“版本”下拉对话框中的“命名用户/Named User”并单击“立即授权”按钮。</p>
<p><img src="http://images.esrichina.com.cn/article/20170310/67fcfb6b847f3e84ce58d847e50735f9.png" alt=""></p>
<p>7) 选择“我已收到来自 Esri 的授权文件，现在准备完成授权过程。”，然后浏览至许可 (.lic) 文件, 单击“打开”。</p>
<p>8) 单击“下一步”。随即显示一个对话框，表明已应用Named User许可。单击“确定”。对话框可能会显示几秒钟，这表示正在重新读取许可。</p>
<p>9) 单击“可用性”选项卡，并从右上角下拉对话框中选择“命名用户/Named User”。确认显示了预期授权。列出的总数将是Named User实际数量的3倍，这是因为每个Named User 最多允许同时在3个设备上运行 ArcGIS Pro 。</p>
<p>10) 生成门户配置文件。单击“授权”选项卡，然后单击“生成…”，并将门户配置文件 (.json) 保存到对 Portal for ArcGIS 可见的位置。</p>
<p><img src="http://images.esrichina.com.cn/article/20170310/8b3564c329df10a6b1f3b1fbb5ffb00d.png" alt=""></p>
<p>随即会显示一个对话框，表明已在您指定的位置生成了文件。单击“确定”并关闭 ArcGIS License Server Administrator。</p>
<p>11) 打开Web浏览器, 并以组织中默认管理员角色成员的身份登录到 ArcGIS Portal Directory。URL 地址格式为: <a href="https://portal.domain.com:7443/arcgis/portaladmin" target="_blank" rel="noopener">https://portal.domain.com:7443/arcgis/portaladmin</a>  您登录的门户将成为组织的许可门户。</p>
<p>12) 单击“系统” &gt; “许可” &gt; “导入授权”。</p>
<p><img src="http://images.esrichina.com.cn/article/20170310/99df556ff3f049041cfda22f60eb70e2.png" alt=""></p>
<p>13) 单击“浏览”并选择先前生成的门户配置文件 (.json)。确保应用程序下拉菜单被设为 ArcGIS Pro。</p>
<p><img src="http://images.esrichina.com.cn/article/20170310/280e7ef674045acae19126fbc2f7bc3f.png" alt=""></p>
<p>14）单击“导入”，您的组织现在已配置了 ArcGIS Pro 许可。</p>
<h2 id="2-组织管理员配置ArcGIS-Pro许可"><a href="#2-组织管理员配置ArcGIS-Pro许可" class="headerlink" title="2 组织管理员配置ArcGIS Pro许可"></a>2 组织管理员配置ArcGIS Pro许可</h2><p>本节的配置方法与 ArcGIS Online 组织管理员配置 ArcGIS Pro 许可的方法相似。<br>注意：<br>从 ArcGIS 10.5 版本之后，您只能为达到成员资格级别 2 级的门户成员配置 ArcGIS Pro 许可。</p>
<h2 id="3-登录并使用ArcGIS-Pro"><a href="#3-登录并使用ArcGIS-Pro" class="headerlink" title="3 登录并使用ArcGIS Pro"></a>3 登录并使用ArcGIS Pro</h2><p>1) 启动 ArcGIS Pro。<br>如果 ArcGIS Pro 已打开，请登出，关闭程序，然后重新启动。只能在首次启动 ArcGIS Pro 时连接至许可门户。</p>
<p>2) 在 ArcGIS Pro的启动界面中，点击“About ArcGIS Pro”。</p>
<p><img src="http://images.esrichina.com.cn/article/20170310/bbea712ccfa54d51dc456edb0218fa87.png" alt=""></p>
<p>3) 在“Licensing”页面中，点击 “Configure your licensing options”。</p>
<p><img src="http://images.esrichina.com.cn/article/20170310/30bf8e51c3905c389cb36c6e2c93e7e0.png" alt=""></p>
<p>4) 输入许可门户的 URL，如<a href="https://webadaptor.domain.com/arcgis。" target="_blank" rel="noopener">https://webadaptor.domain.com/arcgis。</a></p>
<p><img src="http://images.esrichina.com.cn/article/20170310/1b4d6d77d4d9a10691794c2d24c5ddb7.png" alt=""></p>
<p>5) 单击“OK”。稍后，在登录页面中输入账号密码登录并使用ArcGIS Pro。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> License </tag>
            
            <tag> ArcGIS Enterprise </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[网站主题更换备忘录]]></title>
      <url>/2018/02/26/sitebuilding/</url>
      <content type="html"><![CDATA[<h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p><a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener"><strong>Maupassant 主题</strong></a><br>安装主题和渲染器：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-renderer-pug --save</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-renderer-sass --save</span></span><br></pre></td></tr></table></figure></p>
<p>编辑Hexo目录下的 <code>_config.yml</code>，将<code>theme</code>的值改为<code>maupassant</code>。</p>
<h2 id="功能配置"><a href="#功能配置" class="headerlink" title="功能配置"></a>功能配置</h2><p>默认配置:</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">_config.yml_config.ymlfancybox:</span> <span class="literal">true</span> <span class="comment">## If you want to use fancybox please set the value to true.</span></span><br><span class="line"><span class="attr">disqus:</span> <span class="comment">## Your disqus_shortname, e.g. username</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span> <span class="comment">## If you want to use Gitment comment system please set the value to true.</span></span><br><span class="line"><span class="attr">  owner:</span> <span class="comment">## Your GitHub ID, e.g. username</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="comment">## The repository to store your comments, make sure you're the repo's owner, e.g. imsun.github.io</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="comment">## GitHub client ID, e.g. 75752dafe7907a897619</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="comment">## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50</span></span><br><span class="line"><span class="attr">uyan:</span> <span class="comment">## Your uyan_id. e.g. 1234567</span></span><br><span class="line"><span class="attr">livere:</span> <span class="comment">## Your livere data-uid, e.g. MTAyMC8zMDAxOC78NTgz</span></span><br><span class="line"><span class="attr">changyan:</span> <span class="comment">## Your changyan appid, e.g. cyrALsXc8</span></span><br><span class="line"><span class="attr">changyan_conf:</span> <span class="comment">## Your changyan conf, e.g. prod_d8a508c2825ab57eeb43e7c69bba0e8b</span></span><br><span class="line"><span class="attr">valine:</span> <span class="comment">## https://valine.js.org</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span> <span class="comment">## If you want to use Valine comment system, please set the value to true.</span></span><br><span class="line"><span class="attr">  appid:</span>  <span class="comment">## Your LeanCloud application App ID, e.g. pRBBL2JR4N7kLEGojrF0MsSs-gzGzoHsz</span></span><br><span class="line"><span class="attr">  appkey:</span>  <span class="comment">## Your LeanCloud application App Key, e.g. tjczHpDfhjYDSYddzymYK1JJ</span></span><br><span class="line"><span class="attr">  notify:</span> <span class="literal">false</span> <span class="comment">## Mail notifier, see https://github.com/xCss/Valine/wiki/Valine-评论系统中的邮件提醒设置</span></span><br><span class="line"><span class="attr">  verify:</span> <span class="literal">false</span> <span class="comment">## Validation code.</span></span><br><span class="line"><span class="attr">  placeholder:</span> <span class="string">Just</span> <span class="string">so</span> <span class="string">so</span> <span class="comment">## Comment box placeholders.</span></span><br><span class="line"><span class="attr">  avatar:</span> <span class="string">'mm'</span> <span class="comment">## Gravatar type, see https://github.com/xCss/Valine/wiki/avatar-setting-for-valine</span></span><br><span class="line"><span class="attr">  pageSize:</span> <span class="number">10</span> <span class="comment">## Number of comments per page.</span></span><br><span class="line"><span class="attr">  guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment">## Attributes of reviewers.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">google_search:</span> <span class="literal">true</span> <span class="comment">## Use Google search, true/false.</span></span><br><span class="line"><span class="attr">baidu_search:</span> <span class="literal">false</span> <span class="comment">## Use Baidu search, true/false.</span></span><br><span class="line"><span class="attr">swiftype:</span> <span class="comment">## Your swiftype_key, e.g. m7b11ZrsT8Me7gzApciT</span></span><br><span class="line"><span class="attr">tinysou:</span> <span class="comment">## Your tinysou_key, e.g. 4ac092ad8d749fdc6293</span></span><br><span class="line"><span class="attr">self_search:</span> <span class="literal">false</span> <span class="comment">## Use a jQuery-based local search engine, true/false.</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="comment">## Your Google Analytics tracking id, e.g. UA-42425684-2</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="comment">## Your Baidu Analytics tracking id, e.g. 8006843039519956000</span></span><br><span class="line"><span class="attr">show_category_count:</span> <span class="literal">false</span> <span class="comment">## If you want to show the count of categories in the sidebar widget please set the value to true.</span></span><br><span class="line"><span class="attr">toc_number:</span> <span class="literal">true</span> <span class="comment">## If you want to add list number to toc please set the value to true.</span></span><br><span class="line"><span class="attr">shareto:</span> <span class="literal">false</span> <span class="comment">## If you want to use the share button please set the value to true, you must have hexo-helper-qrcode installed.</span></span><br><span class="line"><span class="attr">busuanzi:</span> <span class="literal">false</span> <span class="comment">## If you want to use Busuanzi page views please set the value to true.</span></span><br><span class="line"><span class="attr">widgets_on_small_screens:</span> <span class="literal">false</span> <span class="comment">## Set to true to enable widgets on small screens.</span></span><br><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span> <span class="comment">## If you want to use dynamic background please set the value to true, you can also fill the following parameters to customize the dynamic effect, or just leave them blank to keep the default effect.</span></span><br><span class="line"><span class="attr">  color:</span> <span class="comment">## RGB value of the color, e.g. "100,99,98"</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="comment">## Transparency of lines, e.g. "0.7"</span></span><br><span class="line"><span class="attr">  zIndex:</span> <span class="comment">## The z-index property of the background, e.g. "-1"</span></span><br><span class="line"><span class="attr">  count:</span> <span class="comment">## Quantity of lines, e.g. "150"</span></span><br><span class="line"><span class="attr">donate:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span> <span class="comment">## If you want to show the donate button after each post, please set the value to true and fill the following items according to your need. You can also enable donate button in a page by adding a "donate: true" item to the front-matter.</span></span><br><span class="line"><span class="attr">  github:</span> <span class="comment">## GitHub URL, e.g. https://github.com/Kaiyuan/donate-page</span></span><br><span class="line"><span class="attr">  alipay_qr:</span> <span class="comment">## Path of Alipay QRcode image, e.g. /img/AliPayQR.png</span></span><br><span class="line"><span class="attr">  wechat_qr:</span> <span class="comment">## Path of Wechat QRcode image, e.g. /img/WeChatQR.png</span></span><br><span class="line"><span class="attr">  btc_qr:</span> <span class="comment">## Path of Bitcoin QRcode image, e.g. /img/BTCQR.png</span></span><br><span class="line"><span class="attr">  btc_key:</span> <span class="comment">## Bitcoin key, e.g. 1KuK5eK2BLsqpsFVXXSBG5wbSAwZVadt6L</span></span><br><span class="line"><span class="attr">  paypal_url:</span> <span class="comment">## Paypal URL, e.g. https://paypal.me/tufu9441</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  - page:</span> <span class="string">home</span></span><br><span class="line"><span class="attr">    directory:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">    icon:</span> <span class="string">fa-home</span></span><br><span class="line"><span class="attr">  - page:</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">    directory:</span> <span class="string">archives/</span></span><br><span class="line"><span class="attr">    icon:</span> <span class="string">fa-archive</span></span><br><span class="line"><span class="attr">  - page:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">    directory:</span> <span class="string">about/</span></span><br><span class="line"><span class="attr">    icon:</span> <span class="string">fa-user</span></span><br><span class="line"><span class="attr">  - page:</span> <span class="string">rss</span></span><br><span class="line"><span class="attr">    directory:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">    icon:</span> <span class="string">fa-rss</span></span><br><span class="line"></span><br><span class="line"><span class="attr">widgets:</span> <span class="comment">## Six widgets in sidebar provided: search, category, tag, recent_posts, rencent_comments and links.</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">search</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">category</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">tag</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">recent_posts</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">recent_comments</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">links</span></span><br><span class="line"></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line"><span class="attr">  - title:</span> <span class="string">site-name1</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">http://www.example1.com/</span></span><br><span class="line"><span class="attr">  - title:</span> <span class="string">site-name2</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">http://www.example2.com/</span></span><br><span class="line"><span class="attr">  - title:</span> <span class="string">site-name3</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">http://www.example3.com/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">timeline:</span></span><br><span class="line"><span class="attr">  - num:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    word:</span> <span class="number">2014</span><span class="string">/06/12-Start</span></span><br><span class="line"><span class="attr">  - num:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">    word:</span> <span class="number">2014</span><span class="string">/11/29-XXX</span></span><br><span class="line"><span class="attr">  - num:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">    word:</span> <span class="number">2015</span><span class="string">/02/18-DDD</span></span><br><span class="line"><span class="attr">  - num:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">    word:</span> <span class="string">More</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files</span></span><br><span class="line"><span class="attr">js:</span> <span class="string">js</span></span><br><span class="line"><span class="attr">css:</span> <span class="string">css</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Theme version</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">0.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
<ul>
<li>fancybox - 是否启用<a href="http://fancyapps.com/fancybox/" target="_blank" rel="noopener">Fancybox</a>图片灯箱效果</li>
<li>disqus - <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus评论</a> shortname</li>
<li>gitment - <a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">Gitment评论</a>相关参数</li>
<li>uyan - <a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言评论</a> id</li>
<li>livere - <a href="https://livere.com/" target="_blank" rel="noopener">来必力评论</a> data-uid</li>
<li>changyan - <a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言评论</a> appid</li>
<li>valine - <a href="https://valine.js.org/" target="_blank" rel="noopener">Valine评论</a>相关参数</li>
<li>google_search - 默认使用Google搜索引擎</li>
<li>baidu_search - 若想使用百度搜索，将其设定为<code>true</code>。</li>
<li>swiftype - <a href="https://swiftype.com/" target="_blank" rel="noopener">Swiftype</a> 站内搜索key</li>
<li>tinysou - <a href="http://tinysou.com/" target="_blank" rel="noopener">微搜索</a> key</li>
<li>self_search - 基于jQuery的<a href="http://hahack.com/codes/local-search-engine-for-hexo" target="_blank" rel="noopener">本地搜索引擎</a>，需要安装<a href="https://github.com/PaicHyperionDev/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a>插件使用。</li>
<li>google_analytics - <a href="https://www.google.com/analytics/" target="_blank" rel="noopener">Google Analytics</a> 跟踪ID</li>
<li>baidu_analytics - <a href="http://tongji.baidu.com/" target="_blank" rel="noopener">百度统计</a> 跟踪ID</li>
<li>show_category_count - 是否显示侧边栏分类数目</li>
<li>toc_number - 是否显示文章中目录列表自动编号</li>
<li>shareto - 是否使用分享按鈕，需要安装<a href="https://github.com/yscoder/hexo-helper-qrcode" target="_blank" rel="noopener">hexo-helper-qrcode</a>插件使用</li>
<li>busuanzi - 是否使用<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>页面访问计数</li>
<li>widgets_on_small_screens - 是否在移动设备屏幕底部显示侧边栏</li>
<li><a href="https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md" target="_blank" rel="noopener">canvas_nest</a> - 是否使用canvas动态背景</li>
<li>donate - 是否启用捐赠按钮</li>
<li>menu - 自定义页面及菜单，依照已有格式填写。填写后请在<code>source</code>目录下建立相应名称的文件夹，并包含<code>index.md</code>文件，以正确显示页面。导航菜单中集成了<a href="http://fontawesome.io/" target="_blank" rel="noopener">FontAwesome</a>图标字体，可以在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">这里</a>选择新的图标，并按照相关说明使用。</li>
<li>widgets - 选择和排列希望使用的侧边栏小工具。</li>
<li>links - 友情链接，请依照格式填写。</li>
<li>timeline - 网站历史时间线，在页面<code>front-matter</code>中设置<code>layout: timeline</code>可显示。</li>
<li>Static files - 静态文件存储路径，方便设置CDN缓存。</li>
<li>Theme version - 主题版本，便于静态文件更新后刷新CDN缓存。</li>
</ul>
<h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><h3 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h3><p>若要设置网站Favicon，可以将 <strong>favicon.ico</strong> 放在Hexo根目录的<code>source</code>文件夹下，建议的大小：32px*32px。</p>
<p>若要为网站添加苹果设备图标，请将命名为 <strong>apple-touch-icon.png</strong> 的图片放在同样的位置，建议的大小：114px*114px。</p>
<h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>首页默认显示文章摘要而非全文，可以在文章的<code>front-matter</code>中填写一项<code>description:</code>来设置你想显示的摘要，或者直接在文章内容中插入<code>&lt;!--more--&gt;</code>以隐藏后面的内容。<br>若两者都未设置，则自动截取文章第一段作为摘要。</p>
<h3 id="添加页面"><a href="#添加页面" class="headerlink" title="添加页面"></a>添加页面</h3><p>在<code>source</code>目录下建立相应名称的文件夹，然后在文件夹中建立<code>index.md</code>文件，并在<code>index.md</code>的<code>front-matter</code>中设置layout为<code>layout: page</code>。若需要单栏页面，就将layout设置为 <code>layout: single-column</code>。</p>
<h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><p>在文章的<code>front-matter</code>中添加<code>toc: true</code>即可让该篇文章显示目录。</p>
<h3 id="文章评论"><a href="#文章评论" class="headerlink" title="文章评论"></a>文章评论</h3><p>文章和页面的评论功能可以通过在<code>front-matter</code>中设置<code>comments: true</code>或<code>comments: false</code>来进行开启或关闭（默认开启）。</p>
<h3 id="语法高亮"><a href="#语法高亮" class="headerlink" title="语法高亮"></a>语法高亮</h3><p>要启用代码高亮，请在Hexo目录的<code>_config.yml</code>中将<code>highlight</code>选项按照如下设置：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br></pre></td></tr></table></figure>
<h3 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h3><p>要启用数学公式支持，请在Hexo目录的<code>_config.yml</code>中添加：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>并在相应文章的<code>front-matter</code>中添加<code>mathjax: true</code>，例如：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Test</span> <span class="string">Math</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2016</span><span class="bullet">-04</span><span class="bullet">-05</span> <span class="number">14</span><span class="string">:16:00</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">math</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>数学公式的默认定界符是<code>$$...$$</code>和<code>\\[...\\]</code>（对于块级公式），以及<code>$...$</code>和<code>\\(...\\)</code>（对于行内公式）。</p>
<p>但是，如果你的文章内容中经常出现美元符号“<code>$</code>”, 或者说你想将“<code>$</code>”用作美元符号而非行内公式的定界符，请在Hexo目录的<code>_config.yml</code>中添加：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax2:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>而不是<code>mathjax: true</code>。 相应地，在需要使用数学公式的文章的<code>front-matter</code>中也添加<code>mathjax2: true</code>。</p>
<p><a href="http://zhongpu.info/2016/05/06/Mathjax%20and%20Hexo/" target="_blank" rel="noopener">示例</a>。</p>
<p><a href="https://www.haomwei.com/images/maupassant.jpg" target="_blank" rel="noopener"><img src="https://www.haomwei.com/images/maupassant.jpg" alt="主题效果"></a>主题效果</p>
<p>转自：<a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">屠城: 大道至简——Hexo简洁主题推荐</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> Webmaster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解析xml修改切片原点绕开工具的坑]]></title>
      <url>/2018/02/05/AlterXMLScheme/</url>
      <content type="html"><![CDATA[<p>我们可以通过工具 Generate Map Server Cache Tiling Scheme 来生成自定义的切片方案，无论是ArcMap还是ArcGIS Pro ，无论是栅格切片还是矢量切片，都屡试不爽。</p>
<p>前段时间，为了方便 ArcGIS Pro 的自动化工作，我尝试用python调用这个功能，然而后面在使用其生成的切片方案（.xml）文件时，会发现切片原点总是默认值，例如地理坐标系统下是“-400,400”。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TileOrigin</span> <span class="attr">xsi:type</span>=<span class="string">"typens:PointN"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">X</span>&gt;</span>-400<span class="tag">&lt;/<span class="name">X</span>&gt;</span><span class="tag">&lt;<span class="name">Y</span>&gt;</span>400<span class="tag">&lt;/<span class="name">Y</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TileOrigin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>arcpy.GenerateMapServerCacheTilingScheme_server (in_map, tile_origin, output_tiling_scheme, num_of_scales, scales, dots_per_inch, tile_size)</code> 中，tile_origin这个参数标识为point对象，可是无论如何传参都无效。</p>
<p>这样会导致切片创建以及更新的一系列问题，在当时也是排查了很久才定位到这个问题。我的是测试环境是 ArcGIS Pro 2.0.x。值得欣慰的是，这个问题在 ArcMap的arcpy中没有问题，可以正确识别参数。</p>
<p>经过与esri美国工程师的沟通确认，此问题为arcpy for ArcGIS Pro的bug，暂时没有官方解决方法。</p>
<ul>
<li><em>BUG-000110503     : Changing the tile origin parameter when using     arcpy.server.GenerateMapServerCacheTilingScheme does not actually change   the tile origin</em></li>
</ul>
<p><strong>绕行办法：</strong></p>
<p>既然xml已经生成了，只有切片原点信息是错误，那就自己来解析xml修改对应参数即可。在自己的脚本中额外增加一个解析xml的逻辑吧，跳过这个坑。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xml.dom.minidom <span class="keyword">as</span> DOM</span><br><span class="line"><span class="comment"># Modify Scheme File to Avoid the tile_Origin Specification Bug of the Pro Tool</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modifyTilingSchemeFile</span><span class="params">(tileScheme,x_origin,y_origin)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        doc = DOM.parse(tileScheme)</span><br><span class="line">        tileOriginX = doc.getElementsByTagName(<span class="string">'X'</span>)</span><br><span class="line">        tileOriginY = doc.getElementsByTagName(<span class="string">'Y'</span>)</span><br><span class="line">        tileOriginX[<span class="number">0</span>].firstChild.data = x_origin</span><br><span class="line">        tileOriginY[<span class="number">0</span>].firstChild.data = y_origin</span><br><span class="line">        f = open(tileScheme, <span class="string">'w+'</span>)</span><br><span class="line">        doc.writexml(f)</span><br><span class="line">        f.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        arcpy.AddMessage(<span class="string">"tile scheme XML file does not exist."</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> ArcGIS Pro </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《面向ArcGIS的Python脚本编程》读后]]></title>
      <url>/2018/01/11/ReadingPyScriptingforAGS/</url>
      <content type="html"><![CDATA[<p>​        这篇是读书笔记。同事手里有本《面向ArcGIS的Python脚本编程》，系统的介绍了如何结合ArcGIS使用python。最近拿来阅读，觉得受益颇多。最早期我是通过python自身的学习资源、书籍、ArcGIS帮助文档入门的，知识体系虽然建立起来了，但是很多细节没有考虑到，对照书中的内容温故知新、查漏补缺。</p>
<h2 id="arcpy与AO"><a href="#arcpy与AO" class="headerlink" title="arcpy与AO"></a>arcpy与AO</h2><p>​        书的开篇就介绍了脚本语言和程序语言的区别。我将其引申到日常工作中用户会经常问到的，“为什么AO可以实现的东西，arcpy却不能？”“为什么arcpy的功能这么‘粗粒度’？” </p>
<p>​         AO中包含了ArcGIS用到的所有编程对象，包含了数以千计的不同对象，因此程序员可以精细控制软件的外观和运行机制。Python作为一种非常平易近人的语言，既是脚本语言又是程序语言，在ArcGIS平台中，python更多充当的是脚本语言的角色，例如：访问ArcGIS现有的功能，组合各种现有功能来扩展ArcGIS的功能，更可以作为一种“粘合剂”将更多的功能整合进来。用书中的话讲，脚本语言就是在“控制其他应用程序以实现任务自动化”。arcpy是ArcGIS提供的python站点包，用于访问ArcGIS 的地理处理功能，定位正在于此。</p>
<h2 id="arcpy与model-builder"><a href="#arcpy与model-builder" class="headerlink" title="arcpy与model builder"></a><strong>arcpy</strong>与<strong>model builder</strong></h2><p>​          model builder（简称MB吧）是ArcGIS Desktop中我认为最可爱的功能没有之一，它采用了编程的思想却免去了书写代码，是给非程序员实践创造的启航之地。日常工作中，很多逻辑简单、功能清晰的任务都可以使用MB实现。以前写过一篇，<a href="http://kikitamap.com/2015/12/06/IterationinArcGISforDesktop/" target="_blank" rel="noopener">《如何在ArcGIS for Desktop中实现批量任务》</a>，具体不再展开。你可能由这些疑问，“MB也能完成批量任务，我何时应该考虑使用python？”  当然这里回答的是“不得不”的问题，如果你本来就是编程高手，从一开始就会觉得MB限制了你的想象力，如下回答可能不需要考虑。 </p>
<p>​          MB的局限性有什么？或者说相比之下，python能更多实现什么？</p>
<ul>
<li>python可以实现更高级的编程逻辑。例如嵌套循环是MB的软肋，一遇到多重遍历之类的任务就只能呵呵了。</li>
<li>python可以实现更底层的处理任务。例如我们可以使用Cursor，遍历表并对其增删改等等。</li>
<li>python可以集成第三方的资源。例如R语言等第三方类库来处理数据执行任务。</li>
<li>python可以不在ArcGIS软件内部执行任务，只需要安装并授权ArcGIS软件，然后通过独立脚本的形式运行。既然可以独立运行，就可以定义系统任务定时执行。</li>
</ul>
<h2 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h2><h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><p>​        这本书中也提到了命名规范的内容，这是我在初期没有考虑到的问题。随着时间的推移和协同工作的需要，渐渐发现这是个非常重要的内容，大型的科技公司会更重视这个方面。编程和写文章一样，仅仅懂得一种语言的语法、词汇是不足够的，更重要的是如何将文章写的清晰优雅，对应到代码中就是简洁高效。python的官方命名规范：<a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">Style Guide for Python Code</a>，它是PEPs（Python Enhancement Proposals）中的一部分。</p>
<p>​        变量名及脚本文件名：</p>
<ul>
<li>变量名以字母开头，不能使用特殊字符开头</li>
<li>全部使用小写字母</li>
<li>必要的时候使用下划线，增加代码可读性</li>
<li>使用描述性变量，避免使用俚语或缩写</li>
<li>变量名尽量简短</li>
</ul>
<p>​        缩进：</p>
<ul>
<li>建议使用四个空格表示缩进</li>
<li>不要同时使用tab和空格进行缩进</li>
</ul>
<p>​        注释：</p>
<ul>
<li>建议每个功能块都有相关注释</li>
<li>每个脚本工具或函数文件前需要有个头文件，应该包含脚本文件名、功能介绍、运行要求、作者、开发时间等信息。</li>
</ul>
<h3 id="从脚本外部输入参数"><a href="#从脚本外部输入参数" class="headerlink" title="从脚本外部输入参数"></a>从脚本外部输入参数</h3><p>​        使用系统参数 sys.agv 。系统参数sys.argv[0]存储的是脚本自身的地址，因此额外的系统参数是从1开始。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is content of testInputPara.py.</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">x = int(sys.argv[<span class="number">1</span>])</span><br><span class="line">y = int(sys.argv[<span class="number">2</span>])</span><br><span class="line">print(x*y)</span><br></pre></td></tr></table></figure>
<p>​        在命令行中执行：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\ForTempTest&gt;python testInputPara<span class="selector-class">.py</span> <span class="number">2</span> <span class="number">8</span></span><br><span class="line"><span class="number">16</span></span><br></pre></td></tr></table></figure>
<p>​        在交互式python编译器中使用 input()，可以接收用户输入。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = input(<span class="string">""</span>)</span><br><span class="line">bingo</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(x)</span><br><span class="line">bingo</span><br></pre></td></tr></table></figure>
<p>​        ArcGIS 中通过创建脚本工具，与GP框架结合的调用方法，是更适合ArcGIS用户的方法。以前写过 《在ArcGIS中创建Python工具<a href="http://kikitamap.com/2015/08/31/CreatePythonTool1/" target="_blank" rel="noopener"><strong>（一）</strong></a>、<a href="http://kikitamap.com/2015/09/02/CreatePythonTool2/" target="_blank" rel="noopener"><strong>（二）</strong></a>、<a href="http://kikitamap.com/2015/09/10/CreatePythonTool3/" target="_blank" rel="noopener"><strong>（三）</strong></a>》几篇，点击链接可以近一步了解脚本工具。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[通过arcpy自动发布服务]]></title>
      <url>/2017/12/19/AutoPublishingService/</url>
      <content type="html"><![CDATA[<p><strong><em>示例</em></strong></p>
<p><strong>地图服务</strong></p>
<p>发布单个地图服务：<br><a href="https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/AutomaticallyPublishingServices/MapServciePY27/PublishingSingleMapService.py" target="_blank" rel="noopener">https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/AutomaticallyPublishingServices/MapServciePY27/PublishingSingleMapService.py</a></p>
<p>批量发布地图服务：<br><a href="https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/AutomaticallyPublishingServices/MapServciePY27/BatchPublishingMapService.py" target="_blank" rel="noopener">https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/AutomaticallyPublishingServices/MapServciePY27/BatchPublishingMapService.py</a></p>
<p><strong>要素服务</strong></p>
<p>批量发布要素服务：<br>Hosted Feature Service<br><a href="https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/AutomaticallyPublishingServices/FeatureServicePY27/PublishingHostedFeatureService.py" target="_blank" rel="noopener">https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/AutomaticallyPublishingServices/FeatureServicePY27/PublishingHostedFeatureService.py</a></p>
<p>ArcGIS Server Feature Service<br><a href="https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/AutomaticallyPublishingServices/FeatureServicePY27/PublishingServerFeatureService.py" target="_blank" rel="noopener">https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/AutomaticallyPublishingServices/FeatureServicePY27/PublishingServerFeatureService.py</a></p>
<p><strong>影像服务</strong></p>
<p><a href="https://github.com/kikitaMoon/ArcGIS-Python/blob/master/TechConferences/2016-DeveloperTechConference-Demo/4-PublishImageService.py" target="_blank" rel="noopener">https://github.com/kikitaMoon/ArcGIS-Python/blob/master/TechConferences/2016-DeveloperTechConference-Demo/4-PublishImageService.py</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> ArcGIS Enterprise </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Add LiveRe Comments]]></title>
      <url>/2017/12/13/AddLiveRe/</url>
      <content type="html"><![CDATA[<p><img src="https://livere.com/img/icon/main/img_header_livereman.png" alt=""></p>
<p>自从多说挂了之后，网站的评论系统一直缺席中，今天自己部署个<a href="https://livere.com/" target="_blank" rel="noopener">LiveRe</a>吧，现在用的hueman主题，就以此主题为例，自己动手丰衣足食了。</p>
<ol>
<li>在主题的配置文件中增加一项，livere<br><code>...\themes\hueman\_config.yml</code></li>
</ol>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">comment</span>:</span><br><span class="line">    livere: your <span class="keyword">data</span> <span class="keyword">id</span></span><br></pre></td></tr></table></figure>
<p>2.在<code>...\themes\hueman\layout\comment</code>增加<code>livere.ejs</code>评论模块代码</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- LiveRe City install code --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"lv-container"</span> <span class="attr">data-id</span>=<span class="string">"city"</span> <span class="attr">data-uid</span>=<span class="string">"********"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">   (<span class="function"><span class="keyword">function</span><span class="params">(d, s)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">       <span class="keyword">var</span> j, e = d.getElementsByTagName(s)[<span class="number">0</span>];</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">       <span class="keyword">if</span> (<span class="keyword">typeof</span> LivereTower === <span class="string">'function'</span>) &#123; <span class="keyword">return</span>; &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">       j = d.createElement(s);</span></span><br><span class="line"><span class="actionscript">       j.src = <span class="string">'https://cdn-city.livere.com/js/embed.dist.js'</span>;</span></span><br><span class="line"><span class="actionscript">       j.async = <span class="literal">true</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">       e.parentNode.insertBefore(j, e);</span></span><br><span class="line"><span class="javascript">   &#125;)(<span class="built_in">document</span>, <span class="string">'script'</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>Please activate JavaScript for write a comment in LiveRe<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- completed City install code --&gt;</span></span><br></pre></td></tr></table></figure>
<p>3.相关文件增加判断</p>
<p><code>...\themes\hueman\layout\comment\index.ejs</code></p>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> &#125; <span class="keyword">else</span> <span class="keyword">if</span> (theme.comment.livere) &#123; </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> partial(<span class="string">'comment/livere'</span>) </span><span class="xml"><span class="tag">%&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><code>...\themes\hueman\layout\comment\scripts.ejs</code></p>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> &#125; <span class="keyword">else</span> <span class="keyword">if</span> (theme.comment.livere) &#123; </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby"> partial(<span class="string">'comment/livere'</span>, &#123; <span class="symbol">script:</span> <span class="literal">true</span> &#125;) </span><span class="xml"><span class="tag">%&gt;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>可是现在有个奇怪的问题，为什么评论框会出现两次？ 求高手解救！</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Web </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[tidy up the code ...]]></title>
      <url>/2017/11/14/tidyup/</url>
      <content type="html"><![CDATA[<p>学习python是个有趣的过程，不知不觉累积了一些有意思的小案例和小工具，一直都在本地磁盘流浪，这好像不是一个好主人的作风呢。 把它们放到该去的地方，在这里：<a href="https://github.com/kikitaMoon/ArcGIS-Python" target="_blank" rel="noopener">https://github.com/kikitaMoon/ArcGIS-Python</a></p>
<p>开始从来不知道自己会在编程的道路上越走越远，积极用脑、专注做事可能是推迟进入油腻中年的最好途径。 这一年生命中多了一个人，生活有了很多变化，纵然精力旺盛的我也开始觉得分身乏力，感谢宝宝的乖巧才让我有了很多的时间做“贤妻良母”之外的事情。希望我的宝宝长大后，可以看到妈妈的文字，互相感恩乐观前行。</p>
<p><img src="http://kikitamap.com/images/blogImg/SSN_tydyup_pythonTbx.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Enterprise Administration 10.5 Certification]]></title>
      <url>/2017/11/01/AGSEntAdminCA/</url>
      <content type="html"><![CDATA[<p>The Enterprise Administration Associate exam tests the candidate’s experience operating and supporting enterprise solutions. Qualified candidates should be proficient in best practices, and able to apply configuration changes to meet production needs, to perform continuous monitoring and maintenance, to troubleshoot common Esri technology issues, and to communicate software and support needs. Candidates should have 2-4 years of experience operating and supporting enterprise solutions and 18-24 months working with Esri’s ArcGIS technology.</p>
<h2 id="Qualifications"><a href="#Qualifications" class="headerlink" title="Qualifications"></a>Qualifications</h2><p><strong>A qualified candidate should be able to perform the following tasks:</strong></p>
<ul>
<li>Install, configure, and upgrade a base ArcGIS Enterprise deployment</li>
<li>Understand and implement the Esri licensing model</li>
<li>Publish and administer services, using different ArcGIS Enterprise deployment models (on- premises, hybrid, and cloud)</li>
<li>Deploy, publish, and administer GIS services and resources available through ArcGIS Online or ArcGIS Enterprise</li>
<li>Diagnose and improve the performance of services from ArcGIS Online and ArcGIS Enterprise</li>
<li>Manage cached resources and services</li>
<li>Perform ArcGIS Enterprise system administration workflows.</li>
<li>Configure security for ArcGIS Enterprise</li>
<li>Register external data sources with ArcGIS Enterprise</li>
<li>Monitor system health, conduct performance tuning, and identify bottlenecks across an ArcGIS Enterprise deployment</li>
</ul>
<p><strong>A qualified candidate should be familiar with the following tools:</strong></p>
<ul>
<li>Operating systems, web servers, storage devices, file storage systems, databases, authentication, network and security concepts</li>
<li>System monitoring tools</li>
<li>Ready-to-use apps, the ArcGIS web APIs, and app templates</li>
<li>ArcGIS Enterprise Cloud Builder</li>
</ul>
<p><strong>A qualified candidate should NOT be expected to perform the following tasks:</strong></p>
<ul>
<li>Apply high availability deployment patterns of ArcGIS Enterprise</li>
<li>System design &amp; integration</li>
<li>Geodatabase administration and tuning</li>
<li>Application development</li>
<li>ArcGIS Desktop analysis or data management</li>
<li>Security audits and vulnerability assessments</li>
</ul>
<h2 id="Skill-Measured"><a href="#Skill-Measured" class="headerlink" title="Skill Measured"></a>Skill Measured</h2><p>The following list will familiarize candidates with the exam sections to help guide exam preparation. The relative weight of each section is provided to illustrate the approximate size of each section. Candidates should review this list and assess their knowledge of each skill. Specific preparation resources are available to assist with refreshing in areas where any knowledge gaps are found.</p>
<p><strong>Implement and Deploy a Solution — 15%</strong></p>
<ul>
<li>Given a set of requirements, determine the appropriate ArcGIS Enterprise licensing role</li>
<li>Given a set of requirements, apply procedural concepts to configure security for an ArcGIS Enterprise deployment</li>
<li>Given a set of requirements, determine the appropriate ArcGIS Enterprise component(s)</li>
<li>Identify considerations for installing components of an ArcGIS Enterprise deployment</li>
</ul>
<p><strong>Maintain and Support a Solution — 30%</strong></p>
<ul>
<li>Apply procedural concepts to manage updates to services</li>
<li>Apply procedural concepts to manage updates to system</li>
<li>Apply procedural concepts to manage updates to apps</li>
<li>Identify steps to backup and restore an ArcGIS Enterprise deployment</li>
<li>Identify tools and workflows to administer ArcGIS Enterprise</li>
</ul>
<p><strong>Troubleshoot Problems with ArcGIS Enterprise — 30%</strong></p>
<ul>
<li>Interpret ArcGIS Enterprise log messages</li>
<li>Troubleshoot causes of performance issues in an ArcGIS Enterprise deployment</li>
<li>Troubleshoot errors with the ArcGIS Enterprise system</li>
<li>Troubleshoot errors with sharing workflows in an ArcGIS Enterprise deployment</li>
<li>Identify functional components of ArcGIS Enterprise</li>
</ul>
<p><strong>Prepare and Publish Services — 24%</strong></p>
<ul>
<li>Given a set of requirements, identify which service type is required</li>
<li>Determine the requirements for sharing a given service type</li>
<li>Identify which workflow is required to share a given service type</li>
<li>Apply procedural concepts to configure service capabilities and properties to meet user requirements</li>
</ul>
<h2 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h2><p>A qualified candidate should be familiar with the following software:</p>
<ul>
<li>ArcGIS Desktop 10.5</li>
<li>ArcGIS Enterprise 10.5</li>
</ul>
<h2 id="Exam-Details"><a href="#Exam-Details" class="headerlink" title="Exam Details"></a>Exam Details</h2><p>Number of questions: 80<br>Certification code: EEAA105<br>Exam duration:  2 Hours<br>Exam type: Multiple choice, multiple select<br>Published date: June 2017<br>Exam state: Available to public</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ArcGIS Enterprise </tag>
            
            <tag> Certification </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Desktop Professional 10.5 Certification]]></title>
      <url>/2017/10/26/AGSDeskProCA/</url>
      <content type="html"><![CDATA[<p>The ArcGIS Desktop Professional exam tests the candidate’s experience applying ArcGIS concepts and processes to workflows. Qualified candidates should demonstrate proficiency when applying advanced GIS concepts and knowledge to establish workflows, processes, troubleshooting non-routine issues, and skilled at defining and successfully completing complex GIS projects. Qualified candidates should have five years of applied experience, and should be proficient in best practices and uses of Esri’s ArcGIS technologies.</p>
<h2 id="Qualifications"><a href="#Qualifications" class="headerlink" title="Qualifications"></a>Qualifications</h2><p><strong>A qualified candidate should be able to perform the following tasks:</strong></p>
<ul>
<li>Apply and interpret fundamental spatial statistics and visualization techniques</li>
<li>Build a reference data set and an address locator</li>
<li>Build a transportation network and apply solvers</li>
<li>Implement and apply Python scripting</li>
<li>Perform advanced vector and raster analysis</li>
<li>Perform fundamentals of geodatabase design and operate within a multi-user geodatabase</li>
<li>Perform surface modeling and analysis</li>
<li>Utilize advanced modeling techniques</li>
<li>Identify and resolve common workflows</li>
<li>Author a mosaic dataset</li>
<li>Demonstrate proficiency in ArcGIS Desktop user interface and environment configuration</li>
<li>Determine and define an appropriate coordinate system</li>
<li>Manipulate data with Spatial Analyst, 3D Analyst, and Network Analyst extensions</li>
<li>Author and publish to a web GIS portal</li>
<li>Implement and apply web content or services to perform analyses</li>
<li>Configure web app templates and Web AppBuilder widgets</li>
</ul>
<p><strong>A qualified candidate should be familiar with the following tools:</strong></p>
<ul>
<li>ArcGIS Desktop (ArcCatalog, ArcMap and ArcGIS Pro)</li>
<li>ArcGIS Online</li>
<li>ArcGIS Enterprise</li>
<li>ArcGIS Network Analyst</li>
<li>ArcGIS Spatial Analyst</li>
<li>ArcGIS 3D Analyst</li>
<li>Python</li>
</ul>
<p><strong>A qualified candidate should NOT be expected to perform the following tasks:</strong></p>
<ul>
<li>Deliver production quality cartographic output with specific industry solutions</li>
<li>Administer a multi-user geodatabase</li>
<li>Develop or administer websites</li>
<li>Develop tools or apps using any SDK or API</li>
<li>Network or systems administration</li>
<li>Administer an ArcGIS Online organization</li>
</ul>
<h2 id="Skill-Measured"><a href="#Skill-Measured" class="headerlink" title="Skill Measured"></a>Skill Measured</h2><p>The following list will familiarize candidates with the exam sections to help guide exam preparation. The relative weight of each section is provided to illustrate the approximate size of each section. Candidates should review this list and assess their knowledge of each skill. Specific preparation resources are available to assist with refreshing in areas where any knowledge gaps are found.</p>
<p><strong>Data Storage — 21%</strong></p>
<ul>
<li>Given requirements for a specific project, determine how to design a geodatabase</li>
<li>Select appropriate data formats for an intended use</li>
<li>Given a task, determine the data, settings, and parameters for creating a complex data set</li>
<li>Given a task, determine the data, settings, and parameters for creating an address locator</li>
<li>Given a scenario, determine how to synchronize replicated data</li>
</ul>
<p><strong>Managing Data — 26%</strong></p>
<ul>
<li>Given a scenario, convert and aggregate data to an appropriate format</li>
<li>Given a task, determine the necessary schema changes so that the data can support a particular operation</li>
<li>Given datasets that do not align, determine the best workflow to resolve the issue</li>
<li>Given a project, determine how to manage coordinate systems</li>
<li>Given a scenario, determine the method to create a surface dataset</li>
<li>Given a scenario, determine how to automate data management</li>
</ul>
<p><strong>Visualizing and Sharing Data — 21%</strong></p>
<ul>
<li>Given a scenario, use advanced cartographic techniques to visualize content across the ArcGIS platform</li>
<li>Given a scenario, determine how to optimize rendering of maps across the platform</li>
<li>Given a scenario, determine how to create and render scenes</li>
<li>Identify procedures to create and publish layers, maps, and apps for a given task</li>
<li>Given a scenario, determine the most effective process for sharing content</li>
<li>Given a scenario, determine how to automate visualization and sharing using ArcPy in ArcGIS Desktop</li>
</ul>
<p><strong>Analysis and Geoprocessing — 31%</strong></p>
<ul>
<li>Determine how to create and edit a Python script to automate a simple repetitive process in an ArcGIS workflow</li>
<li>Determine how to create and edit a model in ModelBuilder to automate a complex workflow in ArcGIS for a given task</li>
<li>Given a failed workflow, determine the cause of the failure</li>
<li>Given user requirements, determine an appropriate method for sharing a geoprocessing model, script, package, toolbox, etc.</li>
<li>Determine how to customize the user interface to perform a task</li>
<li>Determine how to author tasks in ArcGIS Pro</li>
<li>Given a scenario that requires an analysis, determine the workflow, data, tools, settings, and parameters to perform the analysis</li>
</ul>
<h2 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h2><p>A qualified candidate should be familiar with following software:</p>
<ul>
<li>ArcGIS Desktop (ArcCatalog 10.5, ArcMap 10.5 and ArcGIS Pro 1.4)</li>
<li>ArcGIS Spatial Analyst extension</li>
<li>ArcGIS Network Analyst extension</li>
<li>ArcGIS 3D Analyst extension</li>
<li>ArcGIS Online</li>
<li>ArcGIS Enterprise 10.5</li>
<li>Python 2.7 and 3.5</li>
</ul>
<h2 id="Exam-Details"><a href="#Exam-Details" class="headerlink" title="Exam Details"></a>Exam Details</h2><p>Number of questions: 80<br>Certification code: EADP105<br>Exam duration: 2 Hours<br>Exam type: Multiple choice, multiple select<br>Published date: June 2017<br>Exam state: Available to public</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ArcGIS Pro </tag>
            
            <tag> Certification </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[小结空间插值分析]]></title>
      <url>/2017/10/15/SpatialInteroplation/</url>
      <content type="html"><![CDATA[<p>空间插值分析的基本原则是“<a href="https://en.wikipedia.org/wiki/Tobler%27s_first_law_of_geography" target="_blank" rel="noopener">地理学第一定律</a>”，即“Everything is related to everything else, but near things are more related than distant things”，这是Waldo Tobler提出的。 例如，如果你所在的位置正在下雨，那么很有可能离你100米的位置也在下雨，而20公里以外的地方下雨就不一定了，或者说可能性就低了很多。 大多数插值方法遵循了这样的准则。</p>
<p>插值方法大致可以分为，<strong>确定性插值方法/Deterministic interpolation methods</strong>和随机性插值方法： 确定性插值方法使用了<a href="https://en.wikipedia.org/wiki/Deterministic_algorithm" target="_blank" rel="noopener">确定性算法</a>，即，给予特定的输入数据我们会得到相同的结果； 而<strong>随机性插值方法</strong>是基于统计学的，通常用于更高级的表面预测建模，这种建模方法不仅可以预测表面的数值，也可能会带来误差或者不确定性，一些常见的地统计插值方法就属于这个范畴。</p>
<p>从参与计算预测值的采样点的范围来看，确定性插值方法可以分为<strong>全局/Globe</strong>和<strong>局部/Local</strong>两种。 全局插值方法在计算预测值时使用了整个数据集，而局部插值方法是通过特定的领域来计算预测值。</p>
<p>从预测表面是否穿过已知采样点来看，确定性插值还可以分为<strong>精确/exact</strong>和<strong>非精确/inexact</strong>两种。 如果插值算法预测的采样点位置的数值与采样点自身的数据一致，那么就是精确插值；否则为非精确插值。</p>
<ul>
<li>精确插值：   反距离权重法/IDW，径向基函数法/radial basis functions，样条函数法/Spline</li>
<li>非精确插值： 全局或局部多项式法/global and local polynomial</li>
</ul>
<p><strong>IDW 插值方法</strong></p>
<p>IDW是一种非常实用又很好理解的插值方法，适用于大多数情况。但是有关这个算法还有些注意事项：IDW并没有考虑数据的趋势，例如，如果数据在不同的方向上有不同的变化，那么这会被IDW方法忽略，IDW得到的是各个方向均一的预测插值；IDW插值仅在采样点的最大值和最小值之间进行预测插值，如果你是高程表面建模，那么山峰和河谷很有可能被抹平了。</p>
<p>IDW插值时，可以设置power参数来控制周围采样点对插值影响的显著性。 power值越大，较远的点对预测插值的影响就会越弱，也就是说，远处的采样点对预测值的影响随着power的增大而削减越快。power可以是任意正数，但是通常取值范围是0.5-3，默认为2。</p>
<p>有关IDW还有个常见小问题。既然IDW是精确插值，那为什么有时候看采样点所在像元的预测值与采样点值还是稍有差异？这是因为采样点并没有恰好落在像元的正中心。</p>
<p><strong>样条函数插值方法/Spline Method</strong></p>
<p>样条函数相比IDW更灵活，我们可以想象一下通过一张橡皮膜穿过所有已知采样点来预测表面。 样条函数法不像IDW，它可以是预测值高于或低于已知采样点的最大值或最小值。 然而，如果相聚非常近的采样点的值变化非常剧烈，样条函数就会出现异常，因为样条函数的算法中是基于坡度（单位距离的值变化量）来计算预测值的。 也就是说，例如，如果你的数据中如果含有悬崖，断层线，最好还是用IDW吧。</p>
<p>样条函数有两种类型： regularized 和 tension。 使用相同的采样点，tension spline比 regularized spline得到的预测表面更扁平，也就是使得预测值更接近采样值。 或者说tension spline更僵硬，而regularized spline 更有弹性，这个描述看起来更生动。</p>
<p>另外一个可以进一步控制预测表面的形态的参数是权重/weight。对于regularized spline，权重越高表面越平滑，常用的典型参数有0, 0.001、 0.01、 0.1、 0.5，默认是0.1；对于tension spline，权重越高表面约粗糙，常用的典型参数有0、 1、 5、10。</p>
<p><strong>地形转拓扑/Topo to Raster</strong></p>
<p>这是一种水文校正的插值方法，可以综合点线面输入数据，充当不同的角色或类别进行表面建模。 </p>
<blockquote>
<p>从帮助中摘过来的描述：</p>
</blockquote>
<p>共有九种数据类型可作为地形类的输入：</p>
<ul>
<li>PointElevation 表示表面高程的点要素类，field 用于存储点的高程。</li>
<li>Contour 表示高程等值线的线要素类， field 用于存储等值线的高程。</li>
<li>Stream 河流位置的线要素类。所有弧线必须定向为指向下游。要素类中应该仅包含单条弧线组成的河流。</li>
<li>Sink 表示已知地形凹陷的点要素类。</li>
<li>Boundary 边界是包含表示输出栅格外边界的单个面的要素类。在输出栅格中，位于此边界以外的像元将为 NoData。此选项可用于在创建最终输出栅格之前沿海岸线裁剪出水域。 </li>
<li>Lake 指定湖泊位置的面要素类。湖面内的所有输出栅格像元均将指定为使用沿湖岸线所有像元高程值中最小的那个高程值。</li>
<li>Cliff 悬崖的线要素类。必须对悬崖线要素进行定向以使线的左侧位于悬崖的低侧，线的右侧位于悬崖的高侧。</li>
<li>Exclusion 其中的输入数据应被忽略的区域的面要素类。这些面允许从插值过程中移除高程数据。通常将其用于移除与堤壁和桥相关联的高程数据。这样就可以内插带有连续地形结构的基础山谷。</li>
<li>Coast 包含沿海地区轮廓的面要素类。位于这些面之外的最终输出栅格中的像元会被设置为小于用户所指定的最小高度限制的值。<br>PointElevation、Contour 和 Sink 要素输入类型均可指定包含 z 值的字段。但对于 Boundary、Lake、Cliff、Coast、Exclusion 或 Stream 输入类型则不存在 Field 选项。</li>
</ul>
<p>容差 1 和容差 2 设置的典型值为：</p>
<ul>
<li>对于比例为 1:100,000 的点数据，请分别使用 5.0 和 200.0。</li>
<li>对于比例高达 1:500,000 的较不密集的点数据，请分别使用 10.0 和 400.0。</li>
<li>对于等值线间距为 10 的等值线数据，请分别使用 5.0 和 100.0。<br>容差 2 应至少比容差 1 大 6 倍。</li>
</ul>
<p>插值方法其实还有很多，今天就针对Esri Training的课程整理这些吧。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何创建ArcMap的启动日志？]]></title>
      <url>/2017/08/14/ArcMapStartupLog/</url>
      <content type="html"><![CDATA[<p>ArcMap 启动时崩溃，想看看究竟发生了什么，ArcMap卡在哪一步失败了？</p>
<p>那么 “cmd” 打开命令行，跳转到 ArcGIS Desktop 安装目录，然后使用 <code>arcmap.exe /log</code> 来启动 ArcMap同时创建日志。</p>
<p>日志默认创建在 arcmap.exe 的相同目录，命令行直接打开日志 <code>notepad arcmap.log</code></p>
<p><img src="http://7xs3vz.com1.z0.glb.clouddn.com/ArcMapStartupLog.png" alt=""></p>
<p>日志样例：</p>
<p>Initializing license…done<br>Parsed command line<br>Creating App…<br>done<br>Processing shell command…<br>Creating New Document…<br>Opening normal template…done…<br>Loading printer information…done…<br>New VBA project…done…<br>Add first mapDone creating New Document<br>done<br>Loading extensions…done<br>Startup complete<br>Done processing shell command<br>Calling ApcSethWnd()…done</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Performance </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[回归后的新起点]]></title>
      <url>/2017/08/01/AnotherBeginning/</url>
      <content type="html"><![CDATA[<p>离开kikitamap.com有点久，这期间完成了人生的一件大事，如今已经返回工作，又开始了探索技术的无尽模式。 发现育儿并不比ArcGIS更简单，哈，现在需要学习的东西真的是成倍的增长，无论我是愚公还是天神，“两座大山”摆在面前，都得需要翻越或者搬起。</p>
<p>人生很奇妙，有的成长几乎是一瞬间完成的，就如孩子的微笑、抬头、翻身，忽然有一天就给你带来惊喜；与孩子一同成长，我也变得愈加淡定从容，愈加理解人生真正所求，愈加懂得取悦自己。 记得有朋友问过我，为啥不弄个公众号，现在不流行博客。 公众号当下很好，但它在于广而告之，推广是核心，可是这不是我想要的；我喜欢有个属于自己的角落随意写点东西，研究点有意思的事情，而不被它所牵制，更多的是留给自己与真正需要和关心的人。</p>
<p>“活到老，学到老。” —— 一句老气的至理名言。 学习是条渴望尽头却没有尽头的不归路，但是也不要轻易的“回头是岸”，或是吭哧吭哧地“苦作舟”，自己寻点乐子吧。 </p>
<p><img src="http://kikitamap.com/images/blogImg/SSN_AnotherBeginning.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[VS部署应用程序失败'找不到SignTool.exe']]></title>
      <url>/2017/02/07/VSpublishFailure/</url>
      <content type="html"><![CDATA[<p>在使用 Visual Studio 2015 部署应用的时候遇到一个问题，在进行publish之后又提示错误：“An error occurred while signing: SignTool.exe not found.”。</p>
<p><img src="http://kikitamap.com/images/blogImg/VSpublishFailure_Error.jpg" alt=""></p>
<p>查了下官方的技术文档，解决方法如下：</p>
<p>先确认下自己的机器是否安装了 signtool.exe, 如果安装了则位于：</p>
<pre><code>`%programfiles(x86)%\Microsoft SDKs\Windows\v7.0A\Bin   for x64 system`
`%programfiles%\Microsoft SDKs\Windows\v7.0A\Bin        for x86 system`
</code></pre><p>signtool.exe 是 Windows平台SDK的一部分，如果在上面的路径中没有发现这个文件，那就需要安装下。 <a href="https://msdn.microsoft.com/en-us/library/8s9b9yaz.aspx" target="_blank" rel="noopener">signtool.exe 是什么？</a></p>
<p>方法很简单，重新执行VS的安装程序，选择Custom模式，补充安装 <code>ClickOnce Publishing Tools</code> 。</p>
<p><img src="http://kikitamap.com/images/blogImg/VSpublishFailure_Setup.png" alt=""></p>
<p>安装完成后，问题解决。</p>
<p><br></p>
<p>技术文档详情，点<a href="https://blogs.msdn.microsoft.com/vsnetsetup/2013/11/18/an-error-occurred-while-signing-signtool-exe-not-found/" target="_blank" rel="noopener">这里</a>。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Visual Studio </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[生成线要素分段缓冲区]]></title>
      <url>/2017/01/23/CreateSplittedBuffer/</url>
      <content type="html"><![CDATA[<p>前段时间做了个小工具，可以生成线要素的分段缓冲区，补充 ArcGIS 现有缓冲区工具的不足，用来辅助实现更多的功能。</p>
<p><img src="http://kikitamap.com/images/blogImg/CreateSplittedBuffer_Tool.png" alt=""></p>
<p>工具基于 arcpy、maths、os 几个模块实习，arcpy 中并没有提供现成的计算切线方向的函数或接口，我就尝试通过点处微小偏移量的三角定理计算方法构造切线，然后进行角度换算实现垂线的构造，最后再用垂线去切割缓冲区条带。</p>
<p><br></p>
<p>链接中可以下载 ArcGIS Desktop 或者 ArcGIS Pro 的工具箱版本（ 开发版本：Desktop 10.5，Pro 1.3，其他版本需要自己测试下 ）：</p>
<p><a href="https://github.com/kikitaMoon/ArcGIS-Python/tree/master/LazyWorker/BambooBuffer" target="_blank" rel="noopener">https://github.com/kikitaMoon/ArcGIS-Python/tree/master/LazyWorker/BambooBuffer</a><br>(更新20171204：改SplittedBuffer为BambooBuffer，好像更形象一点)</p>
<p>以在 ArcGIS Pro 中添加和使用为例：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreateSplittedBuffer_UI.png" alt=""></p>
<p><br></p>
<p>工具源码参考：<br><a href="https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/BambooBuffer/PerpendicularLine_2.0_Tool.py" target="_blank" rel="noopener">https://github.com/kikitaMoon/ArcGIS-Python/blob/master/LazyWorker/BambooBuffer/PerpendicularLine_2.0_Tool.py</a></p>
<p><br></p>
<p>基于工具的应用实例：</p>
<p>1  统计公路各分段的拥堵情况</p>
<p><img src="http://kikitamap.com/images/blogImg/CreateSplittedBuffer_Road.png" alt=""></p>
<p>2  河道分段水位模拟</p>
<p><img src="http://kikitamap.com/images/blogImg/CreateSplittedBuffer_River.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Python </tag>
            
            <tag> ArcGIS Pro </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Python API 功能一瞥]]></title>
      <url>/2017/01/22/PythonAPIFunction1/</url>
      <content type="html"><![CDATA[<p>继上一篇<a href="http://kikitamap.com/2016/10/17/UsingArcGISPythonAPI/" target="_blank" rel="noopener">部署 ArcGIS Python API</a> 之后，再来试试 Python API 的渲染和分析的功能。 通过这两个功能来摸索下 ArcGIS Python API 的使用方法。</p>
<h1 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h1><p><strong>1  导入gis模块，创建GIS对象</strong></p>
<p>在 ArcGIS Python API 中 gis 是个核心模块，提供了对组织内成员、群组、内容的创建、读取、更新和删除等功能，你的组织既可以是托管在ArcGIS Online中，也可以是自己部署的门户（Portal for ArcGIS），或者更准确的说，在10.5版本应该称为 ArcGIS Enterprise.</p>
<p>GIS对象是gis模块最重要的对象，我们可以理解为，GIS对象是通过ArcGIS Python API编写脚本的入口。 </p>
<p>下面以我的 ArcGIS Enterprise 测试环境为例：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> arcgis.gis <span class="keyword">import</span> GIS</span><br><span class="line"></span><br><span class="line"><span class="comment"># Demo</span></span><br><span class="line"><span class="comment"># class arcgis.gis.GIS(url=None, username=None, password=None,  key_file=None, cert_file=None, verify_cert=True, set_active=True)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#          #Portal URL                         #UserName     #Passward</span></span><br><span class="line">gis = GIS(<span class="string">"https://kikita.mycloud.com/arcgis"</span>,<span class="string">"portaladmin"</span>,<span class="string">"mypasswd"</span>, verify_cert=<span class="keyword">False</span>)</span><br></pre></td></tr></table></figure>
<p><strong>2  获取感兴趣的内容</strong></p>
<p>通过 gis.content.search() 方法可以在组织中查找所需内容。例如我查找命名包含 “China_Railways” 的要素服务。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Search My Portal</span></span><br><span class="line">search_result = gis.content.search(<span class="string">'title: China_Railways'</span>, item_type=<span class="string">'Feature Layer'</span>)</span><br><span class="line">search_result</span><br></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&lt;Item title:&quot;China_Railways&quot; type:Feature Service owner:portaladmin&gt;,</span><br><span class="line"> &lt;Item title:&quot;China_Railways___county_pt_Density&quot; type:Feature Service owner:portaladmin&gt;]</span><br></pre></td></tr></table></figure></p>
<p><strong>3  使用地图微件</strong></p>
<p>GIS对象中包含一个地图微件，可以用来渲染（可视化）组织中的内容，比如要素服务。我们还可以通过关键字来确定地图的显示位置，和指定地图的幅面尺寸等。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Create a map widget</span></span><br><span class="line">mymap = gis.map(<span class="string">'China'</span>)</span><br><span class="line">mymap.height = <span class="string">'500px'</span></span><br><span class="line">mymap</span><br></pre></td></tr></table></figure>
<p><strong>4 添加图层并渲染</strong></p>
<p>例如使用热度图/Heatmap 渲染器</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Add layer using heatmap renderer</span></span><br><span class="line">featureitem = search_result[<span class="number">0</span>]</span><br><span class="line">mymap.add_layer(featureitem.layers[<span class="number">0</span>], &#123;<span class="string">"renderer"</span>:<span class="string">"HeatmapRenderer"</span>, <span class="string">"opacity"</span>:<span class="number">0.7</span>&#125;)</span><br></pre></td></tr></table></figure>
<p><img src="http://kikitamap.com/images/blogImg/PythonAPIFunction1_MapWidget.gif" alt=""></p>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>假设需求是实现采样点插值，数据来源是桌面产品自带的ArcGIS Tutorial中的数据（Geostatistical Analyst\ca_ozone.gdb\O3_Sep06_3pm）。</p>
<p>除了通过搜索的方法，如果知道 itemid ，也能直接获得到内容，可以使用方法 gis.content.get()</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> arcgis <span class="keyword">import</span> gis</span><br><span class="line">gis = gis.GIS(<span class="string">"https://kikita.mycloud.com/arcgis"</span>,<span class="string">"portaladmin"</span>,<span class="string">"Super123"</span>, verify_cert=<span class="keyword">False</span>)</span><br><span class="line">search_result = gis.content.get(<span class="string">'15b012af7f15484293517c844d2d65ab'</span>)</span><br><span class="line">search_result</span><br></pre></td></tr></table></figure>
<p><img src="http://kikitamap.com/images/blogImg/PythonAPIFunction1_GetItem.png" alt=""></p>
<p>还是使用地图微件，用来显示下数据和分析结果。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mymap = gis.map(<span class="string">'California'</span>)</span><br><span class="line">mymap.height = <span class="string">'500px'</span></span><br><span class="line">mymap</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">O3layer = search_result.layers[<span class="number">0</span>]</span><br><span class="line">mymap.add_layer(O3layer)</span><br></pre></td></tr></table></figure>
<p>Portal 中提供了一系列的“工具”，可以辅助我们实现分析的需求，包括 标准的分析工具、矢量大数据分析GeoAnalytics Tools、栅格数据分析等，一系列分析功能都可以通过 ArcGIS Python API 调用。  这里就以 interpolate points 为例。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> arcgis.features.analyze_patterns <span class="keyword">import</span> interpolate_points</span><br><span class="line">Interpolate = interpolate_points(O3layer, field=<span class="string">'ozone'</span>, output_name=<span class="string">'O3layerInterpolated2'</span>)</span><br><span class="line">mymap.add_layer(Interpolate)</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> ArcGIS Enterprise </tag>
            
            <tag> Web </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[孩童般]]></title>
      <url>/2017/01/13/Childlike/</url>
      <content type="html"><![CDATA[<blockquote>
<p>摄于 2016-6-20，Disneyland, 香港</p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/XJL_IMG_5792.jpg" alt=""></p>
<p>越长大越复杂，不提醒自己，常常就忘记了快乐<br>有时，我们需要像孩童般，简单直接开放地面对生活<br>2017，继续努力吧 </p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[父亲节的作品]]></title>
      <url>/2017/01/13/Painting/</url>
      <content type="html"><![CDATA[<blockquote>
<p>摄于 2016-6-19，海港城，香港</p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/XJL_IMG_5651.jpg" alt=""></p>
<p>父亲节，刚好在海港城<br>偶然看到小朋友的作品，觉得好有爱<br>对宝宝多年无感的我们<br>那时忽然觉得有个孩子好像也不错<br>不是为了传宗接代，不是为了完成所谓的使命<br>只是静静地看着ta成长<br>我们尽可能多地给予陪伴</p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[部署 ArcGIS Python API]]></title>
      <url>/2016/10/17/UsingArcGISPythonAPI/</url>
      <content type="html"><![CDATA[<blockquote>
<p>UPDATE 2017-1-3  ArcGIS Python API V1.0</p>
</blockquote>
<h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><h2 id="1-获取并安装Conda"><a href="#1-获取并安装Conda" class="headerlink" title="1 获取并安装Conda"></a>1 获取并安装Conda</h2><p>下载安装 Anaconda for Python（python 3.5），<a href="https://www.continuum.io/downloads" target="_blank" rel="noopener">下载地址</a>。 如果机器上已经安装过ArcGIS Pro 1.3及以上版本，那么Conda已经被自动安装了，直接执行“Python Command Prompt”即可继续下一步。</p>
<p><em>就更新这天的测试结果看，ArcGIS Pro 1.4 Alpha4 版本自带的conda环境为：4.0.11， 手动可以下载到的最高版本为 4.2.0.</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[arcgispro-py3] C:\Program Files\ArcGIS\Pro\bin\Python\envs\arcgispro-py3&gt;conda info</span><br><span class="line">Current conda install:</span><br><span class="line"></span><br><span class="line">             platform : win-64</span><br><span class="line">        conda version : 4.0.11</span><br><span class="line">  conda-build version : not installed</span><br><span class="line">       python version : 3.5.2.final.0</span><br><span class="line">     requests version : 2.11.1</span><br><span class="line">     root environment : C:\Program Files\ArcGIS\Pro\bin\Python  (writable)</span><br><span class="line">  default environment : C:\Program Files\ArcGIS\Pro\bin\Python\envs\arcgispro-py3</span><br><span class="line">     envs directories : C:\Program Files\ArcGIS\Pro\bin\Python\envs</span><br><span class="line">        package cache : C:\Program Files\ArcGIS\Pro\bin\Python\pkgs</span><br><span class="line">         channel URLs : https://conda.anaconda.org/esri/win-64/</span><br><span class="line">                        https://conda.anaconda.org/esri/noarch/</span><br><span class="line">                        https://repo.continuum.io/pkgs/free/win-64/</span><br><span class="line">                        https://repo.continuum.io/pkgs/free/noarch/</span><br><span class="line">                        https://repo.continuum.io/pkgs/pro/win-64/</span><br><span class="line">                        https://repo.continuum.io/pkgs/pro/noarch/</span><br><span class="line">          config file : C:\Program Files\ArcGIS\Pro\bin\Python\.condarc</span><br><span class="line">    is foreign system : False</span><br></pre></td></tr></table></figure>
<p><br></p>
<h2 id="2-安装arcgis包"><a href="#2-安装arcgis包" class="headerlink" title="2 安装arcgis包"></a>2 安装arcgis包</h2><p>在Python Command Prompt，执行如下命令下载安装 ArcGIS Python API 到Conda环境。</p>
<p><code>conda install -c esri arcgis</code></p>
<p>从旧的 arcgis 包升级</p>
<p><code>conda upgrade -c esri arcgis</code></p>
<p><em>在安装过程中，会自动下载很多包到 <strong>C:\Program Files\ArcGIS\Pro\bin\Python\pkgs</strong> ，并自动安装，我们可以随时关注命令窗口中的消息了解。 最后，也会自动激活 jupyter notebook 的扩展 arcgis/mapview。  看到后面这个消息，这个过程就结束了： <strong>Enabling notebook extension arcgis/mapview…  - Validating: ok</strong> </em></p>
<p><em>这里相比 0.1，0.3 等beta版本的安装简便易懂了一些，忘记上次的命令吧（ conda install -c conda-forge ipywidgets； conda install -c esri arcgis=0.1； python -m arcgis.install）。</em></p>
<p><br></p>
<h2 id="3-启动-Jupiter-notebook"><a href="#3-启动-Jupiter-notebook" class="headerlink" title="3 启动 Jupiter notebook"></a>3 启动 Jupiter notebook</h2><p><code>jupyter notebook [--port=&lt;int&gt;]</code></p>
<p>默认采用8888端口号，如有占用，注意切换。</p>
<p><br></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>新建一个 Python 3 的 notebook，然后输入如下几行：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> arcgis.gis <span class="keyword">import</span> *</span><br><span class="line">gis = GIS()</span><br><span class="line">gis.map()</span><br></pre></td></tr></table></figure>
<p>Bingo!</p>
<p><img src="http://kikitamap.com/images/blogImg/UsingArcGISPythonAPI.png" alt=""></p>
<p><br></p>
<p>ArcGIS Python API 的官方简短介绍视频 （<em>Youtube源，请翻墙，你懂的</em>）</p>
<iframe width="960" height="540" src="http://www.esri.com//videos/iframe?videoid=SyFebn8ZgbU&channelid=UCgGDPs8cte-VLJbgpaK4GPw&title=arcgis-python-api-in-5-minutes&autoplay=false" frameborder="0" allowfullscreen></iframe>

]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> ArcGIS Enterprise </tag>
            
            <tag> Web </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在CityEngine中如何判断线的方向与左右？]]></title>
      <url>/2016/09/30/LineDirectioninCE/</url>
      <content type="html"><![CDATA[<p>在我们建模的过程中，通常会遇到一些实际问题，例如，如何在道路右边放置交通指示灯？ 如何在道路的左边放置行树？如何在管线的末尾放置阀门？等等。</p>
<p>这些有关线状要素的方向和左右的判断，可以通过UV坐标系来确定的。 线的UV坐标系与线的方向相关，</p>
<p><img src="http://kikitamap.com/images/blogImg/LineDirectioninCE.png" alt=""></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * File:    LineDirection.cga</span></span><br><span class="line"><span class="comment"> * Created: 22 Sep 2016 06:06:18 GMT</span></span><br><span class="line"><span class="comment"> * Author:  kikit</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">version <span class="string">"2016.0"</span></span><br><span class="line"></span><br><span class="line">init --&gt; </span><br><span class="line">Line2</span><br><span class="line"></span><br><span class="line">split(u,unitSpace,<span class="number">0</span>)&#123;<span class="string">'0.1:StartSegment|'</span><span class="number">0.8</span>:NIL|<span class="string">'0.1:EndSegment&#125;</span></span><br><span class="line"><span class="string">StartSegment --&gt; color(0,1,0) #Green</span></span><br><span class="line"><span class="string">EndSegment --&gt; color(1,0,0)   #Red</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Line2 --&gt;</span></span><br><span class="line"><span class="string">translate(rel,world,0,0,-20)</span></span><br><span class="line"><span class="string">split(v,unitSpace,0)&#123;'</span><span class="number">0.2</span>:LeftSide|<span class="string">'0.6:NIL|'</span><span class="number">0.2</span>:RightSide&#125;</span><br><span class="line">LeftSide --&gt; color(1,1,0)   #Yellow</span><br><span class="line">RightSide --&gt; color(0,1,1)  #Blue</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
            <tag> CGA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何使用py2exe打包arcpy脚本？]]></title>
      <url>/2016/09/29/PackageArcpyEXE/</url>
      <content type="html"><![CDATA[<p>我们可以在ArcGIS之外调用arcpy站点包运行python独立脚本，从而批量化任务提高工作效率。 如果可以把做好的脚本打包成exe是不是就更方便了呢？想想一键式处理也挺开心的。</p>
<p>Python打包的问题最早是在 <a href="http://zhihu.esrichina.com.cn/" target="_blank" rel="noopener">ArcGIS知乎</a> 中看到的，有人提问为何打包失败，我还有幸被邀请回答，虽然在这一块我也是小白一枚。 后来，得空时也搜了下相关的资源，虽然大部分人持悲观态度说arcpy不支持打包，但刚好<a href="https://geonet.esri.com/thread/164101" target="_blank" rel="noopener">有个帖子</a>说可以实现，并且宣称 “It can be done easily!”，那我就动手试试吧。</p>
<h1 id="Step1-下载安装Py2exe"><a href="#Step1-下载安装Py2exe" class="headerlink" title="Step1 下载安装Py2exe"></a>Step1 下载安装Py2exe</h1><p>Py2exe是一个Python工具发布扩展包，可以用来将Python脚本转化为Windows的可执行程序，详情看 <a href="http://py2exe.org/" target="_blank" rel="noopener">官网 py2exe.org</a> 。</p>
<p>下载Py2exe安装程序，下载地址戳 <a href="https://sourceforge.net/projects/py2exe/files/py2exe/0.6.9/" target="_blank" rel="noopener">这里</a> 。</p>
<p>ArcGIS Desktop使用的Python 2.7.x版本，可以对应下载安装 <strong><code>py2exe-0.6.9.win32-py2.7.exe</code></strong> 这个32位的版本；如果你的机器上安装 ArcGIS Desktop 64-bit Background Geoprocessing 补丁或者安装了 ArcGIS Server产品，也可以下载安装 <strong><code>py2exe-0.6.9.win64-py2.7.amd64.exe</code></strong>。 在这篇博客中，我就以 64位的包为例来说明打包的过程。</p>
<p><br></p>
<h1 id="Step2-编写脚本文件准备打包"><a href="#Step2-编写脚本文件准备打包" class="headerlink" title="Step2 编写脚本文件准备打包"></a>Step2 编写脚本文件准备打包</h1><p>打包时需要有至少两个脚本文件，一个是 <code>setup_py2exe.py</code>, 一个是执行实际任务的 <code>HelloPy2exe.py</code> 脚本文件。</p>
<p><strong>先</strong> 看第一个脚本 setup_py2exe.py，包含如下两行：</p>
<p>为了打包时包含arcpy的资源，不要忘记如下options。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">options = &#123;<span class="string">"py2exe"</span>: &#123;<span class="string">"excludes"</span>: [<span class="string">"arcpy"</span>]&#125;&#125;  </span><br><span class="line">setup(console=[<span class="string">'HelloPy2exe.py'</span>], options=options)</span><br></pre></td></tr></table></figure>
<p><strong>再</strong> 来看第二个脚本 HelloPy2exe.py：</p>
<p><code>path.dirname(interpreter)</code> 可以得到Python解释器（python.exe）的路径，并向 sys.path 添加site-packages目录。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> site <span class="keyword">import</span> addsitedir  </span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> executable  </span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> path  </span><br><span class="line">interpreter = executable  </span><br><span class="line">sitepkg = path.dirname(interpreter) + <span class="string">"\\site-packages"</span> </span><br><span class="line">print(sitepkg) </span><br><span class="line">addsitedir(sitepkg)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 这里编写实际需要执行的任务 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">	print(<span class="string">'Start Processing ...'</span>)</span><br><span class="line">    main()</span><br><span class="line">    raw_input(<span class="string">"Enter enter key to exit..."</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<h1 id="Step3-执行打包"><a href="#Step3-执行打包" class="headerlink" title="Step3 执行打包"></a>Step3 执行打包</h1><p>为了简化打包过程，可以事先做个bat文件，放在与上述连个py文件相同的目录：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python setup_py2exe<span class="selector-class">.py</span><span class="selector-class">.py</span> py2exe</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p>如果提示python不是有效的应用程序，那么python可以使用python.exe的绝对路径（如：C:\Python27\ArcGISx6410.4\python.exe），或者在 windows的环境变量path中添加python.exe所在的路径。</p>
<p>OK, 执行bat文件打包吧。</p>
<p><img src="http://kikitamap.com/images/blogImg/PackageArcpyEXE_1.png" alt=""></p>
<p><br></p>
<h1 id="Step4-添加PTH文件"><a href="#Step4-添加PTH文件" class="headerlink" title="Step4 添加PTH文件"></a>Step4 添加PTH文件</h1><p>为了使得exe程序可以使用arcpy的资源，需要在发布后的dist目录中增加 site-packages 文件夹，并增加 *.pth 文件，<code>...\dist\site-packages\Desktop10.4_64bit.pth</code>。</p>
<p>以64位为例，文件中需要包含如下路径（我的ArcGIS Desktop是默认路径安装的，你要看好自己路径哦）：</p>
<figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:<span class="symbol">\P</span>rogram Files (x86)<span class="symbol">\A</span>rcGIS<span class="symbol">\D</span>esktop10.4<span class="symbol">\b</span>in64</span><br><span class="line">C:<span class="symbol">\P</span>rogram Files (x86)<span class="symbol">\A</span>rcGIS<span class="symbol">\D</span>esktop10.4<span class="symbol">\A</span>rcPy</span><br><span class="line">C:<span class="symbol">\P</span>rogram Files (x86)<span class="symbol">\A</span>rcGIS<span class="symbol">\D</span>esktop10.4<span class="symbol">\A</span>rcToolBox<span class="symbol">\S</span>cripts</span><br><span class="line">C:<span class="symbol">\P</span>ython27<span class="symbol">\A</span>rcGISx6410.4<span class="symbol">\L</span>ib</span><br><span class="line">C:<span class="symbol">\P</span>ython27<span class="symbol">\A</span>rcGISx6410.4<span class="symbol">\L</span>ib<span class="symbol">\s</span>ite-packages</span><br></pre></td></tr></table></figure>
<blockquote>
<p>PS： 开头提到的帖子中，没有提到要增加 C:\Python27\ArcGISx6410.4\Lib 和 C:\Python27\ArcGISx6410.4\Lib\site-packages 这两个路径，我在执行exe时屡屡失败，不得其解。 快要放弃的时候，经过和同事讨论和测试，发现加上这两个路径，找不到 Numpy、Numbers等等包的错误就解决了，开心！</p>
</blockquote>
<p><br></p>
<p>最后，执行exe即可，这个示例中仅对两个数据进行投影变换，后面可以做些更复杂的工作。</p>
<p><img src="http://kikitamap.com/images/blogImg/PackageArcpyEXE_2.png" alt=""></p>
<p><br></p>
<h1 id="后续思考"><a href="#后续思考" class="headerlink" title="后续思考"></a>后续思考</h1><p>arcpy并不是一个免费的站点包，arcpy作为ArcGIS产品的一部分，完全脱离ArcGIS产品是不行的！ Import arcpy内部其实会默默地检测产品许可的。 如果你没有产品许可，可能会遇到 “RuntimeError：NotInitialized” 这样的初始化失败的错误。</p>
<p>就现在的测试结果而言，我打包好的exe，放到其他安装有ArcGIS Desktop（64位python需要安装ArcGIS Desktop 64-bit Background Geoprocessing 补丁），ArcGIS Server的机器上都是可以正常运行的。</p>
<p>后面我会再做一些更复杂的测试，有时间的话再放上来。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> ArcGIS Pro </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Trip To HngKong]]></title>
      <url>/2016/09/02/TripToHngKong/</url>
      <content type="html"><![CDATA[<blockquote>
<p>2016年6月 海港与童心</p>
</blockquote>
<iframe width="720" height="600" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="http://kikitamoon.maps.arcgis.com/apps/MapTour/index.html?appid=6e14b73f21414cf6823c607be05cd916"></iframe>


<p>详情访问：<a href="http://kikitamoon.maps.arcgis.com/apps/MapTour/index.html?appid=6e14b73f21414cf6823c607be05cd916" target="_blank" rel="noopener">kikitamoon.maps.arcgis.com</a></p>
<p><img src="http://kikitamap.com/images/blogImg/XJL_TripToHongkong.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Map Story </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在ArcGIS Pro 1.3之外运行arcpy独立脚本]]></title>
      <url>/2016/08/31/ArcGISProPython/</url>
      <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>ArcGIS Pro像ArcMap一样，其中也嵌入了Python。 不同在于ArcGIS Pro采用了python较新的版本3.4，ArcMap仍然沿用2.x版本。 ArcGIS Pro 1.3版本开始Python环境有点小变化，为了方便包管理esri开始采用Conda。 并且不像开始 ArcGIS Pro 1.1，1.2 版本，需要单独安装Python for ArcGIS Pro，在1.3版本python包随ArcGIS Pro一同自行安装。</p>
<p>文档的原文摘过来能更好的理解esri采用Conda的意图：</p>
<blockquote>
<p>Python has a rich ecosystem of preexisting packages that can be leveraged within ArcGIS, but managing which packages are installed on a system can be a complex and time-consuming task, especially when working on multiple projects or trying to share code with others.</p>
<p>To leverage this versatility, the Python community has created methods to easily create projects in multiple versions of Python and simplifies the process of installing nearly all publicly available Python packages. Conda is the most popular and widely used Python package manager.</p>
</blockquote>
<p>看到这里，你也也许和我有一样的疑问，<strong>啥是Conda？</strong> 点 <a href="http://pro.arcgis.com/en/pro-app/arcpy/get-started/what-is-conda.htm" target="_blank" rel="noopener"><strong>这里</strong></a> 。这页文档是esri刚更新的内容，需要在英文语言版本文档中才能找到。</p>
<p><br></p>
<h1 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h1><p>这些改变，对于习惯在 ArcGIS Pro 内部的脚本命令行中执行脚本的用户并没有多大影响。 但是如果已经习惯了在ArcGIS Pro 之外独立执行脚本，那如下的改变要注意下了。</p>
<p>ArcGIS Pro 的Python包不再是ArcMap默认安装的位置 <code>C:\Python27</code> ，而是安装在 <code>ArcGIS Pro的安装目录\bin\Python</code> 。</p>
<p>ArcGIS Pro 采用了的Conda环境为 <strong>arcgispro-py3</strong>，有几个方式可以访问这个环境。</p>
<p><br></p>
<h2 id="1-交互式执行python命令"><a href="#1-交互式执行python命令" class="headerlink" title="1. 交互式执行python命令"></a>1. <strong>交互式执行python命令</strong></h2><p>打开ArcGIS Pro安装目录下propy.bat文件，默认位于:<br><code>&quot;C:\Program Files\ArcGIS\Pro\bin\Python\Scripts\propy.bat&quot;</code></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISProPython_Command.png" alt=""></p>
<h2 id="2-执行py文件"><a href="#2-执行py文件" class="headerlink" title="2 执行py文件"></a>2 <strong>执行py文件</strong></h2><p>CMD打开命令行窗口，通过propy文件执行脚本，例如默认位置：<br><code>&quot;C:\Program Files\ArcGIS\Pro\bin\Python\Scripts\propy&quot; myscript.py</code><br><img src="http://kikitamap.com/images/blogImg/ArcGISProPython_PY.png" alt=""><br>备注：MyScript内容就两行： <code>import arcpy</code>, <code>print(&quot;arcpy imported&quot;)</code></p>
<h2 id="3-批处理py文件"><a href="#3-批处理py文件" class="headerlink" title="3 批处理py文件"></a>3 <strong>批处理py文件</strong></h2><p>通过 call 函数来调用 propy </p>
<p><code>@echo Run my Python script
call &quot;%PROGRAMFILES%\ArcGIS\Pro\bin\Python\Scripts\propy&quot; myscript.py
@echo Finished</code></p>
<p>例子：<br><img src="http://kikitamap.com/images/blogImg/ArcGISProPython_Bat.png" alt=""><br>备注： 三个脚本分别打印 AAA, BBB, CCC。</p>
<p><br></p>
<p><br></p>
<h1 id="使用Python-IDE"><a href="#使用Python-IDE" class="headerlink" title="使用Python IDE"></a>使用Python IDE</h1><p>有一个好用IDE是件美好的事情，大家应该都有各自的真爱，我就不做任何推荐啦。 在Pro之外独立执行脚本导入arcpy站点包的时候，只要注意将Python解释器的路径指向正确即可。</p>
<p>如果你的机器上既安装了ArcGIS Desktop，又安装了ArcGIS Server或者ArcGIS Desktop的后台64位补丁包，并且又安装了ArcGIS Pro， 那么可能在机器上有多个Python环境。</p>
<p>我自己在用 Pycharm ，在需要导入 ArcGIS Pro 的python站点包时，注意指向： <code>&quot;C:\Program Files\ArcGIS\Pro\bin\Python\envs\arcgispro-py3\python.exe&quot;</code></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISProPython_Pycharm.png" alt=""></p>
<p><br></p>
<p>注意，在python IDE 中<strong>不要</strong>将解释器指向这个 python.exe , <code>[&quot;C:\Program Files\ArcGIS\Pro\bin\Python\python.exe&quot;]</code></p>
<p>否则你在导入 arcpy 模块时会遇到找不到模块的错误： <strong>ImportError: No module named ‘arcpy’</strong></p>
<p><br></p>
<p>最后推荐 <a href="https://geonet.esri.com/docs/DOC-8359" target="_blank" rel="noopener">一篇esri的Blog</a>，也详细的阐述的这件事。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> ArcGIS Pro </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Make Query Layer在Model Builder中的使用]]></title>
      <url>/2016/06/30/QueryLayerResult/</url>
      <content type="html"><![CDATA[<p>前两天碰到一个关于在 Model Builder 中使用 Make Query Layer 工具的问题，“如何把Make Query Layer结果输入到下一个工具中？”  </p>
<blockquote>
<p><strong>TIPS</strong>: 什么是 Query Layer？</p>
<p>在ArcMap中，我们可以通过定义SQL语句创建Query Layer，来查询存储在DBMS中的空间数据或者非空间数据。 每次在ArcMap中显示或使用Query Layer时，都会执行查询，因此无需生成数据的副本或快照便可显示最新的信息，这尤其适用于处理频繁更改的动态信息。 Query Layer功能适用于 ArcGIS支持的所有DBMS。<br>~ 详请点这里看 <a href="http://desktop.arcgis.com/en/arcmap/10.3/map/working-with-layers/what-is-a-query-layer-.htm" target="_blank" rel="noopener"><strong>帮助</strong></a>。</p>
</blockquote>
<p>下面通过一个实例先来说明下Query Layer的使用场景。</p>
<p>为了阐述方便，我找了一份数据稍作修改来模拟这个问题，数据位于基于Oracle的ArcSDE数据库，一个空间数据为点要素类，一个非空间表。</p>
<p>点数据表示事件，每发生一次事件（例如报警电话）就记录一个点，假设理想情况下同一个地址的事件都是重合点，如下图高亮的记录； 非空间表中记录了各个地址的某项分值（例如警力配备得分）。</p>
<p>打开脑洞，假设你是警察局长，需求是，获取每个有完整信息的地址（例如，点位于路的左侧或右侧的信息）的报警电话数，并对比警力配备分值，用于后续的工作，例如指挥调配或者空间统计工作等等。这时，使用Query Layer是个好选择。</p>
<p><img src="http://kikitamap.com/images/blogImg/QueryLayerResult_FeatureTable.png" alt=""></p>
<p><br></p>
<p>Query Layer 返回的记录集可以是包含空间信息的 Feature Query Layer ，也可以是非空间信息的 StandAlone Table。 那么，其实在回到文章开头的问题，<strong>“如何把Make Query Layer结果输入到下一个工具中？” 这取决于“下一个工具” 接受的输入数据的类型是什么。</strong></p>
<p><br></p>
<p>假如后续工作中需要用到空间数据，例如进行热点分析，评估下犯罪高发区，那么就需要查询SHAPE空间字段。 如果忽略了空间字段，普通的非空间表是没办法将记录集传递给后续空间处理的工具的。</p>
<p><img src="hhttp://kikitamap.com/images/blogImg/QueryLayerResult_Model.png" alt=""></p>
<p>Make Feature Layer 中的 SQL语句：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  c.SHAPE,</span><br><span class="line">        c.ADDRESS,</span><br><span class="line">        <span class="keyword">count</span>(c.ADDRESS) <span class="keyword">as</span> CallNum, </span><br><span class="line">        <span class="keyword">min</span>(s.SCORE) <span class="keyword">as</span> MinScore, </span><br><span class="line">        c.POINT_X, </span><br><span class="line">        c.POINT_Y</span><br><span class="line"><span class="keyword">from</span> SDE.kikita_Calls c </span><br><span class="line"></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> SDE.kikita_ScoreTable s </span><br><span class="line"><span class="keyword">on</span> c.ADDRESS=s.ADDRESS</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> c.AV_SIDE <span class="keyword">in</span> (<span class="string">'R'</span>,<span class="string">'L'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.SHAPE,c.ADDRESS,c.POINT_X, c.POINT_Y</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> CallNum <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>附一张结果图：</p>
<p><img src="http://kikitamap.com/images/blogImg/QueryLayerResult_Reault.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> ArcGIS Enterprise </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Troubleshooting： 有防火墙的情况下你需要如何部署许可服务器？]]></title>
      <url>/2016/06/17/LMthroughFireWall/</url>
      <content type="html"><![CDATA[<p>防火墙是一种有效的安全策略，如果部署ArcGIS许可的环境中不允许关闭防火墙，你可能会遇到这个错误：ArcGIS administrator 连不到许可服务器，提示错误， “ <em>“xxx.xxx.xxx.xxx”没有有效的许可管理器。请输入一个有效的许可管理器服务器。</em> ”</p>
<p>那么，如何解决这个问题？ 如下。</p>
<p><br></p>
<h1 id="1-找到-Service-txt-文件"><a href="#1-找到-Service-txt-文件" class="headerlink" title="1  找到 Service.txt 文件"></a>1  找到 Service.txt 文件</h1><p>在许可服务器所在的机器上，默认位于：C:\Program Files (x86)\ArcGIS\License10.x\bin 目录下。 打开之后，类似下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/LMthroughFireWall_ServiceTXT1.png" alt=""></p>
<p>通过修改此配置文件可以控制ArcGIS许可服务器后台进程使用哪个端口。</p>
<p><br></p>
<h1 id="1Plus-知其所以然"><a href="#1Plus-知其所以然" class="headerlink" title="1Plus   知其所以然"></a>1Plus   知其所以然</h1><p>如果你对问题的原因不感兴趣，那么直接跳至2。  </p>
<p>ArcGIS License Server Administrator（旧称ArcGIS License Manager）的后台进程有两个：<strong>lmgrd.exe</strong> 和 <strong>ArcGIS.exe</strong>，用于响应客户端获取许可的请求。</p>
<blockquote>
<p>在 Service.txt 文档中：</p>
<p>第一行配置的是 <strong>lmgrd.exe</strong> 这个进程的端口，默认是 27000，自 10.3 版本之后，有效范围仅可以是 27000-27009 这个几个端口号之一；</p>
<p>第二行是用于 <strong>ArcGIS.exe</strong> 进程的端口配置，<strong>默然情况下，这个端口是动态的，系统可以使用任何监听到的空闲端口</strong>。 </p>
</blockquote>
<p>我们用个小工具来检测一下，<strong>Process Explorer</strong>，官网下载点<strong><a href="https://technet.microsoft.com/en-us/sysinternals/processexplorer.aspx" title="Process Explorer" target="_blank" rel="noopener">这里</a></strong>，即可一目了然。在安装有 ArcGIS License Manger 的测试机上的执行小工具，抓取有用的信息：</p>
<p><img src="http://kikitamap.com/images/blogImg/LMthroughFireWall_lmgrd.png" alt=""></p>
<p>从结果中可以得到，ArcGIS.exe 采用了 49479 这个端口与其他客户端通信。 在下次 ArcGIS License Service 启动时，这个端口会动态选择另一个。 这也就是问题的 key point，为什么用户即使在防火墙中开放了27000，甚至 27000-27009段的端口，然而许可服务器还是连不上。</p>
<p><br></p>
<h1 id="2-锁定后台进程端口号"><a href="#2-锁定后台进程端口号" class="headerlink" title="2  锁定后台进程端口号"></a>2  锁定后台进程端口号</h1><p>前文提到 ArcGIS.exe 端口是动态的，为了方便防火墙的设置，锁定端口是最简单有效的方法。</p>
<p>在 Service.txt 文件中，第二行结尾增加 PORT=&lt;端口号&gt; 的参数。 例如我选择 50000 ，如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/LMthroughFireWall_ServiceTXT2.png" alt=""></p>
<p>修改完成，保存txt，重启 ArcGIS License Service ，然后过一会再去抓信息，发现 ArcGIS.exe 的端口号已经被锁定为 50000 ，变成静态。</p>
<p><img src="http://kikitamap.com/images/blogImg/LMthroughFireWall_AGSDaemon.png" alt=""></p>
<p><br></p>
<h1 id="3-在防火墙中创建规则放行端口"><a href="#3-在防火墙中创建规则放行端口" class="headerlink" title="3  在防火墙中创建规则放行端口"></a>3  在防火墙中创建规则放行端口</h1><p>现在需要做的仅是，在防火墙上建立白名单，设置规则允许 27000 和 50000 端口的 TCP/IP 协议通信即可。 </p>
<p><br></p>
<p>这个配置方法在 <a href="http://desktop.arcgis.com/en/license-manager/latest/configure-the-arcgis-license-manager-to-work-through-a-firewall.htm" target="_blank" rel="noopener"><strong>官方文档</strong></a> 中有很清楚的说明，如果感兴趣也一起看看。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> License </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[海]]></title>
      <url>/2016/05/24/theBlueSea/</url>
      <content type="html"><![CDATA[<blockquote>
<p>摄于 2014-5-4, Paros Island,  Greece</p>
</blockquote>
<p>瞄了一眼《太阳的后裔》，看到里面的沉船湾，又想起了那片海，真的美！</p>
<p><img src="http://kikitamap.com/images/blogImg/XJL_IMG_5103.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/XJL_IMG_5095.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[浅谈使用ArcPy执行大数据量处理任务]]></title>
      <url>/2016/04/28/ParallelPython/</url>
      <content type="html"><![CDATA[<p>Python功能强大而易于学习。对于ArcGIS for Desktop用户来讲，Python是提高工作效率的不二选择。 </p>
<p><a href="http://desktop.arcgis.com/zh-cn/arcmap/latest/analyze/arcpy/what-is-arcpy-.htm" target="_blank" rel="noopener">Arcpy</a>是esri提供的用于高效数据处理分析、制图等的Python站点包。 利用ArcPy，我们可以在ArcMap的Python窗口交互执行脚本，还可以创建自定义脚本工具或脚本工具箱，还可以在ArcGIS之外运行独立脚本，享受更纯正的python体验。</p>
<p>这一篇说说如何利用Python批量执行数据处理任务，这个问题也是前段时间遇到的用户的实际问题，比较有价值。</p>
<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>还是从实例开始……</p>
<p><img src="http://kikitamap.com/images/blogImg/ParallelPython.png" alt=""></p>
<p>有一个简单但耗体力的裁剪任务，希望通过大量面分割（逐一裁剪）大量的数据，类似Split工具要完成的任务，并且要按照一定的规则命名将分割结果输出到指定的位置，例如要求有指定前缀。</p>
<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>例如，一种思路是逐一遍历面要素，然后去裁剪目标数据再输出，这时你可能会遇到下面的小问题：</p>
<p><strong>我如何通过ArcPy获取要素的几何？</strong></p>
<p>在ArcPy中提供了一个数据访问模块/Data Access (arcpy.da)，我们可以通过游标（Cursor）来查询要素的几何或属性。在这个需求中是逐一遍历面要素的几何，我们选择 SearchCursor，通过 <strong><code>SHAPE@</code></strong> 可以访问要素的几何。 </p>
<p>语法： <code>SearchCursor(in_table, field_names, {where_clause}, {spatial_reference}, {explode_to_points}, {sql_clause})</code></p>
<p>了解详细的帮助信息点<a href="http://desktop.arcgis.com/zh-cn/arcmap/latest/analyze/arcpy-data-access/searchcursor-class.htm" target="_blank" rel="noopener">这里</a>。</p>
<p>那么可以把函数主体定义成这样，即可实现需求：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MyBatchClip</span><span class="params">(Parameter)</span>:</span></span><br><span class="line">    <span class="comment"># 参数</span></span><br><span class="line">    inputFC = Parameter[<span class="number">0</span>]</span><br><span class="line">    ClipArea = Parameter[<span class="number">1</span>]</span><br><span class="line">    OutputWS = Parameter[<span class="number">2</span>]</span><br><span class="line">    Prefix = Parameter[<span class="number">3</span>]</span><br><span class="line">    <span class="comment"># 字段列表，SHAPE@ 访问要素几何对象</span></span><br><span class="line">    Fields = [<span class="string">'FID'</span>,<span class="string">'SHAPE@'</span>]</span><br><span class="line">    <span class="comment"># 遍历面要素逐一裁剪目标数据并输出自定义前缀的结果。</span></span><br><span class="line">    <span class="keyword">with</span> arcpy.da.SearchCursor(ClipArea,Fields) <span class="keyword">as</span> cursor:</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> cursor:</span><br><span class="line">            outputFC = os.path.join(OutputWS, Prefix+str(row[<span class="number">0</span>])+<span class="string">'.shp'</span>)</span><br><span class="line">            arcpy.Clip_analysis(inputFC, row[<span class="number">1</span>], outputFC)</span><br></pre></td></tr></table></figure>
<h1 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h1><p>如果这个批量任务是大量的，<strong>如何更高效地开动起来？</strong></p>
<p>这里按照esri以前的一篇 <a href="https://blogs.esri.com/esri/arcgis/2012/09/26/distributed-processing-with-arcgis-part-1/" target="_blank" rel="noopener">Blog</a> 提到的方法分享给大家，使用Multiprocessing模块并行处理。 <a href="https://docs.python.org/2/library/multiprocessing.html#" target="_blank" rel="noopener">Multiprocessing</a> 模块是Python的一个标准库，通过这个库，我们可以利用多核CPU，来实现多进程处理大数据量的任务。 </p>
<p>可以通过 <code>multiprocessing.Pool</code> 来使用进程池，Pool类可以管理固定数目的进程，默认是开启和机器CPU数目相同的进程。</p>
<blockquote>
<p>语法：<br><code>multiprocessing.Pool([processes[, initializer[, initargs[, maxtasksperchild]]]])</code><br>processes表示pool中进程的数目，默认地为当前CPU的核数。<br>initializer表示新进程的初始化函数。<br>initargs表示新进程的初始化函数的参数。<br>maxtasksperchild表示每个进程执行task的最大数目</p>
</blockquote>
<p>把脚本修改下，加上多进程处理的部分：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'kikita'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> arcpy</span><br><span class="line"><span class="keyword">import</span> timeit</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> multiprocessing</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">arcpy.env.workspace =  <span class="string">r'D:\LearnAboutPython\MyPythonProject\UsingCurser\DemoDataS.gdb'</span></span><br><span class="line">arcpy.env.overwriteOutput = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量裁剪函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MyBatchClip</span><span class="params">(Parameter)</span>:</span></span><br><span class="line">    <span class="comment"># 参数</span></span><br><span class="line">    inputFC = Parameter[<span class="number">0</span>]</span><br><span class="line">    ClipArea = Parameter[<span class="number">1</span>]</span><br><span class="line">    OutputWS = Parameter[<span class="number">2</span>]</span><br><span class="line">    Prefix = Parameter[<span class="number">3</span>]</span><br><span class="line">    <span class="comment"># 字段列表，其中 SHAPE@用于访问数据几何</span></span><br><span class="line">    Fields = [<span class="string">'OBJECTID'</span>,<span class="string">'SHAPE@'</span>]</span><br><span class="line">    <span class="keyword">with</span> arcpy.da.SearchCursor(ClipArea,Fields) <span class="keyword">as</span> cursor:</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> cursor:</span><br><span class="line">            outputFC = os.path.join(OutputWS, Prefix+str(row[<span class="number">0</span>])+<span class="string">'.shp'</span>)</span><br><span class="line">            arcpy.Clip_analysis(inputFC, row[<span class="number">1</span>], outputFC)</span><br><span class="line">            <span class="keyword">print</span> Prefix+str(row[<span class="number">0</span>])+<span class="string">'.shp'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 参数</span></span><br><span class="line">    OutputWS = <span class="string">r'D:\LearnAboutPython\MyPythonProject\UsingCurser\OutputWS'</span></span><br><span class="line">    <span class="comment"># SDE库输出</span></span><br><span class="line">    <span class="comment">#OutputWS = r'C:\Connection131.sde'</span></span><br><span class="line">    Parameter1 = [<span class="string">'CountyPoints'</span>,<span class="string">'Area_A'</span>,OutputWS, <span class="string">'AAA_'</span>]</span><br><span class="line">    Parameter2 = [<span class="string">'hyd_line'</span>,<span class="string">'Area_B'</span>,OutputWS, <span class="string">'BBB_'</span>]</span><br><span class="line">    Parameter3 = [<span class="string">'River_line.shp'</span>,<span class="string">'Area_C.shp'</span>,OutputWS,<span class="string">'CCC_'</span>]</span><br><span class="line">    Parameters = [Parameter1,Parameter2,Parameter3]</span><br><span class="line">    <span class="comment"># 当前CPU核数</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'CPU Count:'</span> + str(multiprocessing.cpu_count())</span><br><span class="line">    <span class="comment"># 进程池</span></span><br><span class="line">    MyGPpool = multiprocessing.Pool()</span><br><span class="line">    <span class="comment"># 多进程并行处理</span></span><br><span class="line">    StartTime = time.time()</span><br><span class="line">    results = MyGPpool.map(MyBatchClip,Parameters)</span><br><span class="line">    EndTime = time.time()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Elapsed:  '</span> + str(EndTime - StartTime) + <span class="string">'  Seconds...'</span></span><br></pre></td></tr></table></figure>
<p><strong>结果</strong></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">CPU Count:<span class="number">8</span></span><br><span class="line">AAA_0.shp</span><br><span class="line">BBB_0.shp</span><br><span class="line">CCC_0.shp</span><br><span class="line">BBB_1.shp</span><br><span class="line">AAA_1.shp</span><br><span class="line">CCC_1.shp</span><br><span class="line">BBB_2.shp</span><br><span class="line">AAA_2.shp</span><br><span class="line">CCC_2.shp</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">……</span><br><span class="line">BBB_28.shp</span><br><span class="line">AAA_27.shp</span><br><span class="line">BBB_29.shp</span><br><span class="line">CCC_28.shp</span><br><span class="line">CCC_29.shp</span><br><span class="line">AAA_28.shp</span><br><span class="line">BBB_30.shp</span><br><span class="line">CCC_30.shp</span><br><span class="line">AAA_29.shp</span><br><span class="line">AAA_30.shp</span><br><span class="line">Elapsed:  <span class="number">28.628000021</span>  Seconds...</span><br></pre></td></tr></table></figure>
<h1 id="一点有用的提示："><a href="#一点有用的提示：" class="headerlink" title="一点有用的提示："></a>一点有用的提示：</h1><p>1.在使用Multiprocessing时，注意数据锁定（Schema Lock）的问题，例如这个例子中，当输出工作空间选择为FileGDB时出现异常。 使用文件夹输出 Shapefile，或者以SDE数据库作为输出工作空间，都是可以的。</p>
<p>2.我在代码中也加入了计时，用于比较并行与否的耗时情况。 但是有时确实会发现，较简单的处理任务时，多进程并行并不比单进程快，因为导入模块和启动进程都需要花时间。 </p>
<p><strong>参考：</strong><br><a href="https://blogs.esri.com/esri/arcgis/2012/09/26/distributed-processing-with-arcgis-part-1/" target="_blank" rel="noopener">https://blogs.esri.com/esri/arcgis/2012/09/26/distributed-processing-with-arcgis-part-1/</a><br><a href="https://docs.python.org/2/library/multiprocessing.html#using-a-pool-of-workers" target="_blank" rel="noopener">https://docs.python.org/2/library/multiprocessing.html#using-a-pool-of-workers</a><br><a href="https://www.binpress.com/tutorial/simple-python-parallelism/121" target="_blank" rel="noopener">https://www.binpress.com/tutorial/simple-python-parallelism/121</a><br><a href="http://cloga.info/python/2014/01/12/PythonMultiprocessingintro/" target="_blank" rel="noopener">http://cloga.info/python/2014/01/12/PythonMultiprocessingintro/</a><br><a href="http://kmdouglass.github.io/posts/learning-pythons-multiprocessing-module.html" target="_blank" rel="noopener">http://kmdouglass.github.io/posts/learning-pythons-multiprocessing-module.html</a><br><a href="http://broadcast.oreilly.com/2009/04/pymotw-multiprocessing-part-2.html" target="_blank" rel="noopener">http://broadcast.oreilly.com/2009/04/pymotw-multiprocessing-part-2.html</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[留着]]></title>
      <url>/2016/04/14/ForMyself/</url>
      <content type="html"><![CDATA[<p>看到几个句子，认同，留着</p>
<blockquote>
<p>Love yourself, because you are unique and wonderful in your own way.</p>
<p>You don’t have to win every argument. Agree to disagree.</p>
<p>What other people think of you is none of your business.</p>
<p>Life is too short to waste time hating anyone. So, get rid of those ill feelings.</p>
<p>No one is in charge of your happiness except you.</p>
<p>Forget issues of the past. Don’t remind your partner with her/his mistakes of the past.</p>
<p>Don’t compare your life to others. You have no idea what their journey is all about.</p>
<p>Don’t have negative thoughts or things you cannot control. Instead invest your energy in the positive present moment.</p>
</blockquote>
<p>道理简单深刻，能够持久地实践才是真的懂了</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[红沙滩]]></title>
      <url>/2016/04/08/RedBeach/</url>
      <content type="html"><![CDATA[<blockquote>
<p>摄于 2014-5-8，Akrotori, Santorini, Greece</p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/XJL_IMG_5106.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[宁静的白与蓝]]></title>
      <url>/2016/04/01/Peaceful/</url>
      <content type="html"><![CDATA[<blockquote>
<p>摄于 2014-5-8, Oia, Santorini, Greece</p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/XJL_IMG_3500.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CGA：自动判断模型间关系的3D建模方法]]></title>
      <url>/2016/04/01/IfModelsTuches/</url>
      <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>最近遇到一个有趣的问题，<strong>如何在CityEgnine中判断有接触或相交关系的模型，从而自动进行建模？</strong></p>
<p>这个问题有点抽象，我们来看个实例，了解下问题的背景:</p>
<p>以往绝大多数情况下，我们拿到的2D建筑物底面（FootPrint）都是一个建筑对应一个面，也就是这样的：</p>
<p><img src="http://kikitamap.com/images/blogImg/IfModelsTuches_Simple.png" alt=""></p>
<p>实际生活中的的建筑物可能是更复杂的，例如商场、大型会议中心、复杂居民楼等参差不齐的多栋联合建筑，我们可以采集多个底面来表示建筑物，例如这样：</p>
<p><img src="http://kikitamap.com/images/blogImg/IfModelsTuches_Multi.png" alt=""></p>
<p>使用多个底面表示一栋复杂建筑物的做法可以很大程度上简化建模的工作，因此无可厚非。 但是问题来了，因为是彼此独立的Footprint，建模时若不加判断，就会出现如下图所示的情况，好像“空中地下室”。这样的房子既不美观也不实际。</p>
<p><img src="http://kikitamap.com/images/blogImg/IfModelsTuches_Overlap.png" alt=""></p>
<p><br></p>
<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>CityEngine的真正魅力在于“动态”建模，这是CE的创作者一直想要传播的理念。 CityEgnine提供很多内置函数解决这些问题，其中有一组为：<strong>Occlusion Functions</strong>，包含：<code>inside</code>，<code>overlaps</code>，<code>touches</code> 三个函数。 我们可以利用 <code>touches()</code> 来实现判断。</p>
<p>先写段简单的来了解下函数用法：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Init --&gt; </span><br><span class="line">     extrude(<span class="number">40</span>) Mass</span><br><span class="line">Mass --&gt;</span><br><span class="line">     comp(f)&#123;top:NIL| side:Side&#125; </span><br><span class="line">Side --&gt; </span><br><span class="line">     <span class="function"><span class="keyword">case</span> <span class="title">touches</span><span class="params">()</span>: <span class="title">color</span><span class="params">(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>)</span> ShareSide</span></span><br><span class="line"><span class="function">     <span class="keyword">else</span>: Walls</span></span><br></pre></td></tr></table></figure>
<p><img src="http://kikitamap.com/images/blogImg/IfModelsTuches_ShareSide.png" alt=""></p>
<p>针对前面“空中地下室”的问题，可以在楼层切割到窗户和墙体的时候做个判断，楼层不touch其他楼层时，再进行分割。</p>
<p>可以实现这个样子：</p>
<p><img src="http://kikitamap.com/images/blogImg/IfModelsTuches_Solve.png" alt=""></p>
<p>全部 CGA 代码共享给大家：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * File:    TestTouches.cga</span></span><br><span class="line"><span class="comment"> * Created: 1 Apr 2016 13:00:24 GMT</span></span><br><span class="line"><span class="comment"> * Author:  kikita</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">version <span class="string">"2015.2"</span></span><br><span class="line"></span><br><span class="line"># Define Attributes</span><br><span class="line">attr AVG_HEIGHT = <span class="number">0</span></span><br><span class="line">attr WindowsWidth = <span class="number">8</span></span><br><span class="line">attr WallWidth = <span class="number">2.5</span></span><br><span class="line"></span><br><span class="line"># Building Schmetic</span><br><span class="line">Init --&gt; </span><br><span class="line">     extrude(AVG_HEIGHT) Mass</span><br><span class="line">Mass --&gt;</span><br><span class="line">     comp(f)&#123;top:Top|side:Walls&#125;</span><br><span class="line">Walls --&gt;</span><br><span class="line">     split(y) &#123; <span class="number">15</span> : GroundFloor | &#123;~<span class="number">10</span> : UpperFloors &#125; * &#125;</span><br><span class="line"></span><br><span class="line"># Ground Floor</span><br><span class="line">GroundFloor --&gt; </span><br><span class="line">   setupProjection(<span class="number">0</span>, scope.xy, <span class="string">'1, '</span><span class="number">1</span>)</span><br><span class="line">   projectUV(<span class="number">0</span>) </span><br><span class="line">   texture(<span class="string">"GroundFloor.jpg"</span>) </span><br><span class="line"></span><br><span class="line"># All Upper Floors</span><br><span class="line">UpperFloors --&gt; </span><br><span class="line"></span><br><span class="line"># Use touches() function</span><br><span class="line">	<span class="function"><span class="keyword">case</span> <span class="title">touches</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function">         <span class="title">setupProjection</span><span class="params">(<span class="number">0</span>, scope.xy, <span class="number">10</span>, <span class="number">10</span>)</span></span></span><br><span class="line"><span class="function">         <span class="title">projectUV</span><span class="params">(<span class="number">0</span>)</span> </span></span><br><span class="line"><span class="function">         <span class="title">texture</span><span class="params">(<span class="string">"Wall/wall_grey.jpg"</span>)</span></span></span><br><span class="line"><span class="function">	<span class="keyword">else</span>:</span></span><br><span class="line"><span class="function">	     <span class="title">split</span><span class="params">(x)</span></span>&#123; ~WallWidth : AllWalls |</span><br><span class="line">                 &#123; ~WindowsWidth : WindowTiles |</span><br><span class="line">                   ~WallWidth : AllWalls &#125; * &#125;                 </span><br><span class="line">	     WindowTiles --&gt;</span><br><span class="line">		    split(y)&#123; ~WallWidth/<span class="number">2</span>: AllWalls |</span><br><span class="line">			          ~WindowsWidth : Windows|</span><br><span class="line">			          ~WallWidth/<span class="number">2</span> :AllWalls &#125;</span><br><span class="line"></span><br><span class="line"># Wall Texture      </span><br><span class="line">AllWalls --&gt;    </span><br><span class="line">      setupProjection(<span class="number">0</span>, scope.xy, <span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">      projectUV(<span class="number">0</span>) </span><br><span class="line">      texture(<span class="string">"Wall/wall_grey.jpg"</span>)</span><br><span class="line"></span><br><span class="line"># Windows  </span><br><span class="line">Windows --&gt; </span><br><span class="line">      color(<span class="string">"DAFAF3"</span>)</span><br><span class="line">      i(<span class="string">"Windows/sash_window.obj"</span>) </span><br><span class="line">      s(<span class="string">'1,'</span><span class="number">1</span>,<span class="string">'2)          </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Roofs</span></span><br><span class="line"><span class="string">Top --&gt; </span></span><br><span class="line"><span class="string">      offset(-0.5)</span></span><br><span class="line"><span class="string">      comp(f)&#123; border : RoofEdge | inside : RoofFlat &#125;     </span></span><br><span class="line"><span class="string">RoofFlat --&gt;</span></span><br><span class="line"><span class="string">      setupProjection(0, scope.xy, '</span><span class="number">1</span>, <span class="string">'1)</span></span><br><span class="line"><span class="string">      projectUV(0) </span></span><br><span class="line"><span class="string">      texture("flatroof6.bw.jpg")     </span></span><br><span class="line"><span class="string">RoofEdge --&gt; </span></span><br><span class="line"><span class="string">      extrude(1)</span></span><br></pre></td></tr></table></figure>
<p>明天就放假了</p>
<p>节日愉快</p>
<p>我说的是愚人节</p>
<p>哈</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
            <tag> CGA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[圈]]></title>
      <url>/2016/03/30/TheCircle/</url>
      <content type="html"><![CDATA[<blockquote>
<p>摄于 2015-4-29 ，牛岛，济州岛</p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/XJL_IMG_2051.jpg" alt=""></p>
<p>这是一个很有意思的场景，在当时有段极平常的谈话</p>
<p><em>M：马和草地上渐变色的圆圈真好看</em><br><em>J：马被拴着，当然把草地吃了个圈</em></p>
<p>人会不会也这样？ 埋头努力，无意识地啃了一个人人称赞的漂亮的圈，然而ta的愿望是想摆脱这个圈。</p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo My Blog]]></title>
      <url>/2016/03/27/WhatHasBeenDoneUntill327/</url>
      <content type="html"><![CDATA[<p><strong>截止到今天，都做过什么？</strong>   备个忘……</p>
<p>1.安装Hexo [<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener"><strong>文档</strong></a>]</p>
<p>2.选主题 Hueman [<a href="https://github.com/ppoffice/hexo-theme-hueman" target="_blank" rel="noopener"><strong>hexo-theme-hueman</strong></a>]</p>
<p>3.搬运填内容 [<a href="http://blog.csdn.net/kikitamoon" target="_blank" rel="noopener"><strong>CSDN</strong></a>]</p>
<p>4.各种倒饬主题</p>
<pre><code>- Banner图片、favicon
- Widget顺序
- weiboxiu,友链
- 多说评论，国内Share
- 自定义网页字体
- 图床外链
- Goolge Analyst 
</code></pre><p>5.在Mac上部署Hexo，多个终端一起更新博客</p>
<hr>
<p><strong>欠倒饬的地方：</strong></p>
<ol>
<li><p>归档目录折叠</p>
</li>
<li><p>博客加目录导航</p>
</li>
</ol>
<p>下一期再说……</p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[渺小]]></title>
      <url>/2016/03/21/insignificant/</url>
      <content type="html"><![CDATA[<blockquote>
<p>摄于  2014-5-7, volcano island, Santorini, Greece</p>
</blockquote>
<p>我在山谷这头，对面是驻足的游客，忽然觉得此刻很美</p>
<p>和自然相处，会发现人真的很渺小，很多郁结不开的琐事就变得不知何物</p>
<p>要常常提醒不要忘记那刻的自己</p>
<p><br></p>
<p><img src="http://kikitamap.com/images/blogImg/XJL_DSCN0827.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[分割线]]></title>
      <url>/2016/03/21/SplitLine/</url>
      <content type="html"><![CDATA[<p>前阵子走走停停、陆陆续续地搬内容、改主题</p>
<p>枯燥的工作终于结束了</p>
<p><br></p>
<p>这篇是华丽的分割线</p>
<p>后面会有些新的文字</p>
<p><br></p>
<p><strong>To Be Continued ……</strong></p>
<p><br></p>
<p><img src="http://kikitamap.com/images/blogImg/SSN_SplitLine.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello Hexo！]]></title>
      <url>/2016/03/01/HelloHexo/</url>
      <content type="html"><![CDATA[<p>我的个人博客 kikita &amp; Maps 上线了，记录点见闻感触，累积点技术知识，只为让自己的生活鲜活积极。</p>
<p><img src="http://kikitamap.com/images/blogImg/HelloWorld.jpg" alt="开始的样子"></p>
<p>今天中午换了个新主题 hueman，慢慢摸索学习 Hexo，还是很有趣的。</p>
<p>还是那句话，<em>I walk slowly, but I never walk backward.</em> </p>
]]></content>
      
        <categories>
            
            <category> 碎碎念 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[你所不知的有趣投影方法]]></title>
      <url>/2016/02/04/FunnyProjections/</url>
      <content type="html"><![CDATA[<p><a href="http://baike.baidu.com/view/311590.htm" target="_blank" rel="noopener">高斯克吕格/Gauss Kruger</a>、<a href="http://baike.baidu.com/view/1351534.htm" target="_blank" rel="noopener">兰伯特/Lambert</a>、<a href="http://baike.baidu.com/view/301981.htm" target="_blank" rel="noopener">墨卡托/Mercator</a>……这些是业内人士耳熟能详的 <a href="http://desktop.arcgis.com/en/arcmap/latest/map/projections/what-are-map-projections.htm" target="_blank" rel="noopener">投影方法</a>，它们各有适用场景以确保投影后某类或某几类变形最小，其最终要义就是最大程度地精确表示位置。然而，这一篇中不是对这些投影方法进行阐述，而是传递一些新奇特的投影玩法。</p>
<p>ArcGIS中提供了众多的坐标系统定义信息，有些 <a href="http://desktop.arcgis.com/en/arcmap/latest/map/projections/list-of-supported-map-projections.htm" target="_blank" rel="noopener">投影坐标系</a>一直静静存在，只是没有被关注，今天我们一起翻几个牌子。</p>
<p><br></p>
<p>准备示例数据，世界大洲及格网数据，当前是地理坐标系 WGS1984，首次拖拽到 ArcMap看起来是我们最熟悉的这个样子：</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_default.jpg" alt=""></p>
<p>下面我们变换不同的投影方法，看看世界发生了什么变化。</p>
<p><br><br><br></p>
<h2 id="埃托夫投影-Aitoff-projection"><a href="#埃托夫投影-Aitoff-projection" class="headerlink" title="埃托夫投影/Aitoff projection"></a>埃托夫投影/Aitoff projection</h2><p>将世界投影到<strong>长短轴为2：1的椭圆</strong>上，有关这个投影方法的说明，戳 <a href="http://desktop.arcgis.com/zh-cn/desktop/latest/guide-books/map-projections/aitoff.htm" target="_blank" rel="noopener"><strong>这里</strong></a>。</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_Aitoff.jpg" alt=""></p>
<p><br></p>
<h2 id="等距方位投影-Azimuthal-equidistant-projection"><a href="#等距方位投影-Azimuthal-equidistant-projection" class="headerlink" title="等距方位投影/Azimuthal equidistant projection"></a>等距方位投影/Azimuthal equidistant projection</h2><p>这是一种<strong>平面投影</strong>，由纬度和经度确定的一个点作为平面与椭球的切点，详情戳 <a href="http://desktop.arcgis.com/zh-cn/desktop/latest/guide-books/map-projections/azimuthal-equidistant.htm" target="_blank" rel="noopener">这里</a>。</p>
<p><strong>当切点是本初子午线和赤道交点时</strong>，我们看到的世界是这样，大陆好像散开的拼图：</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_AzimuthalEquidistans1.jpg" alt=""></p>
<p><strong>当以北极为切点时</strong>，我们看到的世界是这样：</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_AzimuthalEquidistans2.jpg" alt=""></p>
<p>为什么有种莫名的熟悉感？联合国的Logo是这样吧，灵感来自这里：</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_AzimuthalEquidistans_UN.jpg" alt=""></p>
<p><br></p>
<h2 id="柏哥斯星状投影-Berghaus-Star-Projection"><a href="#柏哥斯星状投影-Berghaus-Star-Projection" class="headerlink" title="柏哥斯星状投影/Berghaus Star Projection"></a>柏哥斯星状投影/Berghaus Star Projection</h2><p>这种投影方法很有趣，让人一见倾心。此方法通常中心在北极，是对中央半球使用等距方位投影，而地球的另一半被分割为五个三角形，从而形成了一个围绕圆心的星形。详情戳 <a href="http://desktop.arcgis.com/zh-cn/desktop/latest/guide-books/map-projections/berghaus-star.htm" target="_blank" rel="noopener">这里</a>。</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_Star.jpg" alt=""></p>
<p>这种投影方法被 <a href="http://www.aag.org/" target="_blank" rel="noopener">美国地理学家协会(AGG)</a> 采用作为 Logo。</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_Star_AGG.jpg" alt=""></p>
<p><br></p>
<h2 id="彭纳投影-Bonne-Projection"><a href="#彭纳投影-Bonne-Projection" class="headerlink" title="彭纳投影/Bonne Projection"></a>彭纳投影/Bonne Projection</h2><p>这个投影方法，博主同样喜欢。伪圆锥投影，所有的纬线为同心圆弧，并且投影变换后是个大大的心形。</p>
<p>喜欢研究算法的同学，戳<a href="https://en.wikipedia.org/wiki/Bonne_projection" target="_blank" rel="noopener">这里</a>看公式。</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_Bonne.jpg" alt=""></p>
<p><br></p>
<h2 id="温克尔三重投影-Winkel-tripel-projection"><a href="#温克尔三重投影-Winkel-tripel-projection" class="headerlink" title="温克尔三重投影/Winkel tripel projection"></a>温克尔三重投影/Winkel tripel projection</h2><p>这可能是我们最常见的世界地图挂图的一种投影方法，详情戳<a href="http://desktop.arcgis.com/zh-cn/desktop/latest/guide-books/map-projections/winkel-tripel.htm" target="_blank" rel="noopener">这里</a>。</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_Winkel.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_Winkel_World.jpg" alt=""></p>
<p><br></p>
<h2 id="古蒂等面积投影-Goode-homolosine-projection"><a href="#古蒂等面积投影-Goode-homolosine-projection" class="headerlink" title="古蒂等面积投影/Goode homolosine projection"></a>古蒂等面积投影/Goode homolosine projection</h2><p>这种投影方法最小化整个地球的变形，是一种不连续的伪圆柱等积投影，详情戳<a href="http://desktop.arcgis.com/zh-cn/desktop/latest/guide-books/map-projections/goodes-homolosine.htm" target="_blank" rel="noopener">这里</a>，还有<a href="https://en.wikipedia.org/wiki/Goode_homolosine_projection" target="_blank" rel="noopener">这里</a>。</p>
<p>这种投影方法有两个版本，大陆和海洋。</p>
<p>Land:<br><img src="http://kikitamap.com/images/blogImg/FunnyProjections_GoodeLand.jpg" alt=""></p>
<p>Ocean:<br><img src="http://kikitamap.com/images/blogImg/FunnyProjections_GoodeOcean.jpg" alt=""></p>
<p><br></p>
<h2 id="“上帝视角”-The-World-From-Space"><a href="#“上帝视角”-The-World-From-Space" class="headerlink" title="“上帝视角”/The World From Space"></a>“上帝视角”/The World From Space</h2><p>最后说一种 ArcGIS 自带的命名为 “The_World_From_Space” 的平面坐标系（WKID: 102038），使用了正射投影（Orthographic Projection）方法。投影变换后，像是在太空遥看这个蓝色星球。</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_fromSpace.jpg" alt=""></p>
<p>这个坐标系的默认参数是 Longitude_Of_Center: -72.5333333334；Latitude_Of_Center: 42.5333333333，因此北美大陆位居中央。</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_fromSpace_Para.jpg" alt=""></p>
<p>修改下参数，调整下切点位置，把我们心中美丽的中国转过来~</p>
<p><img src="http://kikitamap.com/images/blogImg/FunnyProjections_fromSpace_China.jpg" alt=""></p>
<p><br></p>
<p>投影变换是不是也挺有意思的？ 让我们真正发现了“数学之美”。春节临近，祝大家新春愉快喽！</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
            <tag> Mapping </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为影像数据去除无效值]]></title>
      <url>/2016/02/02/RasterNodata/</url>
      <content type="html"><![CDATA[<p>在使用栅格数据时，黑边和白边问题比较困扰我们，╮(╯-╰)╭ ，丑丑地如下所示：</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Raw.png" alt=""></p>
<p>那如何处理这些问题呢？方法不是唯一的，我把 ArcMap 中最常用的几种方式列举一下，帮你给数据“化妆”，或者更确切的说是“整容”：</p>
<p><br></p>
<p><br></p>
<h2 id="Option-1-栅格计算器"><a href="#Option-1-栅格计算器" class="headerlink" title="Option 1  栅格计算器"></a>Option 1  栅格计算器</h2><p>在去黑边之前最先需要了解的是黑边的像元值是什么？ 可以使用 Identify 工具查查看。  例如这份数据是 0。</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Identify.png" alt=""></p>
<blockquote>
<p>这时，你也许会想到设置图层背景值的色彩可以吧？</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Symbol.png" alt=""></p>
<p>如果仅为了显示使用，是可以解决问题的，但传统意义上的去黑边，我们一般理解成栅格数据的处理，也就是从存储上修改特定值（本例中是 0）值为 Nodata。</p>
</blockquote>
<p>单波段数据处理起来常常相对容易些，最常用的工具就是 <strong>栅格计算器/Raster Calculator</strong> 了。Raster Calculator 可以通过输入的Python语法的表达式，对当前数据框内的栅格图层进运算。它是个非常实用的栅格数据处理工具，如果你想 Dive In ，点 <a href="http://desktop.arcgis.com/zh-cn/desktop/latest/tools/spatial-analyst-toolbox/how-raster-calculator-works.htm" target="_blank" rel="noopener"><strong>这里</strong></a>了解 Raster Calculator 的工作原理。</p>
<p>例如这个需求中仅需要一个简单表达式，使用到SetNull函数，如下所示：</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Calculator.png" alt=""></p>
<blockquote>
<p> 其中，表达式是 <strong><code>SetNull(&quot;RasterLayer&quot;  ==  0 , &quot;RasterLayer&quot; )</code></strong></p>
</blockquote>
<p>这样执行工具之后，所有的 0 值变成了 Nodata，彻底去了黑边。</p>
<p><br></p>
<p><br></p>
<h2 id="Option-2-影像分析窗口"><a href="#Option-2-影像分析窗口" class="headerlink" title="Option 2  影像分析窗口"></a>Option 2  影像分析窗口</h2><p>多波段数据同样会受到黑边的困扰，而且现实情况往往没有单波段数据那么理想，仅通过一个表达式就可以搞定。例如，我们常用的影像底图数据，通常有三个波段，通过包含RGB三个波段的一组值来表示像元值，例如 (0,255,129)。我一般会根据需要处理的数据量的多少给出不同的处理方法建议：</p>
<p>同样第一步需要确认黑边值是什么？本例中是 (0,0,0)</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_IdentifyMultiBands.png" alt=""></p>
<p><br></p>
<p>ArcMap的 Windows 菜单中有 Image Analysis 。在 Image Analysis 窗口中的 Processing 部分可以对当前数据框中的图层赋予函数或函数链，从而对栅格数据实时处理。</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Function1.png" alt=""></p>
<p>在弹出的窗口中，在 fx行右键插入函数，例如这个需求中会使用到 Mask Function。</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Function2.png" alt=""></p>
<p>设置 Mask Function，(0,0,0) 组合是无效值。为什么选择 All 而不是 Any？ 这个答案很显见，同时都为0的像元值才是无效值，否则不是，例如（1，255，0）是有效的。或者说各个波段的0值是and关系，而不是or。</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Function3.png" alt=""></p>
<p>这样带有函数的新栅格图层会自动加入 ArcMap 的 TOC，看起来万事大吉，然而这里需要说明下，这个图层需要Export到硬盘上的某个位置，它目前还是个临时数据，当layer被移除掉，这个结果就不复存在。</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_tempData.png" alt=""></p>
<p>所以，最后重要的一步，导出数据。</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_ExportData.png" alt=""></p>
<p><br></p>
<p>(￣ˇ￣) <strong>这种方法，还适用于具有多种无效值的情况</strong>。例如，除了(0,0,0) 还包含 (255,255,255) ：</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_MultiInvalidData.png" alt=""></p>
<p>我们需要做的仅是继续增加栅格函数。在 Function Template Editor 中函数们顺序相接，像个环环相接的链条，所以称为 ”函数链/ Function Chain“，咦，好像跑题了。请继续看如何设置无效值：</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_MultiInvalidData2.png" alt=""></p>
<p>这样就实现了去掉两组无效值。</p>
<p><br></p>
<p><br></p>
<h2 id="Option-3-镶嵌数据集"><a href="#Option-3-镶嵌数据集" class="headerlink" title="Option 3  镶嵌数据集"></a>Option 3  镶嵌数据集</h2><p>那么摆在你面前的数据不是一个，而是“很多”呢？凡事保证质量之后，重复工作多了之后就同时需要保证效率，那么这种方法适用于“很多”、“大量”……</p>
<p>ArcGIS 的镶嵌数据集是个理想与实用兼备的影像数据管理模型，我们用它来“处理”大量栅格数据也是个不错的选择。</p>
<p>在地理数据库中创建镶嵌数据集，并将数据添加到镶嵌数据集中，之后：</p>
<blockquote>
<p>在”之后“之前的预备动作，此文中不赘述，但是你可以看<a href="http://kikitamap.com/2014/10/14/MDCreateMD" target="_blank" rel="noopener"><strong>这篇</strong></a>了解这些内容。</p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Mosaic1.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Mosaic2.png" alt=""></p>
<p>在镶嵌数据集中可以使用工具 Define Mosaic Dataset Nodata 工具，对数据的无效值进行定义。</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Mosaic3.png" alt=""></p>
<p>从而批量去除了无效值。</p>
<p>镶嵌数据集本身也支持栅格函数，类似影像数据窗口中函数模板的设置，同样可以设置函数链来实现一些复杂的要求。</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterNodata_Mosaic4.png" alt=""></p>
<p>有关镶嵌数据集函数，也可以参考<a href="http://kikitamap.com/2014/12/04/FunctionChain/" target="_blank" rel="noopener">这篇</a>。</p>
<p><br></p>
<p>常见的操作一般就这几种，总结下，单波段优先考虑栅格计算器；多波段可以使用影像分析窗口；如果数据量较大，建议使用镶嵌数据集。</p>
<p>ArcGIS Desktop 虽然不是专业做影像数据处理的平台，但是拥有的这些功能能很大程度上解决影像处理的常见问题。写这一篇是因为不少用户遇到类似问题，集中总结下比较有意义，希望给大家一些思路，下次遇到此类的问题时，自己动手试试吧。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[实践 ArcGIS Web 3D]]></title>
      <url>/2016/01/17/ArcGISWeb3D/</url>
      <content type="html"><![CDATA[<p>ArcGIS 产品家族的 Web 3D 功能众多用户期待已久，从 ArcGIS 10.3.1 版本开始，Esri 放了个大招，千呼万唤始出来的 Web 3D 功能，终于不再犹抱琵琶半遮面了。 那到底如何将创建和发布3D场景呢？ 下面就把今天的测试过程记录下。</p>
<p><br></p>
<h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p><strong>硬件</strong></p>
<ul>
<li>处理器：Intel Core i7 4710MQ @ 2.50GHz</li>
<li>内存：16G</li>
<li>显卡：NVIDIA GeForce GT 730M</li>
</ul>
<p><strong>OS</strong></p>
<ul>
<li>Windows  10  Pro</li>
</ul>
<p><strong>软件</strong></p>
<ul>
<li>ArcGIS Pro 1.1.1    <strong>（必要）</strong></li>
<li>ArcGIS for Server 10.3.1   <strong>（必要）</strong><br>包括：<ul>
<li>Portal for ArcGIS </li>
<li>ArcGIS Web Adpter (IIS)</li>
<li>ArcGIS Data Store</li>
</ul>
</li>
<li>ArcGIS for Desktop 10.3.1</li>
<li>CityEgnine 2015.2</li>
</ul>
<p><br></p>
<p><br></p>
<h2 id="不可不知的先决条件"><a href="#不可不知的先决条件" class="headerlink" title="不可不知的先决条件"></a>不可不知的先决条件</h2><p><strong>1</strong>.  首先确保自己的环境满足系统要求，这是非常重要的、不可忽略的条件之一，详情参考如下文档：</p>
<p>  <strong>ArcGIS for Server 系统要求</strong><br>  <a href="http://server.arcgis.com/zh-cn/server/latest/install/windows/arcgis-for-server-system-requirements.htm" target="_blank" rel="noopener">http://server.arcgis.com/zh-cn/server/latest/install/windows/arcgis-for-server-system-requirements.htm</a></p>
<p>   <strong>ArcGIS Pro 系统要求</strong><br>   <a href="http://pro.arcgis.com/zh-cn/pro-app/get-started/arcgis-pro-system-requirements.htm" target="_blank" rel="noopener">http://pro.arcgis.com/zh-cn/pro-app/get-started/arcgis-pro-system-requirements.htm</a></p>
<p><br></p>
<p><strong>2</strong>. ArcGIS 的 Scene Service 是一种新的 Web 服务类型，这种服务来自于 ArcGIS Pro，并且要求创建和发布 Scene Service 的<strong>ArcGIS Pro是1.1或将来的更高版本</strong>。  也就是说， 目前传统的ArcGIS for Desktop 是不能创建和发布Scene Service的。</p>
<p><br></p>
<p><strong>3</strong>. 从 <strong>ArcGIS for Server 10.3.1</strong> 版本才开始了Scene Service 的支持。也就是，略早的 10.3 版本也是不可以的哦。为了发布3D数据（Multipatch）和2D数据作为门户中的托管场景图层，<strong>必要的安装组件有 Portal for ArcGIS，ArcGIS Data Store</strong> 。 其中，ArcGIS Data Store 用于存储 Scene Service 中所使用的场景图层切片缓存。</p>
<p><br></p>
<p><strong>4</strong> 将 ArcGIS Server 与门户联合；并且将 ArcGIS Server 指定为门户的托管服务器。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_Portal.png" alt=""></p>
<p><strong>具体如何配置？</strong> 参考帮助文档，这里不赘述，虽然略有繁琐但有章可依：</p>
<p><strong>联合 ArcGIS Server 站点与门户</strong><br><a href="http://server.arcgis.com/zh-cn/server/latest/administer/windows/federate-an-arcgis-server-site-with-your-portal.htm" target="_blank" rel="noopener">http://server.arcgis.com/zh-cn/server/latest/administer/windows/federate-an-arcgis-server-site-with-your-portal.htm</a></p>
<p><strong>配置托管服务器</strong><br><a href="http://server.arcgis.com/zh-cn/server/latest/administer/windows/configure-hosting-server-for-portal.htm" target="_blank" rel="noopener">http://server.arcgis.com/zh-cn/server/latest/administer/windows/configure-hosting-server-for-portal.htm</a></p>
<p><br></p>
<p><br></p>
<h2 id="创建和发布Scene-Service-的过程"><a href="#创建和发布Scene-Service-的过程" class="headerlink" title="创建和发布Scene Service 的过程"></a>创建和发布Scene Service 的过程</h2><p><br></p>
<p><strong>1. 打开 ArcGIS Pro ，创建场景，加入场景数据。其中建筑物模型为 File Geodatabase 中的 Multipatch Feature Class。</strong></p>
<p>   <img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_Pro.png" alt=""></p>
<p><br></p>
<p><strong>2. 确保连接并激活 Portal，且自己的账户有创建内容、发布托管要素和发布托管场景的权限。</strong></p>
<p>这里需要说明下，目前，只用 Portal for ArcGIS 才支持发布 Multipatch 数据源的 Scene Service。 ArcGIS Online 暂不支持。如果大家的 ArcGIS Pro 是60天试用版本的许可，默认激活的门户是ArcGIS Online，需要添加并切换到一个可用的Portal。</p>
<p>   <img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_ActivePortal.png" alt=""></p>
<p><br></p>
<p><strong>3. 确保ArcGIS Pro 中场景的打开方式是 Global View。如果是 Local View ，也可以切换。</strong></p>
<p>   <img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_Global.png" alt=""></p>
<p><br></p>
<p><strong>4. 分享场景，分析服务，确保没有 Error，如果有，需要事先修复。</strong></p>
<p>  <img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_Analysis.png" alt=""></p>
<p><br></p>
<p><strong>5. 等待完成，确保Job目录中所有任务全部成功完成。</strong></p>
<p>  <img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_Job.png" alt=""></p>
<p>  根据数据量的不同，带宽的不同，硬件配置的不同，整个发布服务的过程时间长短不一。</p>
<p>  我的这个测试中共89个精细程度不一的建筑物模型，发布全过程大约耗时1分钟，供参考。</p>
<p>  <img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_Finish.png" alt=""></p>
<p><br></p>
<p><br></p>
<h2 id="Web-前端访问服务"><a href="#Web-前端访问服务" class="headerlink" title="Web 前端访问服务"></a>Web 前端访问服务</h2><p>ArcGIS Scene Viewer 需要支持 WebGL 的桌面 Web 浏览器，WebGL 是用于渲染 3D 图形的 web 技术标准。 </p>
<p>点 <strong><a href="get.webgl.org">这里</a></strong> 测试浏览器是否启用了 WebGL，请打开 get.webgl.org； 要解决与 WebGL 相关的问题，请访问 WebGL <a href="http://get.webgl.org/troubleshooting/" target="_blank" rel="noopener"><strong>疑难解答</strong></a>。</p>
<p>ArcGIS Scene Viewer 支持这些 web 浏览器：<strong>Chrome，Firefox，Internet Explorer 11，Safari</strong>。我这里使用的是 Chrome 是 Version 47.0.2526.111 m (64-bit)。</p>
<p><br></p>
<p>好像还不错哦</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_web.png" alt=""></p>
<p>表示树木的 Feature Layer 可以在 Web 端修改渲染</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_webTree.png" alt=""></p>
<p>再凑近看看细节</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_Detail.png" alt=""></p>
<p>再换换底图，做几个Slide</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISWeb3D_Basemap.png" alt=""></p>
<p><br></p>
<p><br></p>
<p>刚好这个周末比较清闲，可以用比较连续的时间做了测试，效果还算令人满意，后面我会再做些大数据量的测试，有空再更新。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> ArcGIS Pro </tag>
            
            <tag> ArcGIS Enterprise </tag>
            
            <tag> Web </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Troubleshooting：Shapefile 乱码与字符截断问题]]></title>
      <url>/2015/12/21/TroubleshootingShapefile/</url>
      <content type="html"><![CDATA[<p>Shapefile是上个世纪90年代的数据格式，但是由于它开放易用至今仍然倍受欢迎，最近与shapefile编码相关的问题此起彼伏连绵不绝，整理下几个高频问题共享之。</p>
<p><br></p>
<h2 id="为什么我的shapefile在ArcGIS-10-3中打开乱码？"><a href="#为什么我的shapefile在ArcGIS-10-3中打开乱码？" class="headerlink" title="为什么我的shapefile在ArcGIS 10.3中打开乱码？"></a><strong>为什么我的shapefile在ArcGIS 10.3中打开乱码？</strong></h2><p><br></p>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a><em>原因</em></h3><p>这个问题的根本原因就是读取文件使用的编码类型和文件实际存储的编码类型不一致。</p>
<p>Shapefile文件的头文件（dBase Header）中，一般会包含shapefile使用的编码类型的信息，这个信息成为 <strong>LDID</strong> （ Language Driver ID），这样在使用应用程序打开 shapefile 的时候，应用程序就知道用何种编码类型去正确读取它，而不会发生乱码。 在 ArcGIS Desktop 生产的 shapefile 数据中通常会包含这项信息。在Shapefile的子文件中，有时我们还会发现同名 <strong>*.cpg</strong> 文件，文件中也存储了编码信息，用记事本打开，看到例如 utf-8。</p>
<p>二者被ArcGIS 识别的优先顺序是，<strong>LDID 优先于 CPG文件</strong>。也就是如果头文件中没有约定读shapefile的编码类型时，如果这时刚好有个CPG文件，那么ArcGIS就会使用这里的编码类型读取。</p>
<p>我们知道 shapefile 是个开放格式，只要你了解了数据规范，完全可以脱离ArcGIS自己生产出来。在Windows中文语言设置下，假设你自己写代码或者使用第三方的程序生产了shapefile，例如MapGIS，默认使用 <strong>CP936（GBK）</strong>编码存储，但是无论粗心大意还是有意为之没有在数据头文件中约定“我用了936！”。如果是 ArcGIS 10.2 和之前的版本，那么没问题，ArcGIS 默认就是以这种方式识别，没有乱码。可是拿到 <strong>ArcGIS 10.2.1 ，ArcGIS 10.2.2，ArcGIS 10.3.x</strong> 这几个版本中发现乱！码！了！<strong>在缺失 LDID 和 CPG时，这几个版本默认使用 UTF-8 来读取 shapefile，这样必然乱码了。</strong></p>
<p><br></p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a><em>解决方法</em></h3><p>在shapefile子文件旁边创建个记事本，修改为同名的CPG文件，文本内容<strong>oem</strong>或者<strong>936</strong>。</p>
<p><img src="http://kikitamap.com/images/blogImg/TroubleshootingShapefile_cpgfile.png" alt=""></p>
<p> <img src="http://kikitamap.com/images/blogImg/TroubleshootingShapefile_cpgContent.png" alt=""></p>
<p>这样 ArcGIS 10.2.1 、10.2.10.3.x 在读取的时候，就知道你的数据是这种编码类型存储的，从而按照正确的方式读取。</p>
<p><img src="http://kikitamap.com/images/blogImg/TroubleshootingShapefile_Demo.png" alt=""></p>
<p><br></p>
<p><br></p>
<h2 id="为什么ArcGIS-10-3导出-Shapefile的字段名会被截断成3个汉字？低版本中不是至少可以存储4个汉字吗？"><a href="#为什么ArcGIS-10-3导出-Shapefile的字段名会被截断成3个汉字？低版本中不是至少可以存储4个汉字吗？" class="headerlink" title="为什么ArcGIS 10.3导出 Shapefile的字段名会被截断成3个汉字？低版本中不是至少可以存储4个汉字吗？"></a><strong>为什么ArcGIS 10.3导出 Shapefile的字段名会被截断成3个汉字？低版本中不是至少可以存储4个汉字吗？</strong></h2><p><br></p>
<h3 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a><em>原因</em></h3><p>这个问题仍然与编码类型有关。</p>
<p><strong>ArcGIS 10.2 以及更早的版本</strong>，ArcGIS写shapefile的时候，遇到中文<strong>默认</strong>使用Windows当前语言 <a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81" target="_blank" rel="noopener"><strong>字符集编码</strong></a>（也称 <a href="https://zh.wikipedia.org/wiki/%E4%BB%A3%E7%A0%81%E9%A1%B5" target="_blank" rel="noopener"><strong>代码页/CodePage/OEM CodePage</strong></a>），例如中文一般使用的是 <strong><a href="https://zh.wikipedia.org/wiki/%E4%BB%A3%E7%A2%BC%E9%A0%81936" target="_blank" rel="noopener">CodePage 936（GBK）</a></strong>。</p>
<p><strong>ArcGIS 10.2.1 以及之后的版本</strong>，ArcGIS写shapefile的时候，<strong>默认</strong>使用的是 <a href="https://zh.wikipedia.org/wiki/UTF-8" target="_blank" rel="noopener"><strong>UTF-8</strong></a> 编码类型。</p>
<p>这两种编码类型存储汉字所使用的字节数是不相同的，上面的关键字中我也给出了 wiki 的链接，有兴趣点进去看看详情。简言之，shapefile自身的限制是字段为9个字节，CP936编码下汉字通常为双字节存储，因此可以存储 9/2=4 个汉字；UTF-8 编码下汉字至少需要3个字节存储，因此最多只能存储 9/3=3 个汉字了。</p>
<p><img src="http://kikitamap.com/images/blogImg/TroubleshootingShapefile_ChineseCharlen.png" alt=""></p>
<p>举个例子，在Python命令行中，我们求一下 Unicode字符串的长度就可以真相大白。</p>
<p><img src="http://kikitamap.com/images/blogImg/TroubleshootingShapefile_ChinesePython.png" alt=""></p>
<p><br></p>
<h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a><em>解决方法</em></h3><h4 id="Perfect-Solution"><a href="#Perfect-Solution" class="headerlink" title="Perfect Solution"></a><em>Perfect Solution</em></h4><p>使用地理数据库，放弃shapefile，避免各种截断问题，这也是存储地理数据的康庄大道。</p>
<p>但是，shapefile的拥趸说“我的需求是恢复以前存储4个汉字的shapefile，我不想用地理数据库，我希望得到老版本的shapefile的结果，我不在乎shapefile的编码类型是什么 ……bla bla……”好吧，方法还是有的。</p>
<h4 id="Workaround"><a href="#Workaround" class="headerlink" title="Workaround"></a><em>Workaround</em></h4><blockquote>
<p>这里还有个注意事项：<br>如果你用的刚好是 <strong>10.2.1</strong> 和<strong>10.2.2</strong> 这两个版本，那么要打补丁后以下设置才生效。以前写过另外一篇，详情点 <strong><a href="http://kikitamap.com/2014/02/13/shapefileCodePage/" target="_blank" rel="noopener">这里</a></strong>。<br>如果你用的是 <strong>10.3.x</strong> ，那么直接向下进行。</p>
</blockquote>
<ol>
<li>打开注册表，定位到 ‘<strong>My Computer\HKEY_CURRENT_USER\Software\ESRI\Desktop 10.x</strong>‘ </li>
<li><p>创建项 ‘<strong>Common</strong>‘， 接着在其下创建  ‘<strong>CodePage</strong>‘ 项， 添加 ‘<strong>字符串</strong>’，名称： <strong>dbfDefault</strong>，健值：<strong>oem（或者 936）</strong>。</p>
<p><img src="http://kikitamap.com/images/blogImg/TroubleshootingShapefile_Regedit.png" alt=""></p>
</li>
</ol>
<p>这样ArcGIS Desktop <strong>读、写</strong> shapefile的默认方式就将是Windows当前语言 <strong>OEM CodePage 936</strong>。</p>
<p><br></p>
<blockquote>
<p>PS：<br>当然这种方法，也可以解决第一个问题，并且不需要为缺失oem编码信息的数据增加cpg文件了。两种方法，任君选择。</p>
</blockquote>
<p><br></p>
<p><br></p>
<h2 id="我如何检测当前shapefile使用了什么编码类型？"><a href="#我如何检测当前shapefile使用了什么编码类型？" class="headerlink" title="我如何检测当前shapefile使用了什么编码类型？"></a><strong>我如何检测当前shapefile使用了什么编码类型？</strong></h2><p><br></p>
<p>shapfile本身是个开放格式，当然我们有很多种途径查看shapefile的内部，读者中不乏代码大牛，只要了解数据规范应该方法多多。</p>
<p>我这里就分享一种通过 python 查看编码类型的简单的方法，使用python中的 <strong>struct模块</strong> 可以处理二进制数据，从而探测下 shapefile 的子文件 dbf 的头文件中的 LDID 信息是什么。</p>
<h3 id="python代码示例"><a href="#python代码示例" class="headerlink" title="python代码示例"></a>python代码示例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'kikita'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">dbf = <span class="string">u'D:\ExportShapefiles\中文字段.dbf'</span></span><br><span class="line">dat = open(dbf, <span class="string">'rb'</span>).read(<span class="number">30</span>)[<span class="number">29</span>:]</span><br><span class="line">id = struct.unpack(<span class="string">'B'</span>, dat)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">print(id, hex(id))</span><br></pre></td></tr></table></figure>
<p>例如，得到这样的打印结果：   <strong><code>(77, &#39;0x4d&#39;)</code></strong>  通过这样的 ID 到 <a href="http://shapelib.maptools.org/codepage.html" target="_blank" rel="noopener">编码表</a> 中查到就是 CodelPage 936。</p>
<p><img src="http://kikitamap.com/images/blogImg/TroubleshootingShapefile_codetable.png" alt=""></p>
<p>当然如果有你更好的方法，博主求分享，可以直接在评论区里贴出来，共同讨论。</p>
<p><br></p>
<p><br></p>
<p>上面是三个最常被问到的问题，这三个问题通了，那么好多shapefile读写乱码问题就迎刃而解了。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在ArcGIS for Desktop中实现批量任务]]></title>
      <url>/2015/12/06/IterationinArcGISforDesktop/</url>
      <content type="html"><![CDATA[<p><strong>ModelBuilder</strong> 是 ArcGIS for Desktop 产品中最可爱的功能之一，它可以尽可能免代码地将我们从重复劳动中解放出来。使用 ModelBuilder 的过程常常被比喻为“搭积木”，我们只需要拿着 ArcGIS for Desktop 中为我们提供的“积木”去搭建满足于自己的特定工作流模型。</p>
<p>再打个比方，我们要实现的某个功能比作是自己做面包。首先要准备食材，例如面粉、牛奶、鸡蛋、黄油、糖、盐、酵母，类比为 <strong>地理数据</strong>； 食材齐备了，就可以顺序开始和面、发酵、烘焙，这些工作由特定的器具承担，例如各种烘焙工具、烤箱，就好比ArcGIS提供的 <strong>工具</strong>，例如 ArcToolbox中的工具们； 面包制作过程中可以根据自己口味，规定发酵时间、控制糖和盐的多少等，这就类比为工具的自定义 <strong>参数</strong> 。</p>
<p>如果自己享受整个烘焙的过程，不厌其烦地面面俱到，那大可维持现状；可是如果你觉得做面包是个体力活，你只是想吃到自家面包，而希望把做面包的过程“外包”出去，那么面包机的市场就来了。这篇blog就和大家说说如何制作“面包机”。</p>
<p><br></p>
<h2 id="1-明确需求"><a href="#1-明确需求" class="headerlink" title="1 明确需求"></a>1 明确需求</h2><p>我们从一个简单常见的实例开始……</p>
<p><strong>需求</strong>：现有一些表示各种研究对象的地理数据，小明希望把所有研究数据变换到需要的坐标系统，并且全部裁剪至研究范围。</p>
<p>如果只有一份数据，小明会不假思索的找到 ArcToolbox中的 Project和Clip工具，顺序执行即可解决问题；如果是3+份数据，小明可能会想，该做个工具了。</p>
<p><br></p>
<h2 id="2-构建工作流"><a href="#2-构建工作流" class="headerlink" title="2 构建工作流"></a>2 构建工作流</h2><p>从【地理处理】菜单，打开  ModelBuilder 窗口，依次拖拽和连接 Project 和 Clip 两个工具。Project 工具的输出作为 Clip 工具的输入。</p>
<p><img src="http://kikitamap.com/images/blogImg/IterationinArcGISforDesktop_Grey.png" alt=""></p>
<p>双击工具可以打开工具继续填补工具需要的参数，直至Model因参数完全而变成彩色。</p>
<p><img src="http://kikitamap.com/images/blogImg/IterationinArcGISforDesktop_Color.png" alt=""></p>
<p><br></p>
<h2 id="3-使用迭代器"><a href="#3-使用迭代器" class="headerlink" title="3 使用迭代器"></a>3 使用迭代器</h2><p>前一步的工具已经满足一次任务的需要了，接着就是解决批量处理的问题。ModelBuilder提供了一些额外的自带工具来满足我们的一些高级需求，其中一类就是 <strong>迭代器</strong>，它用来实现循环。</p>
<p>在这个例子中，需要遍历的对象是表示各种研究对象的要素类，因此选择 迭代要素类 / Iterate Feature Classes。当然也可以根据自己的实际需求选择其他迭代器。</p>
<p><img src="http://kikitamap.com/images/blogImg/IterationinArcGISforDesktop_Iterator.png" alt=""></p>
<p>接下来就是把迭代器与工具串联起来。首先，双击迭代器的六边形为迭代器设置工作空间，即地理数据库/GDB，或者文件夹目录（例如shapefile所在的目录）。这样，迭代器会在指定的工作空间遍历要素类。删除现有Project工具的输入数据，将迭代器的输出数据连接到Project工具。</p>
<p><img src="http://kikitamap.com/images/blogImg/IterationinArcGISforDesktop_Iterator2.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/IterationinArcGISforDesktop_inlineVar.png" alt=""></p>
<p>工具基本准备完毕，但是还差了重要的一步。目前，最后的输出数据是常量，也就是说，即使前面的工具执行了N次，那结果都将被同名覆盖。那么，<strong>行内变量</strong> 就显出用武之地了。</p>
<p>迭代器每次遍历到一个要素类，会返回一个 Name，内容是当前要素类的名称，这个Name就是行内变量。引用的方法就是使用百分号括起来，即 <strong><code>%Name%</code></strong> 。</p>
<p>输出数据设置示例：</p>
<p><img src="http://kikitamap.com/images/blogImg/IterationinArcGISforDesktop_inlineVar2.png" alt=""></p>
<p>至此我们就完成了一次批量任务。</p>
<p><br></p>
<h2 id="4-复用工具"><a href="#4-复用工具" class="headerlink" title="4 复用工具"></a>4 复用工具</h2><p>如果我们以后想按照这个相同的需求处理数据，完全可以将其做成模型工具。将输入数据和输出数据设置为模型变量，我们就可以在“运行”状态下使用。</p>
<p>设置方法，在需要作为参数方便后续修改的项目上右键，勾选 “模型参数”即可，然后项目的头上顶了个“<strong>P</strong>”，(￣▽￣)”。</p>
<p><img src="http://kikitamap.com/images/blogImg/IterationinArcGISforDesktop_Para.png" alt=""></p>
<p>将模型保存至工具箱后，双击运行工具。现在就可以把它当成“面包机”，放入食材，等面包即可。</p>
<p><img src="http://kikitamap.com/images/blogImg/IterationinArcGISforDesktop_FinalTool.png" alt=""></p>
<p><br></p>
<h2 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5  注意事项"></a>5  注意事项</h2><p>下面是些有用的提示，FYI：</p>
<ul>
<li><p>每个模型仅可使用<strong>唯一</strong>一个迭代器。如果模型中已经存在一个迭代器，那么用于添加迭代器的菜单就不可用了。这是限制之一。</p>
</li>
<li><p>如果将含有迭代器的模型<strong>导出为 Python 脚本</strong>，则导出的脚本中将不会包括迭代逻辑。这是限制之二。Python中有list函数，也可以实现类似的需求，但是需要重写。</p>
</li>
<li><p>尽管Model可以嵌套调用，但是迭代器的<strong>嵌套循环</strong>逻辑不佳，不建议使用。如果需要实现嵌套循环，强烈建议使用python脚本。例如，实现遍历工作空间内每个要素类中的每个要素（记录）这样的需求，可以使用 ArcPy中的函数 <strong><code>ListFeatureClasses</code></strong> 和 <strong><code>SearchCursor</code></strong>来实现。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[“连不上ArcGIS License Manager” 的一点常用诊断方法]]></title>
      <url>/2015/11/27/CanNotConnectAGSLM/</url>
      <content type="html"><![CDATA[<p>在 ArcGIS Desktop 的问题库中，有一类不算做核心技术问题，但却可能会位列“最常见的问题”之一。简言之一句话，”<strong>许可服务器连不上怎么办？！</strong>“ 下面就来演绎下问题的诊断过程。</p>
<blockquote>
<p>本文仅适用于客户端 ArcGIS Administrator 访问 ArcGIS License Manager <strong>正式版</strong>许可的问题的诊断，目前适用于 ArcGIS for Desktop 10.x、ArcGIS Engine 10.x、CityEngine 201x 版本的浮动许可诊断问题。博主说，你可能很难找到第二篇与ArcGIS Desktop 正版授权有关的博客了…… <strong>单机版和破解版请绕行。</strong>  </p>
</blockquote>
<p><br></p>
<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>ArcGIS License Manager <strong>已经授权完毕且成功</strong>，可用性（Availability）栏目中总计（Total）和可用（Available）的数目正常，服务器状态也运行正常。</p>
<p><img src="http://kikitamap.com/images/blogImg/CanNotConnectAGSLM_LM.png" alt=""></p>
<blockquote>
<p>图中的过期栏目中的日期可忽略，内部工作使用的正式许可是限定有效日期的。如果你使用的是购买得到的正式版许可，这里会显示 永久（Permanent），也就是许可是永久有效的。</p>
</blockquote>
<p><br></p>
<p>然而，在通过局域网访问许可服务器的其它机器上的 ArcGIS Administrator 中，连接许可服务器失败。</p>
<p>常见错误提示： <strong>“机器名或者IP”does not have a valid Licesne Manager. Please enter a valid License Manager Server.</strong></p>
<p><br></p>
<h2 id="诊断思路"><a href="#诊断思路" class="headerlink" title="诊断思路"></a>诊断思路</h2><p>我们可以结合一些初级的网络知识，按照如下思路测试，大多数情况下，你不需要依次全做完，就发现问题已经解决或至少找到了问题的原因。</p>
<p><br></p>
<p><strong>1. 从许可服务器本机入手</strong></p>
<p>如果情况允许，最好在许可服务器本机也安装 ArcGIS Desktop 程序，然后使用 ArcGIS Administrator 连接本机许可服务器，各次分别填写 localhost，本机IP，本机机器名，检查是否有问题。一般如果本机连接不上，就不要期待其它机器可以正常连接了。</p>
<p><strong>常见处理方法： </strong><br>在ArcGIS License manger 中执行：重读许可服务 –&gt; 停止许可服务 –&gt; 启动许可服务<br>确保 ArcGIS Administrator 中许可类型选择正确，如 Advanced ，Standard ，Basic。</p>
<p><br></p>
<p><strong>2. 确保网络连通</strong></p>
<p>可以使用<strong>ipconfig /all</strong>观察本地网络设置是否正确。</p>
<p>可以使用 <strong>ping</strong> 命令测试下网络情况</p>
<ul>
<li><p><strong>ping 127.0.0.1</strong> 如果本地址无法Ping通，则表明本地机TCP/IP协议不能正常工作。ArcGIS的许可走的是TCP/IP 协议</p>
</li>
<li><p><strong>ping本机IP地址</strong> 这样是为了检查本机的IP地址是否设置有误</p>
</li>
<li><p><strong>ping本网网关或本网IP地址</strong> 这样的是为了检查硬件设备是否有问题，也可以检查本机与本地网络连接是否正常</p>
</li>
</ul>
<p>如果这时遇到错误提示，就该向自己单位的 IT 寻求帮助了。有了通畅的网络环境，ArcGIS许可才能有效通讯。</p>
<p><br></p>
<p><strong>3. 确认端口可用</strong></p>
<p>如果网络通畅，然而还是无法连接许可服务器，肿么办？！那就再稍微往下深一步，博主的知识量有限，但是好奇心和倔强还是迫使她尽可能地再努力多做一点。</p>
<p>在”<a href="http://desktop.arcgis.com/zh-cn/desktop/latest/get-started/license-manager-guide/configure-the-arcgis-license-manager-to-work-through-a-firewall.htm" target="_blank" rel="noopener"><strong>许可服务管理器指南</strong></a>“中提到，”<strong>默认情况下，将 lmgrd 后台程序设为端口 27000</strong>“。那么，连不上许可服务器是因为端口被锁定了吗？ 有可能，动手查查才放心。</p>
<p>听说，netstat是控制台命令,是一个监控TCP/IP网络的非常有用的工具。那么动手吧。</p>
<p>以管理员的身份运行命令窗口，并输入命令：<strong><code>netstat -abn</code></strong> </p>
<p><img src="http://kikitamap.com/images/blogImg/CanNotConnectAGSLM_cmd.png" alt=""></p>
<p>如果找到 27000 和 lmgrd.exe 这个进程 ，并且状态 Established，可以认为端口正常。</p>
<p><img src="http://kikitamap.com/images/blogImg/CanNotConnectAGSLM_lmgrd.png" alt=""></p>
<p><br></p>
<p>27000-27009是ArcGIS License Manger 的默认端口段，是相对不拥挤的段。但是，如果发现这个端口被其他程序占用了，那么就要修改ArcGIS许可服务器或者其它程序的端口了。在这里我就只能说说 ArcGIS 许可服务器的端口的修改方法了。</p>
<blockquote>
<p><strong>如何修改 ArcGIS 许可服务的端口？</strong><br>在 ArcGIS license manager 的安装目录下，bin目录下，找到 service.txt，打开如下样子：<br><img src="http://kikitamap.com/images/blogImg/CanNotConnectAGSLM_service.png" alt=""></p>
<p>修改这个配置文件，例如：在 SERVER 行的结尾处，您可选择直接在 ANY 后面指定端口号。在 VENDOR 行上，添加 PORT=####，其中 #### 是指定的特定端口号，用来将供应商后台程序锁定到特定端口，例如 1234。<br><img src="http://kikitamap.com/images/blogImg/CanNotConnectAGSLM_newPort.png" alt=""></p>
<p>这样我们可以在客户端使用例如 <strong>27004@许可服务器IP或机器名</strong> 的方式访问许可。</p>
</blockquote>
<p><br></p>
<p>再看客户端机器，如果机器上有 telnet 客户端，那么还可以试试 telnet 命令测试远程主机的端口是否可用。</p>
<p>例如：<strong><code>telnet 192.168.100.115 27000</code></strong>，其中假设许可服务器IP为 192.168.100.115。</p>
<p>如果返回黑屏，仅左上角光标闪烁，那么可以认为可用。</p>
<p>如果不幸提示，”Connecting to 192.168.100.115……Could not open connection<br> to the host on port 27000. Connect Failed. ”</p>
<p>关掉许可服务器和客户端机器的防火墙试试，确认是否可以正常访问。如果真的是防火墙作祟，我们可以在防火墙上创建个例外规则，确保27000端口可以穿过防火墙。windows 防火墙的例外规则创建看看 windows 的帮助吧，点 <a href="http://windows.microsoft.com/zh-cn/windows/open-port-windows-firewall#1TC=windows-7" target="_blank" rel="noopener"><strong>这里</strong></a>，我不叨叨了。如果单位里有更高级的防火墙或安全系统，需要配置例外规则，那么还是联系 IT 吧。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> License </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[给自己做个地图故事——Trip to Greece]]></title>
      <url>/2015/09/30/TriptoGreece/</url>
      <content type="html"><![CDATA[<p>Esri 的 <strong><a href="http://storymaps.arcgis.com/zh-cn/" target="_blank" rel="noopener">地图故事</a></strong> 很有意思，用句官媒的广告 “每个人都有要讲述的故事，利用地图的强大功能来讲述您的故事” ……</p>
<p>国庆假期将至，放点有趣的东西。如果喜欢分享，又想记录自己的过往，动手试试不错哦。</p>
<p><br><br><img src="http://kikitamap.com/images/blogImg/TriptoGreece_Overview.png" alt=""></p>
<p><br></p>
<p><strong>如何制作故事地图 ?</strong>    我把链接搬运过来，<a href="http://storymaps.arcgis.com/zh-cn/how-to/" target="_blank" rel="noopener"><strong>点吧</strong></a></p>
<p>地图故事中有好多应用程序模板可选，即使不懂技术也能hold住，只需要选个要讲的“<strong>故事类型</strong>”。</p>
<p><img src="http://kikitamap.com/images/blogImg/TriptoGreece_StoryMap.png" alt=""></p>
<p><br></p>
<p>比如选择 <strong>Story Map Tour</strong>，这也有<strong><a href="http://storymaps.arcgis.com/zh-cn/app-list/map-tour/tutorial/" target="_blank" rel="noopener">攻略</a></strong>，点这里。其实不看攻略也没关系。</p>
<p>在 <strong>Story Map Tour Builder</strong>  中可以选择上传自己的照片，ArcGIS Online 会自动管理。如果照片是带有GPS信息的 Geo-tagged 照片，那太好了，上传之后就自动定位了。</p>
<p><br></p>
<p>我把自己的一次行程做成了地图故事 <a href="http://kikitamoon.maps.arcgis.com/apps/MapTour/?appid=2ccbe03ecdfa4d0faf80126146374261" target="_blank" rel="noopener"><strong>Trip to Greece</strong></a>。</p>
<p>短链接：[<em><a href="http://arcg.is/1LLY6fm" target="_blank" rel="noopener">http://arcg.is/1LLY6fm</a></em></p>
<iframe width="720" height="600" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="http://kikitamoon.maps.arcgis.com/apps/MapTour/index.html?appid=2ccbe03ecdfa4d0faf80126146374261"></iframe>


<p><br></p>
<p><br></p>
<p><br></p>
<p>上面的与技术好像都不沾边，下面的可能沾点边……</p>
<p><br></p>
<p>打开ArcGIS Online 上<strong>我的组织</strong>，查看<strong>我的内容</strong>，我们看到这个地图故事的应用一共有这样几个内容：</p>
<p><img src="http://kikitamap.com/images/blogImg/TriptoGreece_MyContent.png" alt=""></p>
<p><br></p>
<p>照片对应的点信息是通过 Feature Layer 维护的，所以在一开的时候选择上传照片时，要给 Feature Service 起个名字。</p>
<p><img src="http://kikitamap.com/images/blogImg/TriptoGreece_FeatureService.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 相机里 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
            <tag> Web </tag>
            
            <tag> Map Story </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地统计分析笔记——探索数据]]></title>
      <url>/2015/09/27/ExplorerData/</url>
      <content type="html"><![CDATA[<p>在执行地统计分析之前，浏览、熟悉、检查自己的数据是至关重要的。绘制和检查数据是地统计分析过程中的必要阶段，我们可以从这些工作中获得一些先验知识，指导后续的工作。</p>
<p><br></p>
<h1 id="Stage-1-绘制数据"><a href="#Stage-1-绘制数据" class="headerlink" title="Stage 1     绘制数据"></a>Stage 1     绘制数据</h1><p>通过ArcMap的图层渲染方案绘制数据，我们可以获得对数据的第一印象。</p>
<p>例如，使用单一符号渲染了解采样点的疏密分布，通过分类渲染了解采样点高值低值的分布，等等。</p>
<p><img src="http://kikitamap.com/images/blogImg/ExplorerData_DrawingData.png" alt=""></p>
<p><br></p>
<h1 id="Stage-2-检查数据"><a href="#Stage-2-检查数据" class="headerlink" title="Stage 2  检查数据"></a>Stage 2  检查数据</h1><p>绘制数据后，使用 <strong>探索性空间数据分析 (Exploratory Spatial Data Analysis，ESDA)</strong> 工具来执行数据探索的第二阶段。这些工具提供了一种比绘制数据更加量化的方式来检查数据，有助于我们更深入地了解正在研究的现象，有助于我们对插值模型的构建方式做出更加正确的决策。</p>
<p>ESDA 工具包括：</p>
<p><img src="http://kikitamap.com/images/blogImg/ExplorerData_ESDA.png" alt=""></p>
<p><br></p>
<h2 id="Ⅰ-是否服从正态分布？"><a href="#Ⅰ-是否服从正态分布？" class="headerlink" title="Ⅰ 是否服从正态分布？"></a>Ⅰ 是否服从正态分布？</h2><h3 id="Histogram-直方图"><a href="#Histogram-直方图" class="headerlink" title="Histogram/直方图"></a>Histogram/直方图</h3><p><img src="http://kikitamap.com/images/blogImg/ExplorerData_Histogram.png" alt=""></p>
<p>直方图用于显示感兴趣数据集的频率分布并计算汇总统计数据，如何解读图形和统计信息呢？</p>
<ul>
<li>如果数据服从正态分布，则平均值（mean）与中值（median）类似，偏度（skewness）应接近零，并且峰度（kurtosis）应接近 3。<ul>
<li>平均值即为数据的算数平均值。平均值提供分布中心的测量值。 中位数与累积比例 0.5 对应。如果数据以升序排列，50%的值位于中间值之下，50% 的值位于中间值之上。中间值提供了分布中心的另一个测量值。 第一和第三分位数分别与累积比例 0.25 和 0.75 对应。如果数据以升序排列，则 25% 的值位于第一分位数之下，25% 的值位于第三分位数之上。第一和第三分位数是分位数的特殊情况。</li>
<li>偏度系数是分布对称度的测量值。对于对称的分布，偏度系数为零。如果分布具有较长的大值右尾部，则为正偏分布；如果分布具有较长的小值左尾部，则为负偏分布。对于正偏分布，平均值大于中间值；对负偏分布，平均值小于中间值。</li>
<li>峰度取决于分布尾部的大小，提供分布产生异常值可能性的衡量指标。正态分布的峰度等于三。具有较厚尾部的分布被称为高峰态，其峰度大于三。具有较薄尾部的分布被称为低峰态，其峰度值小于三。</li>
</ul>
</li>
<li>数据的方差，通常对过高值或过低值很敏感。标准差为方差的平方根，它描述了数据在平均值周围的分散程度。方差和标准差越小，测量值聚类相对于平均值就越紧密。</li>
</ul>
<p><br></p>
<h3 id="Normal-QQPlots-正态QQ图"><a href="#Normal-QQPlots-正态QQ图" class="headerlink" title="Normal QQPlots/正态QQ图"></a>Normal QQPlots/正态QQ图</h3><p><img src="http://kikitamap.com/images/blogImg/ExplorerData_NormalQQ.png" alt=""></p>
<p>正态 QQ 图上的点可指示数据集的单变量分布的正态性。如果数据是正态分布的，点将落在 45 度参考线上。如果数据不是正态分布的，点将会偏离参考线。</p>
<p><br></p>
<h3 id="General-QQPlots-普通QQ图"><a href="#General-QQPlots-普通QQ图" class="headerlink" title="General QQPlots/普通QQ图"></a>General QQPlots/普通QQ图</h3><p>普通 QQ 图用于评估两个数据集的分布的相似程度。这些图的创建和所述的正态 QQ 图的过程类似，不同之处在于第二个数据集不一定要服从正态分布，使用任何数据集均可。如果两个数据集具有相同的分布，普通 QQ 图中的点将落在 45 度直线上。</p>
<p><br></p>
<p><br></p>
<blockquote>
<p><strong>### 有关数据变换</strong></p>
<p>Geostatistical Analyst 中的一些插值方法要求数据呈正态分布。如果数据偏斜（分布不均衡），则可能需要将数据变换为正态分布。</p>
<p><strong>Box-Cox 变换（又称幂变换）</strong><br>如果在某一部分研究区域中计数值很小，这一区域的变异性就小于计数值更大的另一区域的变异性。在这种情况下，平方根变换将<strong>有助于使整个研究区域内的方差更加恒定</strong>，通常还会使数据呈正态分布。平方根变换是 Box-Cox 变换中 λ = ½ 时的特例。</p>
<p><strong>对数变换</strong><br>对数变换实际上是 Box-Cox 变换中 λ = 0 时的特例。对数变换<strong>通常用于呈正偏分布的数据</strong>。其中有些值非常大，如果这些大值位于研究区域中，对数变换有助于使方差更加恒定和归一化数据。</p>
<p>例如数据如下分布：<br><img src="http://kikitamap.com/images/blogImg/ExplorerData_BoxCox.png" alt=""></p>
<p>变换前后对比：<br><img src="http://kikitamap.com/images/blogImg/ExplorerData_BoxCox2.png" alt=""></p>
<p><strong>反正弦变换</strong><br>反正弦变换<strong>可用于表示比例或百分比的数据</strong>。通常在数据为比例形式时，方差在接近 0 和 1 时最小，接近 0.5 时最大。反正弦变换有助于使整个研究区域内的方差更加恒定，通常还会使数据呈正态分布。</p>
</blockquote>
<p><br></p>
<h2 id="Ⅱ-是否存在异常值？"><a href="#Ⅱ-是否存在异常值？" class="headerlink" title="Ⅱ 是否存在异常值？"></a>Ⅱ 是否存在异常值？</h2><p>全局异常值是相对于数据集中的所有值而言具有非常高值或非常低值的已测量采样点。<br>局部异常值是一个已测量采样点，其值处于整个数据集的正常值域范围内，但查看周围点时，其值则显得异常高或异常低。</p>
<p>如果异常值是现象中的真实异常情况，那么这可能是研究和理解现象的最重要的位置点。如果异常值是由数据输入过程中的错误所导致的，那么在创建表面之前应该对其进行校正或移除。</p>
<h3 id="Histogram-直方图-1"><a href="#Histogram-直方图-1" class="headerlink" title="Histogram/直方图"></a>Histogram/直方图</h3><p>如果在直方图的最左侧（极小值）或最右侧（极大值）能够看到一个孤立的条，可能表明这个条所表示的点是异常值。这种条越孤立于直方图的主条组，点是异常值的概率就越大。</p>
<p><br></p>
<h3 id="Voronoi-图"><a href="#Voronoi-图" class="headerlink" title="Voronoi 图"></a>Voronoi 图</h3><p>Voronoi 图是由采样点形成的泰森多边形地图。</p>
<p><img src="http://kikitamap.com/images/blogImg/ExplorerData_Voronoi.png" alt=""></p>
<p>在查看 Voronoi 图时，检查附近是否有面符号色彩差别很大的值。</p>
<p>例如，下图中红色面明显异于周围值。</p>
<p><img src="http://kikitamap.com/images/blogImg/ExplorerData_Voronoi2.png" alt=""></p>
<p><br></p>
<h3 id="Semivariogram-Covariance-Cloud-半变异函数-协方差云"><a href="#Semivariogram-Covariance-Cloud-半变异函数-协方差云" class="headerlink" title="Semivariogram/Covariance Cloud / 半变异函数/协方差云"></a>Semivariogram/Covariance Cloud / 半变异函数/协方差云</h3><p>半变异函数/协方差云工具可以用来检查数据集中空间自相关的局部特征以及查找局部异常值。</p>
<p><img src="http://kikitamap.com/images/blogImg/ExplorerData_Semivariogram.png" alt=""></p>
<p>云中的每个点表示数据集中的一对点，x 轴表示各位置间的距离，y 轴表示这些位置上的值的差值平方。半变异函数中的每个点都表示一个位置对，而不是地图上的单个位置。因此云中点的数量会随着数据集中点的数量的增加而快速增加。如果数据集中存在 n 个点，则半变异函数/协方差云中将显示 n*(n-1)/2 个点。因此，不建议使用点数超过几千个的数据集。如果数据集包含几千个点，那么应使用子集要素工具来随机选择点，然后在半变异函数/协方差云中使用子集。</p>
<p>“半变异函数/协方差云”工具对检测局部异常值特别有用。它们显示为互相接近的点（x 轴上的低值），但在 y 轴上却是高值，表明组成点对的两个点的值有很大差异。这与所期望的结果正相反，即互相接近的点有相似的值。</p>
<p><br></p>
<h2 id="Ⅲ-是否存在趋势？"><a href="#Ⅲ-是否存在趋势？" class="headerlink" title="Ⅲ 是否存在趋势？"></a>Ⅲ 是否存在趋势？</h2><h3 id="Trend-Analyst-趋势分析"><a href="#Trend-Analyst-趋势分析" class="headerlink" title="Trend Analyst / 趋势分析"></a>Trend Analyst / 趋势分析</h3><p>“趋势分析”工具提供数据的三维透视图。采样点的位置绘制在 x,y 平面上，z值表示感兴趣的属性值。趋势分析工具将散点图投影到 x,z 平面和 y,z 平面上，通过多项式曲线对每个投影进行了拟合。</p>
<p><img src="http://kikitamap.com/images/blogImg/ExplorerData_Trend.png" alt=""></p>
<p>浏览图形垂直墙面上的粗线。这些线表示趋势。一条趋势线沿 x 轴（通常表示纵向趋势），另一条显示沿 y 轴的趋势（通常表示纬度趋势）。如果经过投影点的曲线是平的，则不存在趋势；如果多项式曲线具有确切的模式（如下图的蓝线和绿线），这表明数据中存在某种趋势。</p>
<p>另外，检查趋势时更改多项式的阶非常有用；检查不同于标准 N–S 和 E–W 方向的趋势非常有帮助，可以通过旋转趋势轴检查数据。</p>
<p><br></p>
<h2 id="Ⅳ-是否空间自相关？"><a href="#Ⅳ-是否空间自相关？" class="headerlink" title="Ⅳ 是否空间自相关？"></a>Ⅳ 是否空间自相关？</h2><p>我们可通过检查不同的位置的采样数据对来探索数据的空间自相关，仍然使用前面提到过的ESDA工具半变异函数云。</p>
<p><br></p>
<h3 id="Semivariogram-Covariance-Cloud-半变异函数-协方差云-1"><a href="#Semivariogram-Covariance-Cloud-半变异函数-协方差云-1" class="headerlink" title="Semivariogram/Covariance Cloud / 半变异函数/协方差云"></a>Semivariogram/Covariance Cloud / 半变异函数/协方差云</h3><p>如果存在空间相关性，则距离较近的点对（在 x 轴的最左侧）应具有较小的差值（在 y 轴上的值较小）。随着各个点之间的距离越来越大（点在 x 轴上向右移动），通常，差值的平方也应随之增大（在 y 轴上向上移动）。通常，平方差超过某个距离后就会保持不变。超过这个距离的位置对被视为不相关。</p>
<p>如果半变异函数中的点对构成一条水平的直线，那么数据中可能不存在空间自相关，因而对数据进行插值也就失去了意义。</p>
<p>地统计方法的基本假设是，对于任意两个彼此间的距离和方向都相近的位置，其差值的平方也应相近。这种关系称为<strong>平稳性</strong>。空间自相关可能仅依赖于两个位置之间的距离，这被称为<strong>各向同性</strong>。如果事物在某些方向上比在其他方向上更相似，也就是半变异函数和协方差中都存在这种方向性影响，它被称为<strong>各向异性</strong>。</p>
<p><img src="http://kikitamap.com/images/blogImg/ExplorerData_Direction.png" alt=""></p>
<p><br></p>
<h3 id="交叉协方差云"><a href="#交叉协方差云" class="headerlink" title="交叉协方差云"></a>交叉协方差云</h3><p>“交叉协方差云”工具可用于研究两个数据集之间的交叉相关。交叉协方差云显示了两个数据集间的所有位置对的经验交叉协方差，并且将其作为两位置间距离的函数对其进行绘制，与上面的工具类似，该工具也提供具有搜索方向功能的协方差表面。</p>
<p><img src="http://kikitamap.com/images/blogImg/ExplorerData_Crosscovariance.png" alt=""></p>
<p><br></p>
<p>对数据有了第一印象，并且用 ESDA 工具对数据做了检查，我们已经对待研究的数据有了一些先验知识，那么下面就可以选择插值方法来创建表面了，下一篇继续。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Statistics </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在ArcGIS中创建Python工具（三）]]></title>
      <url>/2015/09/10/CreatePythonTool3/</url>
      <content type="html"><![CDATA[<p>从 ArcGIS 10.1 版本开始，我们可以创建 <strong>python工具箱</strong> 来自定义脚本工具，这种工具箱相比较上一篇提到的标准工具箱。有着独特的优势，具体二者的区别总结过，看<a href="http://kikitamap.com/2015/08/31/CreatePythonTool1/" target="_blank" rel="noopener">这一篇</a>。</p>
<p><br></p>
<h2 id="认识-Python工具箱"><a href="#认识-Python工具箱" class="headerlink" title="认识 Python工具箱"></a><strong>认识 Python工具箱</strong></h2><p>Python 工具箱 (.pyt) 是一个简单的文本文件，可以在任何文本编辑器中或者任何 Python IDE 中创建、查看和编辑。要确保 ArcGIS 正确识别 Python 工具箱，工具箱类的名称必须是 <strong><code>Toolbox</code></strong>。在 <strong><code>Toolbox</code></strong> 类的 <strong><code>__init__</code></strong> 方法中定义工具箱的属性，这些属性包括 alias、label 和 description，我们可以按照 <strong><a href="http://desktop.arcgis.com/en/desktop/latest/analyze/creating-tools/a-template-for-python-toolboxes.htm" target="_blank" rel="noopener">帮助文档</a></strong> 中的模板构建 Python 工具箱模板。</p>
<p>如下代码中创建了包含一个工具（名为 Tool）的 Python 工具箱：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> arcpy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Toolbox</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""Define the toolbox (the name of the toolbox is the name of the</span></span><br><span class="line"><span class="string">        .pyt file)."""</span></span><br><span class="line">        self.label = <span class="string">"Toolbox"</span></span><br><span class="line">        self.alias = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># List of tool classes associated with this toolbox</span></span><br><span class="line">        self.tools = [Tool]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tool</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""Define the tool (tool name is the name of the class)."""</span></span><br><span class="line">        self.label = <span class="string">"Tool"</span></span><br><span class="line">        self.description = <span class="string">""</span></span><br><span class="line">        self.canRunInBackground = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getParameterInfo</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""Define parameter definitions"""</span></span><br><span class="line">        params = <span class="keyword">None</span></span><br><span class="line">        <span class="keyword">return</span> params</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isLicensed</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""Set whether tool is licensed to execute."""</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">updateParameters</span><span class="params">(self, parameters)</span>:</span></span><br><span class="line">        <span class="string">"""Modify the values and properties of parameters before internal</span></span><br><span class="line"><span class="string">        validation is performed.  This method is called whenever a parameter</span></span><br><span class="line"><span class="string">        has been changed."""</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">updateMessages</span><span class="params">(self, parameters)</span>:</span></span><br><span class="line">        <span class="string">"""Modify the messages created by internal validation for each tool</span></span><br><span class="line"><span class="string">        parameter.  This method is called after internal validation."""</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span><span class="params">(self, parameters, messages)</span>:</span></span><br><span class="line">        <span class="string">"""The source code of the tool."""</span></span><br><span class="line">        <span class="keyword">return</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<h2 id="动手做做"><a href="#动手做做" class="headerlink" title="动手做做"></a><strong>动手做做</strong></h2><p>下面我就依据这个模板，写一个简单的脚本工具箱。需求是批量裁剪，我希望我只提供一个文件夹或者数据库等这样的<strong>工作空间</strong>和一个<strong>裁剪区域面</strong>，就可以批量完成工作空间内全部数据的裁剪工作，并且无视栅格还是矢量，一并裁剪。</p>
<p>Let the scripting begin ……</p>
<p><br></p>
<h3 id="1-创建工具箱"><a href="#1-创建工具箱" class="headerlink" title="1 创建工具箱"></a>1 创建工具箱</h3><p>工具箱的name就是 .pyt 文件的名字，通常我们把工具添加到 ArcToolbox窗口中时会显示工具箱的 label。在 <strong><code>Toolbox</code></strong> 类的 <strong><code>__init__</code></strong> 方法中定义属性，例如： <strong><code>alias</code></strong>、<strong><code>label</code></strong> 和 <strong><code>description</code></strong>。</p>
<p>工具作为<strong>类</strong>被添加至 .pyt 中，工具箱的 tools 属性必须设置为包含定义的所有工具<strong>类</strong>的<strong>列表</strong>。比如，需要做ATool，ATool，CTool三个工具，不是写三个脚本，而是创建三个<strong>类</strong>，然后将类名放入列表， <strong><code>self.tools = [ATool,ATool,CTool]</code></strong> 。</p>
<p><br></p>
<p>这里，我仅定义一个工具类 ClipWorkspace，来说明构建过程即可  ：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Source Name:   ClipWorkspace.pyt</span></span><br><span class="line"><span class="string">Author:        Kikita</span></span><br><span class="line"><span class="string">Description:   Python tool to clip spatial data in the same workspace by batch.</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> arcpy</span><br><span class="line"></span><br><span class="line"><span class="comment"># The class name must be "Toolbox" ...</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Toolbox</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">    </span><br><span class="line">        self.label = <span class="string">"Clip Workspace Toolbox"</span></span><br><span class="line">        self.alias = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># List of tool classes associated with this toolbox</span></span><br><span class="line">        self.tools = [ClipWorkspace]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClipWorkspace</span><span class="params">(object)</span>:</span></span><br><span class="line">	……</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>在 ArcGIS Desktop 中已经可以看到这个工具箱的雏形：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool3_Tool.png" alt=""></p>
<p><br></p>
<h2 id="2-定义工具"><a href="#2-定义工具" class="headerlink" title="2 定义工具"></a>2 定义工具</h2><p>下面就是完善工具内部的代码。我就以 ClipVectorWorkspace 为例。</p>
<p><br></p>
<p>每个工具类应至少包括 <strong><code>__init__</code></strong> 和 <strong><code>execute</code></strong> 方法。此外，还可以选择使用 <strong><code>getParameterInfo</code></strong>、<strong><code>isLicensed</code></strong>、<strong><code>updateParameters</code></strong> 和 <strong><code>updateMessages</code></strong> 方法向工具的行为中添加其他控制。</p>
<p>工具类中的 <strong><code>__init__</code></strong> 方法是标准 Python 类初始化方法。对于 Python 工具箱中的工具，<strong><code>__init__</code></strong> 方法用于设置该工具的属性，例如工具的标注、描述、是否允许在后台运行等。</p>
<p>下面的例子就创建了ClipVectorWorkspace这个工具：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClipWorkspace</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.label = <span class="string">"Clip Workspace"</span></span><br><span class="line">        self.description = <span class="string">"clip spatial data in the same workspace by batch."</span></span><br><span class="line">        self.canRunInBackground = <span class="keyword">True</span></span><br></pre></td></tr></table></figure>
<p>有了工具的构造函数，我们继续看如何给工具定义参数。在 Python 工具箱 (.pyt) 中，可在工具类的 <strong><code>getParameterInfo</code></strong> 方法中创建 <strong><code>Parameter</code></strong> 对象，并设置对象的属性来定义工具参数。<strong><code>Parameter</code></strong>的属性中<strong><code>datatype</code></strong><br>包含的类型可以在帮助文档中查询，点<strong><a href="http://desktop.arcgis.com/zh-cn/desktop/latest/analyze/creating-tools/defining-parameter-data-types-in-a-python-toolbox.htm" target="_blank" rel="noopener">这里</a></strong>。</p>
<p><br></p>
<p>此示例中的参数就是输入工作空间（inWorkspace）、裁剪区域面（ClipArea）、输出工作空间（outWorkspace）。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getParameterInfo</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Parameter Definitions</span></span><br><span class="line">    <span class="comment"># First parameter - Input Workspace</span></span><br><span class="line">    param0 = arcpy.Parameter(</span><br><span class="line">        displayName=<span class="string">"Input Workspace"</span>,</span><br><span class="line">        name=<span class="string">"inWorkspace"</span>,</span><br><span class="line">        datatype=<span class="string">"DEWorkspace"</span>,</span><br><span class="line">        parameterType=<span class="string">"Required"</span>,</span><br><span class="line">        direction=<span class="string">"Input"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Second parameter - Clip Area</span></span><br><span class="line">    param1 = arcpy.Parameter(</span><br><span class="line">        displayName=<span class="string">"Clip Area"</span>,</span><br><span class="line">        name=<span class="string">"CLipArea"</span>,</span><br><span class="line">        datatype=<span class="string">"DEFeatureClass"</span>,</span><br><span class="line">        parameterType=<span class="string">"Required"</span>,</span><br><span class="line">        direction=<span class="string">"Input"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Third parameter - Output Workspace</span></span><br><span class="line">    param2 = arcpy.Parameter(</span><br><span class="line">        displayName=<span class="string">"Output Workspace"</span>,</span><br><span class="line">        name=<span class="string">"outWorkspace"</span>,</span><br><span class="line">        datatype=<span class="string">"DEWorkspace"</span>,</span><br><span class="line">        parameterType=<span class="string">"Required"</span>,</span><br><span class="line">        direction=<span class="string">"Input"</span>)</span><br><span class="line"></span><br><span class="line">    params = [param0,param1,param2]</span><br><span class="line">    <span class="keyword">return</span> params</span><br></pre></td></tr></table></figure>
<p><strong>PS</strong> : 在代码中，如果仔细看，或许你会疑惑，为何输出工作空间的方向是 input ，而不是 output？ 因为工具最终输出的为 Feature Class 或 Raster，输出工作空间也是作为输入参数传入工具使用的。如果不关心，也可以不在意这些细节…… 继续向下了解工具的构建过程。</p>
<p><br></p>
<p>下面就是工具的具体执行部分了，当然里面还加了些辅助了解工具执行状态的消息：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute</span><span class="params">(self, parameters, messages)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""The source code of the tool."""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get tool parameters</span></span><br><span class="line">    inWorkspace = parameters[<span class="number">0</span>].valueAsText</span><br><span class="line">    arcpy.AddMessage(<span class="string">"###Input Workspace is &#123;0&#125;"</span>.format(inWorkspace))</span><br><span class="line"></span><br><span class="line">    ClipArea = parameters[<span class="number">1</span>].valueAsText</span><br><span class="line">    arcpy.AddMessage(<span class="string">"###Clip Area is &#123;0&#125;"</span>.format(ClipArea))</span><br><span class="line"></span><br><span class="line">    outWorkspace =  parameters[<span class="number">2</span>].valueAsText</span><br><span class="line">    arcpy.AddMessage(<span class="string">"###Out Workspace is &#123;0&#125;"</span>.format(outWorkspace))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Clip Feature by Batch</span></span><br><span class="line">    arcpy.env.workspace = inWorkspace</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Clip Vector</span></span><br><span class="line">    FeatureClasses = arcpy.ListFeatureClasses()</span><br><span class="line">    arcpy.AddMessage(<span class="string">"Input Workspace contains &#123;0&#125;"</span>.format(FeatureClasses))</span><br><span class="line">    <span class="keyword">for</span> fc <span class="keyword">in</span> FeatureClasses:</span><br><span class="line">        arcpy.AddMessage(<span class="string">"&gt;&gt; Clipping  &#123;0&#125;"</span>.format(fc))</span><br><span class="line">        arcpy.Clip_analysis(fc,ClipArea, os.path.join(outWorkspace,fc))</span><br><span class="line">        arcpy.AddMessage(<span class="string">"&#123;0&#125; has been clipped."</span>.format(os.path.join(outWorkspace,fc)))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Clip Raster</span></span><br><span class="line">    Rasters = arcpy.ListRasters()</span><br><span class="line">    arcpy.AddMessage(<span class="string">"Input Workspace contains &#123;0&#125;"</span>.format(Rasters))</span><br><span class="line">    <span class="keyword">for</span> Raster <span class="keyword">in</span> Rasters:</span><br><span class="line">        arcpy.AddMessage(<span class="string">"&gt;&gt; Clipping  &#123;0&#125;"</span>.format(Raster))</span><br><span class="line">        arcpy.Clip_management(in_raster = Raster,</span><br><span class="line">                              rectangle = <span class="string">""</span>,</span><br><span class="line">                              out_raster = os.path.join(outWorkspace,Raster),</span><br><span class="line">                              in_template_dataset = ClipArea,</span><br><span class="line">                              nodata_value = <span class="string">""</span>,</span><br><span class="line">                              clipping_geometry = <span class="string">"ClippingGeometry"</span>,</span><br><span class="line">                              maintain_clipping_extent = <span class="string">"NO_MAINTAIN_EXTENT"</span>)</span><br><span class="line">        arcpy.AddMessage(<span class="string">"&#123;0&#125; has been clipped."</span>.format(os.path.join(outWorkspace,Raster)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>到这里，工具的核心部分已经完成，执行下试试。</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool3_Execute.png" alt=""></p>
<p><br></p>
<p>OK，应该是预期的结果：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool3_Result.png" alt=""></p>
<p><br></p>
<h3 id="3-完善"><a href="#3-完善" class="headerlink" title="3 完善"></a>3 完善</h3><p>我们发现不像标准工具箱中的脚本工具和脚本文件本身是散列存储的，python工具箱以及其中的所有工具的代码都在这一个pyt文件中，维护起来便利了不少。如果想在工具箱中继续添加工具，只要继续增加一个工具类即可。</p>
<p>经过前两步的过程，工具已经可以拿去使用。如果为了工具更友好，还可以继续调整下代码，以便遇到异常的时候，让用户了解更详细的原因，这里就再往下进行了。工具分享给别人，最后只差要丰富下工具文档了，同样在 Python 工具的 Item Description 中编辑。</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool3_Perfection.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在ArcGIS中创建Python工具（二）]]></title>
      <url>/2015/09/02/CreatePythonTool2/</url>
      <content type="html"><![CDATA[<p>上一篇中我们了解到有两种方式在 ArcGIS 中创建 Python工具，这一篇就来看看如何在标准工具箱中创建脚本工具。</p>
<p><br></p>
<p>ArcGIS Help 中脚本工具的帮助过于枯燥，在这里，我以一个具体的实例来总结构建脚本工具的过程，我要实现的需求是做个快速实现羽化边界效果的小工具，预期得到如下的效果：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_Result.png" alt=""></p>
<p>上面效果在ArcMap中完全可以手工运行几个工具实现，但是过程稍微繁琐，那么需求来了，如何做个自定的一键生成羽化边界的小工具？</p>
<p><br></p>
<p><br></p>
<h2 id="1-准备Python脚本文件"><a href="#1-准备Python脚本文件" class="headerlink" title="1 准备Python脚本文件"></a>1 准备Python脚本文件</h2><p>第一步，先写好脚本工具的核心 —— python脚本文件。</p>
<p><br></p>
<blockquote>
<p>脚本中我希望根据指定环间距自动生成一个9环的缓冲面，然后添加一个字段，用于存储给各个缓冲面的透明度百分比。</p>
<p>看下图就知道我想做什么了：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_Detail.png" alt=""></p>
</blockquote>
<p><br></p>
<p>写一个py文件，将要用到的工具串联起来实现自己的需求，大致是下面的样子。这不是最终要做成脚本工具的版本，只是为了预先了解要如何实现，后面还要修改。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">__author__ = <span class="string">'kikita'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># FileName: EasyFeathering.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> arcpy</span><br><span class="line"><span class="comment"># arcpy.env.workspace = "D:\something\Data.gdb"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Script Tool Parameters</span></span><br><span class="line">InputFeature = <span class="string">"InterestArea"</span></span><br><span class="line">OutputFeature = <span class="string">"OutFeathering"</span></span><br><span class="line">SingleRingWidth = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Some Predefined Parameters</span></span><br><span class="line">distances = []</span><br><span class="line">level = <span class="number">9</span></span><br><span class="line">bufferUnit = <span class="string">"meters"</span></span><br><span class="line">NewField = <span class="string">"Percent"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># My Easy Feathering function</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(level):</span><br><span class="line">    distances.append(SingleRingWidth*(i+<span class="number">1</span>))</span><br><span class="line">    i = i+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>  str(distances)</span><br><span class="line"><span class="keyword">print</span>  <span class="string">"Distance Complete!"</span></span><br><span class="line"></span><br><span class="line">arcpy.MultipleRingBuffer_analysis(InputFeature, OutputFeature, distances, bufferUnit, <span class="string">""</span>, <span class="string">"ALL"</span>,<span class="string">"OUTSIDE_ONLY"</span>)</span><br><span class="line"><span class="keyword">print</span>  <span class="string">"Success to execute Multi Ring Buffer."</span></span><br><span class="line"></span><br><span class="line">arcpy.AddField_management(OutputFeature,NewField,<span class="string">"double"</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Success to add Transparency Percent Field."</span></span><br><span class="line"></span><br><span class="line">arcpy.CalculateField_management(OutputFeature, NewField, <span class="string">"!OBJECTID! *10"</span>, <span class="string">"PYTHON"</span>, <span class="string">""</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Success to Calculate Transparency Percent Field."</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<h2 id="2-脚本工具参数配置"><a href="#2-脚本工具参数配置" class="headerlink" title="2 脚本工具参数配置"></a>2 脚本工具参数配置</h2><p>有了py文件之后，如何把它塞进工具箱里呢？</p>
<p>在ArcMap的Catalog窗口中，找一个自己喜欢的任意文件夹，新建一个Toolbox，然后右键  Add –&gt; Script，进入向导，这些操作如果不了解，可以点 <a href="http://desktop.arcgis.com/zh-cn/desktop/latest/analyze/creating-tools/adding-a-script-tool.htm" target="_blank" rel="noopener"><strong>这里</strong></a> 查查帮助，照着做即可，不赘述。</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_Tool.png" alt=""></p>
<p>这里我主要说说参数传递。</p>
<p>我希望做好的工具中，我只去指定三个参数，分别是：输入的兴趣区域面（input Feature ），多环缓冲的环间距（Single Ring width ），输出结果（output Feature ）。预览下工具界面：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_UsingTool.png" alt=""></p>
<p><br></p>
<p>那么问题又来了，这三个参数如何从工具界面传给真正执行工具的 python 脚本？我们需要对前面的脚本参数定义部分做个修改，使用 arcpy 提供的 <strong><code>GetParameterAsText()</code></strong>函数即可在工具界面和脚本之间传递参数。用下面的代码替换前面对这三个参数的替换：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Script Tool Parameters</span></span><br><span class="line">InputFeature = arcpy.GetParameterAsText(<span class="number">0</span>)</span><br><span class="line">SingleRingWidth = arcpy.GetParameterAsText(<span class="number">1</span>)</span><br><span class="line">OutputFeature = arcpy.GetParameterAsText(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>对应的脚本工具参数配置：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_Paras.png" alt=""></p>
<blockquote>
<p>为工具配置参数的时候，有2个原则需要遵守：</p>
<ul>
<li>工具对话框中的参数顺序必须与脚本中的<strong>参数顺序一致</strong>。</li>
<li>每个脚本工具参数都有关联的<strong>数据类型</strong>。ArcGIS的地理处理不会将值发送给数据类型不正确的脚本，从这点上看，脚本工具比下一篇要说到的脚本工具箱多了一个优势，就是，在参数值发送给脚本之前会有数据类型检验。</li>
</ul>
</blockquote>
<p><br></p>
<p>修改Python脚本文件后，现在就运行工具，发现可以得到预期的结果：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_UsingTool2.png" alt=""></p>
<p><br></p>
<p>但是有点不完美，就是在工具的运行过程中，工具给我返回的信息并不充足，我只知道 “Running Script EasyFeathering …”，而不了解工具在做什么，执行到了哪个步骤。这不是好的体验。</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_RunningTool.png" alt=""></p>
<p><br></p>
<p><br></p>
<h2 id="3-消息"><a href="#3-消息" class="headerlink" title="3 消息"></a>3 消息</h2><p>工具和用户之间的所有沟通均通过消息来实现。接着上一步提出的问题，如何在工具进度窗口中传递消息给用户？</p>
<p>虽然在开始调试脚本的时候，如开头代码所示，我加了些 Print 语句，方便我了解自己的脚本独立执行时的状态，但是如果运行脚本工具，这些print语句是看不到的。可以使用 ArcPy中提供的有关消息的函数，<code>AddMessage</code>、<code>AddWarning</code>、<code>AddError</code>等向工具进度条界面发送消息。这里我做了个简单的步骤的消息性提示，以及，如果结果没有记录输出，会提示警告。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">__author__ = <span class="string">'kikita'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># FileName: EasyFeathering.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> arcpy</span><br><span class="line"></span><br><span class="line"><span class="comment">#arcpy.env.workspace = "D:\IncidentSupport2015\something\Data.gdb"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the input values from tool UI</span></span><br><span class="line">InputFeature = arcpy.GetParameterAsText(<span class="number">0</span>)</span><br><span class="line">SingleRingWidth = arcpy.GetParameterAsText(<span class="number">1</span>)</span><br><span class="line">OutputFeature = arcpy.GetParameterAsText(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Some Predefined Parameters</span></span><br><span class="line">distances = []</span><br><span class="line">level = <span class="number">9</span></span><br><span class="line">bufferUnit = <span class="string">"meters"</span></span><br><span class="line">NewField = <span class="string">"Percent"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># My Easy Feathering function</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(level):</span><br><span class="line">    distances.append(int(SingleRingWidth)*(i+<span class="number">1</span>))</span><br><span class="line">    i = i+<span class="number">1</span></span><br><span class="line">arcpy.AddMessage(<span class="string">"Step1 Distance list Complete!"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arcpy.MultipleRingBuffer_analysis(InputFeature, OutputFeature, distances, bufferUnit, <span class="string">""</span>, <span class="string">"ALL"</span>,<span class="string">"OUTSIDE_ONLY"</span>)</span><br><span class="line">arcpy.AddMessage(<span class="string">"Step2 Success to execute Multi Ring Buffer."</span>)</span><br><span class="line"></span><br><span class="line">arcpy.AddField_management(OutputFeature,NewField,<span class="string">"double"</span>)</span><br><span class="line">arcpy.AddMessage(<span class="string">"Step3 Success to add Transparency Percent Field."</span>)</span><br><span class="line"></span><br><span class="line">arcpy.CalculateField_management(OutputFeature, NewField, <span class="string">"!OBJECTID! *10"</span>, <span class="string">"PYTHON"</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">InputFeatureCount = int(arcpy.GetCount_management(OutputFeature).getOutput(<span class="number">0</span>))</span><br><span class="line"><span class="keyword">if</span> InputFeatureCount == <span class="number">0</span>:</span><br><span class="line">    arcpy.AddWarning(<span class="string">"&#123;0&#125; has no features."</span>.format(OutputFeature))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    arcpy.AddMessage(<span class="string">"Step4 Success to Calculate Transparency Percent Field."</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>这样在工具的执行过程中，我就收到了消息：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_FinishingTool.png" alt=""></p>
<p>到这里，工具的功能部分就完成了。</p>
<p><br></p>
<p><br></p>
<h2 id="4-显示结果图层"><a href="#4-显示结果图层" class="headerlink" title="4 显示结果图层"></a>4 显示结果图层</h2><p> 我进一步希望脚本工具运行之后，自动显示在当前的地图文档中，从而避免重复设置透明度的操作。</p>
<p><br></p>
<ol>
<li>为输出参数配置模板图层。</li>
</ol>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_Template.png" alt=""></p>
<ol>
<li>在处理设置中，激活设置</li>
</ol>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_GpSetting.png" alt=""></p>
<p>这样在运行工具之后，结果即自动添加显示。</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_final.png" alt=""></p>
<p><br></p>
<p><br></p>
<h2 id="5-配置路径"><a href="#5-配置路径" class="headerlink" title="5 配置路径"></a>5 配置路径</h2><p>如果是在本机使用脚本工具，一般我们会使用绝对路径，但是如果希望分享自己的工具给别人，就要考虑路径问题，也就是新用户运行脚本工具时，相关的脚本文件和其他用到的资源能否访问到。我的工具按照如下的结构组织：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_Folder.png" alt=""></p>
<p><br></p>
<p>在脚本工具的属性中，可以配置存储相对路径引用 py 文件：</p>
<p>PS：但是不要想太多，这个设置仅仅会将脚本文件所在位置按照相对路径存储，而不会将脚本内部的路径进行转换。</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_Relative.png" alt=""></p>
<p><br></p>
<p>这个示例中我还需要用到一个图层文件作为模板，如果希望使用相对路径使用，就建议将符号化信息写在脚本内部，而不是在参数窗口中配置。所以，要继续修改下Python脚本文件。</p>
<p>在脚本文件的最后追加两行代码，我这里将获取与Python脚本文件在相同目录下的lyr文件：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Layer files are located in same folder as the .py file</span></span><br><span class="line">PythonFilePath = os.path.dirname(__file__)</span><br><span class="line">params = arcpy.GetParameterInfo()</span><br><span class="line">params[<span class="number">2</span>].symbology = os.path.join(PythonFilePath, <span class="string">"FeatheringEffectTemplate.lyr"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pass message </span></span><br><span class="line">arcpy.AddMessage(<span class="string">"Finding Feathering Effect Template Layer ..."</span> +<span class="string">"/n"</span>+ os.path.join(PythonFilePath, <span class="string">"FeatheringEffectTemplate.lyr"</span>))</span><br></pre></td></tr></table></figure>
<p>OK，路径的问题就解决了。</p>
<p><br></p>
<p><br></p>
<h2 id="6-帮助文档"><a href="#6-帮助文档" class="headerlink" title="6 帮助文档"></a>6 帮助文档</h2><p>还可以进一步为工具添加帮助文档，让更多的人了解如何使用这个工具。</p>
<p>在ArcCatalog 或者ArcMap的Catalog 中，在脚本工具上右键，点击 Item Description 菜单，点击 Edit 就可以对工具的帮助文档进行编辑。</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_helpDoc.png" alt=""></p>
<p>这样当别人打开你的工具时，就看到帮助喽。</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool2_ToolInterface.png" alt=""></p>
<p><br></p>
<p>好啦，关于ArcGIS 中使用脚本工具的过程就说到这里。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在ArcGIS中创建Python工具（一）]]></title>
      <url>/2015/08/31/CreatePythonTool1/</url>
      <content type="html"><![CDATA[<p>ArcGIS Desktop 自带有大量的工具，可以执行各种各样的地理处理任务。通过 python 我们可以灵活地调用这些工具，把工具组织成自己的工作流，甚至创建一些新的工具。今天就说说在 ArcGIS 中创建 Python工具这个话题。</p>
<p><br></p>
<p>在 ArcGIS 中我们可以通过两种方式来创建python工具：</p>
<p>一种是在标准工具箱下创建 <strong>脚本工具</strong>:</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool1_ScriptTool.png" alt=""></p>
<p>一种是创建 <strong>脚本工具箱</strong>：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool1_PythonToolbox.png" alt=""></p>
<p><br></p>
<p>到这里，可能你会有和我一样的疑问，二者有什么<strong>区别</strong>？</p>
<p>第一种 <strong>脚本工具</strong> 需要我们首先在 ArcGIS 环境中创建一个工具箱，然后添加 Python脚本文件（*.py），并通过向导来精确配置参数。这种工具很适合脚本工具的初学者，通过前面说的三步就可以搭建出一个自定义工具。但是这种模式也有一些缺点，工具箱和源脚本是分离的，我们很难集中的去管理和维护它们。</p>
<p>相比于前者的难以集中管理的缺点，第二种的 <strong>Python工具箱</strong> 就体现出了它的优势。在 Python 工具箱中，参数定义、代码验证和源代码都在同一位置进行处理，因此Python 工具的创建和维护更加容易。此外，Python 工具箱支持脚本工具不支持的功能，例如值表、复合数据类型和自定义许可检查。</p>
<p>Python 工具箱是在 ArcGIS 10.1 之后的版本出现的。如果你熟悉 Python，就可以充分利用所掌握的 Python 技能来创建 Python 工具箱。</p>
<p><br></p>
<p>下面是一些更加具体的对比列表：</p>
<p><img src="http://kikitamap.com/images/blogImg/CreatePythonTool1_Compare.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[蜂巢网格]]></title>
      <url>/2015/08/07/Hexagon/</url>
      <content type="html"><![CDATA[<p>比起死板硬朗的矩形渔网，六边形的蜂巢网格越来越受欢迎。推荐个小工具，实现下面的效果：</p>
<p><img src="http://kikitamap.com/images/blogImg/Hexagon_Done.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h1><p>准备自己的兴趣区域和需要统计的要素。例如，下面的美国国境面（浅灰色），机场点数据。</p>
<p><img src="http://kikitamap.com/images/blogImg/Hexagon_Airports.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h1><p>ArcGIS Online上有 GISers 分享的生产六边形格网的工具：</p>
<p>ModelBuilder版本的  <strong><a href="http://www.arcgis.com/home/item.html?id=03388990d3274160afe240ac54763e57" target="_blank" rel="noopener">Create Hexagon Tessellation</a></strong></p>
<p>Python版本的 <a href="http://arcscripts.esri.com/details.asp?dbid=15839" target="_blank" rel="noopener"><strong>Create Hexagons</strong></a></p>
<p><br></p>
<p>我就以第一个工具为例，运行状态打开：</p>
<p><img src="http://kikitamap.com/images/blogImg/Hexagon_Tool.png" alt=""></p>
<p>如果有关心工具内部的同学，编辑状态下看看工具：</p>
<p><img src="http://kikitamap.com/images/blogImg/Hexagon_Model.png" alt=""></p>
<p>运行之后，得到布满兴趣区域的蜂巢格网：</p>
<p><img src="http://kikitamap.com/images/blogImg/Hexagon_Grid.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h1><p>统计每个六边形内有多少座机场（多少个点），统计是ArcMap的强项。这里我就使用 Spatial Join 工具实现，其中我只保留有连接要素的目标要素，也就是仅保留有机场点的六边形。</p>
<p><img src="http://kikitamap.com/images/blogImg/Hexagon_Join.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h1><p>上一步自动统计得到六边形包含的机场的数目 Join_Count 字段，那我们就根据它渲染起来。</p>
<p><img src="http://kikitamap.com/images/blogImg/Hexagon_Result.png" alt=""></p>
<p><br></p>
<p><br></p>
<p>再放个ArcGIS Online 的web map，作者也是用到了六边形网格，<a href="http://www.arcgis.com/apps/StorytellingTextLegend/index.html?appid=0d41baefd133497db0a10018af579b5a" target="_blank" rel="noopener">来看看</a>。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[凹凸有致的地图——浮雕风]]></title>
      <url>/2015/08/07/ChoroplethHillshade/</url>
      <content type="html"><![CDATA[<p>想要下面这样一副地图，怎么做？</p>
<p><img src="http://kikitamap.com/images/blogImg/ChoroplethHillshade_Done.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h1><p>准备包含一个数值属性字段的面数据，比如包含人口信息的欧洲大陆数据，使用分级色带渲染。</p>
<p><img src="http://kikitamap.com/images/blogImg/ChoroplethHillshade_ColorRamp.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h1><p>使用 Choropleth Hillshade 工具制造“浮雕”栅格。感谢作者jwasil的分享，这个工具可以在Github上自取：<a href="https://github.com/jwasil/choropleth-hillshade" target="_blank" rel="noopener"><strong>点这里</strong></a>。</p>
<p><img src="http://kikitamap.com/images/blogImg/ChoroplethHillshade_Tool.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h1><p>给矢量面图层设置30%的透明，完成。</p>
<p><img src="http://kikitamap.com/images/blogImg/ChoroplethHillshade_Transparency.png" alt=""></p>
<p><br><br><br></p>
<p><a href="http://www.esri.com/products/maps-we-love/usa-population-change" target="_blank" rel="noopener">Maps we love</a> 中也有一个web map，就是使用这个工具做的，<a href="http://nation.maps.arcgis.com/apps/SimpleViewer/index.html?appid=a6cb3e1caa7549418b1a5945bcb36717" target="_blank" rel="noopener">来看看</a>。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[发布和安装python自定义模块]]></title>
      <url>/2015/07/09/SetupPythonModule/</url>
      <content type="html"><![CDATA[<p>这一篇说下如何发布和安装python自定义模块，版本：Python 2.7 。</p>
<p><br></p>
<h1 id="1-创建setup-py"><a href="#1-创建setup-py" class="headerlink" title="1.创建setup.py"></a>1.创建setup.py</h1><p>现在如果已经写好一个python文件，为了尽量简明，创建一个新的文件夹，把自己py文件放进去。接着在这个文件夹中创建一个名为 setup.py 的文件，用来表示模块的元数据，文件的内容类似下面这个样子。除了手工创建，有很多python编辑器也可以更简便的来创建这个文件，例如 pycharm。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> distutils.core <span class="keyword">import</span> setup</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    name=<span class="string">'nesterprint'</span>,</span><br><span class="line">    version=<span class="string">'1.0.0'</span>,</span><br><span class="line">    packages=[<span class="string">''</span>],</span><br><span class="line">    url=<span class="string">'http://blog.csdn.net/kikitaMoon'</span>,</span><br><span class="line">    license=<span class="string">''</span>,</span><br><span class="line">    author=<span class="string">'kikita'</span>,</span><br><span class="line">    author_email=<span class="string">'kikitamoopn@gmail.com'</span>,</span><br><span class="line">    description=<span class="string">'My Test'</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p><br></p>
<h1 id="2-打包发布"><a href="#2-打包发布" class="headerlink" title="2. 打包发布"></a>2. 打包发布</h1><p>使用Window自带的命令窗口，转到上一步创建的文件夹目录，输入命令，<strong>python setup.py sdist</strong>：</p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonModule_setup.png" alt=""></p>
<p>通过上面的状态信息知道，产生了下面的结果：</p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonModule_Folder.png" alt=""></p>
<p><br></p>
<h1 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h1><p>在命令窗口输入命令： <strong>python setup.py install</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonModule_Install.png" alt=""></p>
<p>安装命令也会产生额外的目录，build/lib 。</p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonModule_Folder2.png" alt=""></p>
<p><br></p>
<h1 id="4-导入模块"><a href="#4-导入模块" class="headerlink" title="4. 导入模块"></a>4. 导入模块</h1><p>import nesterprint ，导入这个自定模块，开始使用其中的myprint函数吧。</p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonModule_Import.png" alt=""></p>
<blockquote>
<p>PS:这一篇重在发布安装模块的流程，模块内部脚本没提及，在前一篇的最后Demo中有写，可以参考，但是这真的不是重点。</p>
</blockquote>
<p><br></p>
<h1 id="5-升级模块"><a href="#5-升级模块" class="headerlink" title="5. 升级模块"></a>5. 升级模块</h1><p>如果我们想升级模块，可以不？ 可以！</p>
<p>更新了nesterprint.py 中的一些代码，改进了功能后，来升级下模块。到 setup.py 文件中修改下版本信息，我就叫他2.0.0 。</p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonModule_Update.png" alt=""></p>
<p>用 2， 3 两步一样的方法发布安装就好了。</p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonModule_Install2.png" alt=""></p>
<p><br></p>
<p><br></p>
<p>试验一下：</p>
<p>nesterprint 的功能已经升级到 2.0 版本了。</p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonModule_Update2.png" alt=""></p>
<blockquote>
<p>what’s new？ 增加了根据列表的深度自动缩进的功能。 </p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[上传代码到PyPI]]></title>
      <url>/2015/07/09/UploadCodetoPyPI/</url>
      <content type="html"><![CDATA[<p>我们可以把自己的代码，尤其是期待分享的得意代码，上传分享到第三方Python模块的“集中营” —— <strong><a href="https://pypi.python.org" target="_blank" rel="noopener">PyPI</a></strong>，如果没有账号，可以注册个先。</p>
<p><br></p>
<h2 id="1-准备发布"><a href="#1-准备发布" class="headerlink" title="1  准备发布"></a>1  准备发布</h2><p>像在本地发布安装一样，先新建一个文件夹，然后将自己的py文件放进去，然后再这个文件夹中创建一个  <code>setup.py</code> 的文件，内容如下面的样子：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> distutils.core <span class="keyword">import</span> setup</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    name=<span class="string">'nesterprint'</span>,</span><br><span class="line">    version=<span class="string">'1.0.0'</span>,</span><br><span class="line">    packages=[<span class="string">''</span>],</span><br><span class="line">    url=<span class="string">'http://blog.csdn.net/kikitaMoon'</span>,</span><br><span class="line">    license=<span class="string">''</span>,</span><br><span class="line">    author=<span class="string">'kikita'</span>,</span><br><span class="line">    author_email=<span class="string">'kikitamoopn@gmail.com'</span>,</span><br><span class="line">    description=<span class="string">'My Test'</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p><br></p>
<h2 id="2-注册登录"><a href="#2-注册登录" class="headerlink" title="2 注册登录"></a>2 注册登录</h2><p>使用命令行窗口，跳转到要发布的py所在的文件夹目录，首先进行注册登录，让命令行上传工具知道我的PyPI账户和密码。输入命令：<strong><code>python setup.py register</code></strong>，选择 1，输入账户和密码，并且保存登录信息，下次上传可以跳过这个步骤。</p>
<p><img src="http://kikitamap.com/images/blogImg/UploadCodetoPyPI_Login.png" alt=""></p>
<p><br></p>
<h2 id="3-上传发布"><a href="#3-上传发布" class="headerlink" title="3 上传发布"></a>3 上传发布</h2><p>接着在命令行窗口中，输入命令： <strong><code>python setup.py sdist upload</code></strong>：</p>
<p><img src="http://kikitamap.com/images/blogImg/UploadCodetoPyPI_upload.png" alt=""></p>
<p>看到 OK 即上传成功。到 PyPI 自己的账户下看看吧。</p>
<p><img src="http://kikitamap.com/images/blogImg/UploadCodetoPyPI_MyProfile.png" alt=""></p>
<p>Bingo ~</p>
<p><br></p>
<h2 id="4-更新模块"><a href="#4-更新模块" class="headerlink" title="4 更新模块"></a>4 更新模块</h2><p>当我们修改了模块中的代码，并想更新 PyPI 上的模块，那就在上传之前更改下 setup.py 的 version 参数，告诉 PyPI 这是个新的版本。</p>
<p><img src="http://kikitamap.com/images/blogImg/UploadCodetoPyPI_Update.png" alt=""></p>
<p>并使用相同的命令来上传新的发布版本。</p>
<p><img src="http://kikitamap.com/images/blogImg/UploadCodetoPyPI_UploadUpdate.png" alt=""></p>
<p>好了，看看 PyPI，两个版本的模块都在，其中旧的版本默认被隐藏。</p>
<p><img src="http://kikitamap.com/images/blogImg/UploadCodetoPyPI_Verisons.png" alt=""></p>
<p><br></p>
<p>我们可以下载最新版本直接解压安装使用。</p>
<p><img src="http://kikitamap.com/images/blogImg/UploadCodetoPyPI_Download.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python列表常用操作]]></title>
      <url>/2015/07/07/PythonList/</url>
      <content type="html"><![CDATA[<p>Python的列表非常好用，一些常用的操作写在这里。</p>
<p><br></p>
<p>在Python中创建一个列表时，解释器会在内存中创建一个类似数组（但不是数组）的数据结构来存储数据。列表中的编号从 0 开始，然后是1，依此类推。</p>
<p><img src="http://kikitamap.com/images/blogImg/PythonList_List.png" alt=""></p>
<p><br></p>
<p><br></p>
<p><strong>print() 显示列表；</strong></p>
<p><strong>len() 得出列表中有多少数据项；</strong></p>
<p><strong>append() 在列表末尾追加一个数据项；</strong></p>
<p><strong>extend() 在列表末尾增加一个数据项集合；</strong></p>
<p><strong>pop() 在列表末尾删除一个数据项；</strong></p>
<p><strong>remove() 在列表中删除一个特定的数据项；</strong></p>
<p><strong>insert()  在特定位置前面增加一个数据项；</strong></p>
<p><strong>count()  统计某个数据项在列表中出现的次数；</strong></p>
<p><strong>reverse() 反向列表中数据项。</strong></p>
<p><br></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit = [<span class="string">"Apple"</span>,<span class="string">"Pear"</span>,<span class="string">"Grape"</span>,<span class="string">"Peach"</span>,<span class="string">"Bananer"</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(len(Fruit))</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit[<span class="number">0</span>])</span><br><span class="line">Apple</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit[<span class="number">4</span>])</span><br><span class="line">Bananer</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.append(<span class="string">"tomato"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="string">'Pear'</span>, <span class="string">'Grape'</span>, <span class="string">'Peach'</span>, <span class="string">'Bananer'</span>, <span class="string">'tomato'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.extend([<span class="string">"lemon"</span>,<span class="string">"coconut"</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="string">'Pear'</span>, <span class="string">'Grape'</span>, <span class="string">'Peach'</span>, <span class="string">'Bananer'</span>, <span class="string">'tomato'</span>, <span class="string">'lemon'</span>, <span class="string">'coconut'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.pop()</span><br><span class="line"><span class="string">'coconut'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="string">'Pear'</span>, <span class="string">'Grape'</span>, <span class="string">'Peach'</span>, <span class="string">'Bananer'</span>, <span class="string">'tomato'</span>, <span class="string">'lemon'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.remove(<span class="string">"Peach"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="string">'Pear'</span>, <span class="string">'Grape'</span>, <span class="string">'Bananer'</span>, <span class="string">'tomato'</span>, <span class="string">'lemon'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.remove(Fruit[<span class="number">0</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Pear'</span>, <span class="string">'Grape'</span>, <span class="string">'Bananer'</span>, <span class="string">'tomato'</span>, <span class="string">'lemon'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.insert(<span class="number">0</span>,<span class="string">"Apple"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="string">'Pear'</span>, <span class="string">'Grape'</span>, <span class="string">'Bananer'</span>, <span class="string">'tomato'</span>, <span class="string">'lemon'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.insert(<span class="number">6</span>,<span class="string">"coconut"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="string">'Pear'</span>, <span class="string">'Grape'</span>, <span class="string">'Bananer'</span>, <span class="string">'tomato'</span>, <span class="string">'lemon'</span>, <span class="string">'coconut'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.count(<span class="string">"Apple"</span>)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>用迭代显示列表中的数据项，以下的代码段中 <strong>for</strong> 和 <strong>while</strong> 完成的工作是一样的：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> item <span class="keyword">in</span> Fruit:</span><br><span class="line">	print(item)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> count &lt; len(Fruit):</span><br><span class="line">	  print(Fruit[count]) </span><br><span class="line">	  count = count + <span class="number">1</span></span><br></pre></td></tr></table></figure>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 输出结果</span><br><span class="line">Apple</span><br><span class="line"><span class="number">1</span></span><br><span class="line">Pear</span><br><span class="line"><span class="number">2</span></span><br><span class="line">Bananer</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>如果字符串中需要包含双引号，不要忘记转义 ，<strong>\”</strong>。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.append(<span class="string">"\"Tomato\""</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="number">1</span>, <span class="string">'Pear'</span>, <span class="number">2</span>, <span class="string">'Bananer'</span>, <span class="number">3</span>, <span class="string">'"Tomato"'</span>]</span><br></pre></td></tr></table></figure>
<p><br></p>
<p><strong>isinstance()</strong> 函数可以用来判断特定标识符是否包含某个特定类型的数据。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(Fruit,list)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isinstance(count,list)</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<p>Python中列表可以嵌套，并且可以支持任意多层的嵌套，例如：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="number">1</span>, <span class="string">'Pear'</span>, <span class="number">2</span>, <span class="string">'Bananer'</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit.append([<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="number">1</span>, <span class="string">'Pear'</span>, <span class="number">2</span>, <span class="string">'Bananer'</span>, <span class="number">3</span>, <span class="string">'"Tomato"'</span>, [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fruit[<span class="number">-1</span>].append([<span class="string">"aa"</span>,<span class="string">"bb"</span>,<span class="string">"cc"</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Fruit)</span><br><span class="line">[<span class="string">'Apple'</span>, <span class="number">1</span>, <span class="string">'Pear'</span>, <span class="number">2</span>, <span class="string">'Bananer'</span>, <span class="number">3</span>, <span class="string">'"Tomato"'</span>, [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, [<span class="string">'aa'</span>, <span class="string">'bb'</span>, <span class="string">'cc'</span>]]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> Fruit:</span><br><span class="line">	print(i)</span><br><span class="line">	</span><br><span class="line">Apple</span><br><span class="line"><span class="number">1</span></span><br><span class="line">Pear</span><br><span class="line"><span class="number">2</span></span><br><span class="line">Bananer</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="string">"Tomato"</span></span><br><span class="line">[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, [<span class="string">'aa'</span>, <span class="string">'bb'</span>, <span class="string">'cc'</span>]]</span><br></pre></td></tr></table></figure>
<p>试试输出三层嵌套的列表中的各个数据项：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> Fruit:</span><br><span class="line">	<span class="keyword">if</span> isinstance(i,list):</span><br><span class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">			<span class="keyword">if</span> isinstance(j,list):</span><br><span class="line">				<span class="keyword">for</span> k <span class="keyword">in</span> j:</span><br><span class="line">					print(k)</span><br><span class="line">			<span class="keyword">else</span>:</span><br><span class="line">				print(j)</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		print(i)</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line">Apple</span><br><span class="line"><span class="number">1</span></span><br><span class="line">Pear</span><br><span class="line"><span class="number">2</span></span><br><span class="line">Bananer</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="string">"Tomato"</span></span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">cc</span><br></pre></td></tr></table></figure>
<p><br></p>
<p><br></p>
<p>上面的循环嵌入的有点多，如果是N层嵌套的列表重复代码会很多，来点优化试试：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">my_print</span><span class="params">(mylist)</span>:</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">		<span class="keyword">if</span> isinstance(i,list):</span><br><span class="line">			my_print(i)</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			print(i)</span><br><span class="line">		</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_print(Fruit)</span><br><span class="line"></span><br><span class="line">Apple</span><br><span class="line"><span class="number">1</span></span><br><span class="line">Pear</span><br><span class="line"><span class="number">2</span></span><br><span class="line">Bananer</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="string">"Tomato"</span></span><br><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">cc</span><br></pre></td></tr></table></figure>
<p>定义个递归函数实现，看起来好多了。</p>
<p><br></p>
<p><br></p>
<p>列表操作符部分，+表示列表组合，*表示列表重复：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>mylist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] + [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> mylist</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>mylist = mylist*<span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(mylist)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>今天就写到这里吧。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS地图设计性能优化]]></title>
      <url>/2015/06/26/MapDesignPerformance/</url>
      <content type="html"><![CDATA[<p>制作一幅较高性能的地图检查如下方面是否注意到了 ？</p>
<p><br></p>
<p><br></p>
<h1 id="1-内容组织："><a href="#1-内容组织：" class="headerlink" title="1 内容组织："></a><strong>1 内容组织：</strong></h1><p><br></p>
<h2 id="·-空间参考-Spatial-Reference"><a href="#·-空间参考-Spatial-Reference" class="headerlink" title="· 空间参考/Spatial Reference"></a>· 空间参考/Spatial Reference</h2><p>在ArcMap中配置地图文档，要尽可能将所有数据与数据框使用相同的空间参考，特别是编辑或创建要提供服务的数据的时候。虽然ArcMap可以进行动态投影，但是这样做可以避免动态投影计算所造成的性能损耗。</p>
<p>对于不同空间参考的数据，可以使用工具 Project 进行转换。</p>
<h2 id="·-连接与关联-Join-amp-Relate"><a href="#·-连接与关联-Join-amp-Relate" class="headerlink" title="· 连接与关联/Join &amp; Relate"></a>· 连接与关联/Join &amp; Relate</h2><p>我们有时会通过Join表中的字段进行标注或符号化，也可能会通过Relate操作来执行查询等。然而，通过连接和关联访问数据可能会降低性能，需要执行额外的工作来维护连接。</p>
<p>对于需要使用Join过来的字段内容，可以考虑导出数据，获得包含连接字段的新要素类。</p>
<h2 id="·-索引-Index"><a href="#·-索引-Index" class="headerlink" title="· 索引/Index"></a>· 索引/Index</h2><p>这里说的索引包含空间索引和属性索引。空间索引在大多数情况下，ArcGIS 都会自动维护。如果遇到没有自动更新的情况，可以手动更新创建；如果数据源允许使用索引，则应为所有查询字段或渲染字段建立索引。</p>
<p>有关创建删除索引，ArcToolbox有个工具箱 Index可以找到需要的工具。</p>
<h2 id="·-数据简化-Data-Simplification"><a href="#·-数据简化-Data-Simplification" class="headerlink" title="· 数据简化/Data Simplification"></a>· 数据简化/Data Simplification</h2><p>如果需要使用小比例尺出图，无需展示非常详细细节，那就可以考虑简化、概化数据。如果将图层简化为具有更少的折点和线段，图层在小比例下将绘制得更快并且差别不大。此外，简化的数据可以提高查询和识别操作的性能。</p>
<p>需要的工具在工具箱也可以找到，例如：Simplify Polyline、Simplify Polygon。</p>
<h2 id="·-底图图层-Basemap"><a href="#·-底图图层-Basemap" class="headerlink" title="· 底图图层/Basemap"></a>· 底图图层/Basemap</h2><p>使用底图图层以优化绘制性能，底图图层支持本地硬盘缓存。我们可以把不经常更新的数据作为底图图层，例如衬托在业务数据下的数据图层、影像数据图层等。</p>
<p>如何配置地图图层不啰嗦，点这里看<a href="http://desktop.arcgis.com/zh-cn/desktop/latest/map/working-with-layers/working-with-basemap-layers.htm" target="_blank" rel="noopener">帮助</a></p>
<h2 id="·-隐藏图层或要素"><a href="#·-隐藏图层或要素" class="headerlink" title="· 隐藏图层或要素"></a>· 隐藏图层或要素</h2><p>通过设置图层属性中的可见比例尺范围（Scale Range）和定义查询（Query Defination）来避免绘制不必要的图层或者要素。</p>
<h2 id="·-要素缓存-Feature-Cache"><a href="#·-要素缓存-Feature-Cache" class="headerlink" title="· 要素缓存/Feature Cache"></a>· 要素缓存/Feature Cache</h2><p>ArcMap 要素缓存可以将 ArcMap 当前地图显示中的要素临时存储到本地计算机的内存中。由于从本地内存中检索要素是一个非常快的操作，因此使用要素缓存通常可以提高性能。例如：绘制较大或复杂的数据集；标注、编辑和选择要素；为地图上的多个图层检索相同的要素；使用定义查询来绘制要素。</p>
<h2 id="·-栅格数据金字塔-Pyramid"><a href="#·-栅格数据金字塔-Pyramid" class="headerlink" title="· 栅格数据金字塔/Pyramid"></a>· 栅格数据金字塔/Pyramid</h2><p>改善和缩短显示大型栅格数据集时间的最好方法是创建金字塔，目的在于提高显示速度及降低 CPU 使用率。ArcMap 使用合适的分辨率等级来快速绘制整个数据集。如果不使用金字塔，则必须从磁盘中读取整个数据集，然后将其重采样为更精细的大小。对于镶嵌数据集需要创建概视图（Overview）。</p>
<h2 id="·-布局视图-Layout"><a href="#·-布局视图-Layout" class="headerlink" title="· 布局视图/Layout"></a>· 布局视图/Layout</h2><p>需要打印输出时，查看一下布局视图的数据框的边界。圆角拐角、背景和阴影会降低性能。消除这些影响并将这些属性设置为方形拐角可以提高布局视图中数据框的绘制性能。</p>
<p><br></p>
<p><br></p>
<h1 id="2-地图符号"><a href="#2-地图符号" class="headerlink" title="2 地图符号"></a><strong>2 地图符号</strong></h1><p><br></p>
<h2 id="·-标记符号-Marker-Symbol"><a href="#·-标记符号-Marker-Symbol" class="headerlink" title="· 标记符号/Marker Symbol"></a>· 标记符号/Marker Symbol</h2><p>尽可能使用简单样式标记，避免使用多层符号。</p>
<p>使用图片标记符号来代替晕圈。</p>
<p>尽可能使用简单形状。</p>
<p>将标记符号的大小属性设置为小于 60 磅。</p>
<p>尽可能不使用图片标记符号，特别是数据量较大的时候。当标记符号只有一种颜色时，.emf 文件所提供的性能要好于 .bmp、.png 或 .jpg/.jpeg 文件。但是，当标记符号有两种或更多种颜色时，.png 文件是性能更好的格式。</p>
<p><br></p>
<h2 id="·-线符号-Line-Symbol"><a href="#·-线符号-Line-Symbol" class="headerlink" title="· 线符号/Line Symbol"></a>· 线符号/Line Symbol</h2><p>如果要减少显示时间，简单线符号是最好的选择；制图线作为最常用的线符号，在使用更多选项时绘制得相对缓慢一些。</p>
<p>使用多图层符号时，请避免将不同的符号类型混合在一起。</p>
<p>谨慎使用偏移或虚线样式，因为它们会增加绘制时间。</p>
<p>宽线和带有整饰的线（例如标记和箭头）绘制起来较慢。</p>
<p><br></p>
<h2 id="·-面符号-Fill-Symbol"><a href="#·-面符号-Fill-Symbol" class="headerlink" title="· 面符号/Fill Symbol"></a>· 面符号/Fill Symbol</h2><p>对面进行符号化处理时，没有轮廓的简单填充符号将绘制得最快。</p>
<p>需要在面周围加上轮廓时，应尽量选择简单线符号，其他的线类型（例如制图线、标记线和混列线）会显著增加绘制时间。</p>
<p>与其他符号相同，使用尽可能少的图层来构成填充符号。</p>
<p>特别是带有掩膜图层的点密度填充符号绘制起来更慢，因此应尽量避免使用这种填充符号。</p>
<p>使用线填充符号时，无论是填充还是轮廓，尽量使用简单线。</p>
<p>当图片填充符号只有一种颜色时，.emf 文件所提供的性能要好于 .bmp、.png, 或.jpg/.jpeg 文件。但是，当标记符号有两种或更多种颜色时，.png 文件是性能更好的格式。</p>
<p><br></p>
<p><br></p>
<h1 id="3-地图文本"><a href="#3-地图文本" class="headerlink" title="3 地图文本"></a><strong>3 地图文本</strong></h1><p><br></p>
<h2 id="·-通用"><a href="#·-通用" class="headerlink" title="· 通用"></a><strong>· 通用</strong></h2><p>文本符号与其他类型的符号一样，ArcMap 需要做出的处理决策越少，地图的绘制速度就越快。一般来说，使用注记代替标注可以提高性能。</p>
<p>尽可能地减小文本的大小。非常大的文本符号（例如那些大于 60 磅的文本符号）会增加绘制时间。</p>
<p>符号越复杂，绘制速度越慢。因此，应尽可能少使用文本效果（例如，注释、牵引线、偏移、晕圈、背景和填充方式）。</p>
<p>在文本周围使用阴影，不使用晕圈或掩膜。</p>
<p><br></p>
<h2 id="·-标注"><a href="#·-标注" class="headerlink" title="· 标注"></a><strong>· 标注</strong></h2><p>尽可能简化 SQL 查询和标注放置要求。如果标注文本存储在图层属性表中的单个字段中，绘制标注将非常快。</p>
<p>标注表达式会减慢绘制速度。尽可能避免在绘制时使用标注表达式脚本进行条件判断，或格式化标注字符串，或将多个字段值串连到一个标注字符串中。</p>
<p>尽量为 SQL 查询中的字段建立索引。</p>
<p>谨慎使用标注和要素冲突权重。</p>
<p>直线型标注的绘制速度要快于曲线型标注。</p>
<p>设置标注的显示比例尺范围。地图被缩小时，需要绘制更多的标注，而这需要时间。检查某些标注在较小的比例下是否需要绘制。</p>
<p>“Maplex 标注引擎”拥有比“标准标注引擎”更多的标注放置选项。高级放置决策可能会影响性能。</p>
<p><br></p>
<h2 id="·-注记"><a href="#·-注记" class="headerlink" title="· 注记"></a><strong>· 注记</strong></h2><p>使用 ArcMap 创建注记时，可以存储在地图文档的注记组中，或存储在Geodatabase的注记要素类中。</p>
<p>一般情况下，应该将注记存储在地理数据库中，因为相比地图文档注记，ArcMap 可以更快地访问和显示地理数据库注记。这是推荐的方式。</p>
<p>如果要创建一张地图并且注记文本只应用到当前地图上，那么可以将文本存储到地图文档的一个或多个注记组中。这种情况很少。如果删除了地图，则该注记也被删除，因为其存储在地图文档中。另外，每个添加到注记组的注记都会增大地图文档文件 (.mxd) 的大小。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在Linux上安装ArcGIS许可管理器备忘录]]></title>
      <url>/2015/06/10/DeployAGSLMonLinux/</url>
      <content type="html"><![CDATA[<blockquote>
<p>这篇文章中使用的环境信息：</p>
<p>Red Hat Enterprise Linux Server release 6.4<br>Red Hat Enterprise Linux Server release 5.8<br>ArcGIS License Manager 10.2.2<br>Xmanager 5</p>
</blockquote>
<p><br></p>
<h4 id="★-安装之前一定要了解系统要求，这一步很重要，这里不啰嗦，详情点-这里-http-resources-arcgis-com-en-help-system-requirements-10-2-ArcGIS-10-2-for-Desktop-015100000002000000-。"><a href="#★-安装之前一定要了解系统要求，这一步很重要，这里不啰嗦，详情点-这里-http-resources-arcgis-com-en-help-system-requirements-10-2-ArcGIS-10-2-for-Desktop-015100000002000000-。" class="headerlink" title="★ 安装之前一定要了解系统要求，这一步很重要，这里不啰嗦，详情点 [这里](http://resources.arcgis.com/en/help/system-requirements/10.2/#/ArcGIS_10_2_for_Desktop/015100000002000000/)。"></a><strong>★ 安装之前一定要了解系统要求，这一步很重要，这里不啰嗦，详情点 [这里</strong>](<a href="http://resources.arcgis.com/en/help/system-requirements/10.2/#/ArcGIS_10_2_for_Desktop/015100000002000000/)。" target="_blank" rel="noopener">http://resources.arcgis.com/en/help/system-requirements/10.2/#/ArcGIS_10_2_for_Desktop/015100000002000000/)。</a></h4><p><br></p>
<h1 id="1-准备安装文件"><a href="#1-准备安装文件" class="headerlink" title="1. 准备安装文件"></a>1. 准备安装文件</h1><p>我的Linux服务器是虚拟机，没有光驱，选择ftp上传安装文件。一般在各种linux的发行版中，默认带有的ftp软件是vsftp。</p>
<p>检查vsftpd软件是否安装， <strong># rpm -qa|grep vsftp</strong><br>启动 vsftp 服务，<strong># service vsftpd start</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_vsftp.png" alt=""></p>
<p>使用ftp客户端上传 ArcGIS License Manager （LM）安装包。如果上传的 iso 镜像文件之后使用 mount 命令挂载，其实也可以仅将光盘中 LicenseManager 目录下的 linux 文件夹上传，此文件夹为 LM 的Linux安装包。</p>
<p>包含如下几个文件（夹）：</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_Setup.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="2-创建账户"><a href="#2-创建账户" class="headerlink" title="2. 创建账户"></a>2. 创建账户</h1><p>ArcGIS License Manager 不允许 root 账户安装，因此要创建一个其它账户，例如：arcgis</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_CreateArcGIS.png" alt=""></p>
<blockquote>
<p>PS : 如果使用 root 账户直接安装，则会遇到错误提示：</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_RootError.png" alt=""></p>
</blockquote>
<p><br></p>
<p><br></p>
<h1 id="3-创建-Trusted-Storage目录并赋权"><a href="#3-创建-Trusted-Storage目录并赋权" class="headerlink" title="3. 创建 Trusted Storage目录并赋权"></a>3. 创建 Trusted Storage目录并赋权</h1><p>在安装 ArcGIS License Manager 之前，需要手动创建用于存储许可 Trusted Storage File (TSF) 的目录，具体目录为：“/usr/local/share/macrovision/storage” </p>
<p>创建目录：</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_mkdir.png" alt=""></p>
<p>为目录赋权：</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_chmod.png" alt=""></p>
<blockquote>
<p>如果不创建这个目录而直接安装 LM 程序，就会遇到 Fatal Error 提示：</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_GrantError.png" alt=""></p>
</blockquote>
<p><br></p>
<p><br></p>
<h1 id="4-安装-ArcGIS-License-Manager"><a href="#4-安装-ArcGIS-License-Manager" class="headerlink" title="4. 安装 ArcGIS License Manager"></a>4. 安装 ArcGIS License Manager</h1><p><br></p>
<p>有图形界面模式和静默模式两种安装模式，建议选择前者：</p>
<h2 id="Option-1-图形界面安装"><a href="#Option-1-图形界面安装" class="headerlink" title="Option 1 图形界面安装"></a><strong>Option 1 图形界面安装</strong></h2><p>安装 ArcGIS License Manager 需要 X Windows Display的支持来进行图形界面的交互。尽管我们可以选择使用静默安装和静默授权，但是在许可管理过程中，还是会用到图形界面。强烈建议安装个 Xmanager，来连接Linux主机。</p>
<p>设置DISPLAY环境变量 :<br>例如： <strong>$ export DISPLAY=<em>192.168.100.115</em>:0.0</strong></p>
<p>运行 Setup 文件开始安装，建议使用精细模式（Verbose Mode），这样如果安装失败，我们可以通过运行过程中的消息判断问题的所在。例如，没有创建必要的目录，没有安装必要地包，没有足够的权限，等等问题。</p>
<p><strong>$ ./Setup -v</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_Setup.png" alt=""></p>
<p>稍等片刻，即弹出界面：</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_GraphicWindows.png" alt=""></p>
<p>后面按照向导，下一步即可，此处省略100字……</p>
<p><br></p>
<h2 id="Option-2-静默安装"><a href="#Option-2-静默安装" class="headerlink" title="Option 2 静默安装"></a><strong>Option 2 静默安装</strong></h2><p>如果选择静默安装也可以，例如：</p>
<p><strong>$ ./Setup -m silent -v -l Yes</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_Silence.png" alt=""></p>
<blockquote>
<p><strong>如果需要了解安装ArcGIS 许可管理器的选项：</strong></p>
<p>-m  silent/gui  静默安装/图形界面<br>-v   精细模式<br>-h   帮助<br>-e   示例<br>静默安装专用选项：<br>-l    Yes/No 是否同意许可条款<br>-d   安装目录</p>
</blockquote>
<p><br></p>
<p><br></p>
<h1 id="5-授权许可"><a href="#5-授权许可" class="headerlink" title="5. 授权许可"></a>5. 授权许可</h1><p>LM安装完成之后，需要进行许可的授权，事先将自己的许可文件 *.prvs 上传到Linux主机中。</p>
<p><br></p>
<p>仍然建议GUI mode 授权，运行LM安装目录中的 SoftwareAuthorizationLS 程序：</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_Authorization.png" alt=""></p>
<p>稍后弹出界面：</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployAGSLMonLinux_Authorization2.png" alt=""></p>
<p>后面按照向导，下一步即可，可以参考windows的授权手册，此处省略100字……</p>
<p><br></p>
<p>运行 LSAdmin 程序可以打开 License Manger ，查看和管理许可。</p>
<p><br></p>
<p><br></p>
<p><br></p>
<h1 id="相关资源整理"><a href="#相关资源整理" class="headerlink" title="相关资源整理"></a>相关资源整理</h1><p>FAQ:  What are the best practices when installing and troubleshooting Esri software on Linux?</p>
<p><a href="http://support.esri.com/em/knowledgebase/techarticles/detail/42921" target="_blank" rel="noopener">http://support.esri.com/em/knowledgebase/techarticles/detail/42921</a></p>
<p>HowTo:  Silently authorize ArcGIS License Manager 10.x on Linux</p>
<p><a href="http://support.esri.com/es/knowledgebase/techarticles/detail/38412" target="_blank" rel="noopener">http://support.esri.com/es/knowledgebase/techarticles/detail/38412</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> License </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[羽化效果的HeatMap]]></title>
      <url>/2015/06/09/FeatureHeatMap/</url>
      <content type="html"><![CDATA[<p>用采样点制作热力图是个非常常见的需求。热力图可以给地图的阅读者直观的信息，下面就看看如何在 ArcGIS Pro 中做一个漂亮的HeatMap。</p>
<p><em>PS: 这是通过点密度插值生成的栅格的静态表达方式，区别于 ArcGIS Pro 自带的动态HeatMap的渲染器哦。</em></p>
<p><br></p>
<h1 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h1><p>准备好采样点数据，当然是量大更优。我这里用了全球地震点数据，大约有 21W+ 的数据量。像这一类的数据可以从一些提供公开数据的网站获取，例如 <a href="http://earthquake.usgs.gov/earthquakes/feed/v1.0/csv.php" target="_blank" rel="noopener">USGS</a> 。</p>
<p><img src="http://kikitamap.com/images/blogImg/FeatureHeatMap_Points.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h1><p>使用 ArcGIS 中的密度分析工具可以从点数据直接生成密度栅格，工具位于 ArcToolbox —— Spatial Analyst —— Density 工具集下。这里我采用了 Kernel Density 。</p>
<p><img src="http://kikitamap.com/images/blogImg/FeatureHeatMap_Density.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h1><p>制作一个自己喜欢的热力色带，最边缘的颜色使用透明色，这样就有“羽化”的效果。</p>
<p><img src="http://kikitamap.com/images/blogImg/FeatureHeatMap_ColorRamp.png" alt=""></p>
<p>应用色带之后：</p>
<p><img src="http://kikitamap.com/images/blogImg/FeatureHeatMap_ColorRampresult.png" alt=""></p>
<p><br></p>
<p>如有需要，可以进一步为图层设置透明：</p>
<p><img src="http://kikitamap.com/images/blogImg/FeatureHeatMap_Transparent.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
            <tag> ArcGIS Pro </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为Runner做一张有质感的图]]></title>
      <url>/2015/06/05/RunnerRoutes/</url>
      <content type="html"><![CDATA[<p>如今，通过 GPS 我们可以轻松采集到自己的足迹，Runner们用各种手机App记录跑步路线也再平常不过。如果我们有大量的足迹信息，也可以试试 ArcGIS Pro 的渲染能力，来看看自己的 Favourite 线路如何分布。</p>
<p><br></p>
<p>我在 ArcGIS Online 上 down 到了某位 Runner 的足迹信息，当然大家也可以用自己的，gpx，txt，kml 等常见的 GPS Tracklog 文件都是可以直接导入成为 ArcGIS 支持的格式。根据文件格式的不同，你可能会需要 GPX to Feature ， Add XY Event layer， KML to Layer ，Points to Line 等这些工具的辅助，得到路线数据，表示路线的线数据当然越多越好。</p>
<p><br></p>
<p>ArcGIS Pro 的符号化中增加了符号的透明效果，这一点完胜 ArcMap 的渲染效果。你想问ArcMap什么效果？如下，好像有点惨不忍睹：</p>
<p><img src="http://kikitamap.com/images/blogImg/RunnerRoutes_ArcMap.png" alt=""></p>
<p><br></p>
<p>由于ArcGIS Pro 中的新增的符号透明不是图层的整体透明，而是每个Feature的符号透明，就会产生色彩叠加的效果。直观上说，就是符号叠加越密集的位置，色彩会越深，给人以渐变色彩的热力图的感受。</p>
<p><br></p>
<p>#<strong>怎么做？</strong></p>
<p><br></p>
<p>##<strong>1.</strong><br>加入数据，GPS路线数据和深灰色主题的底图服务。</p>
<p><img src="http://kikitamap.com/images/blogImg/RunnerRoutes_Basemap.png" alt=""></p>
<p><br></p>
<p>##<strong>2.</strong> </p>
<p>选个喜欢的颜色，并进入 more。</p>
<p><img src="http://kikitamap.com/images/blogImg/RunnerRoutes_Symbol.png" alt=""></p>
<p><br></p>
<p>##<strong>3.</strong> </p>
<p>设置个透明百分比。</p>
<p><img src="http://kikitamap.com/images/blogImg/RunnerRoutes_Transparent.png" alt=""></p>
<p><br></p>
<p>##<strong>4.</strong> </p>
<p>Done !</p>
<p><img src="http://kikitamap.com/images/blogImg/RunnerRoutes_Done.png" alt=""></p>
<p><br><br>无需任何高级的分析，所见即所得。相比周围，明显这条路是这位 Runner 最经常挥洒汗水的一条……</p>
<p><img src="http://kikitamap.com/images/blogImg/RunnerRoutes_Favorite.png" alt=""></p>
<p><br></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
            <tag> ArcGIS Pro </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Web Mercator 公开的小秘密]]></title>
      <url>/2015/05/29/SecretofWebMercator/</url>
      <content type="html"><![CDATA[<p>网上已经有好多作者都不吝笔墨，写了好多有关 Web Mercator这个坐标系的前世今生。多搜罗多摄入，我们会得到很多有用的信息。今天讨论到 3758，3857，102100，900913…… 这些ID又一石激起千层浪，看来整理总结下还是有点必要。</p>
<p><br></p>
<h1 id="Web-Mercator-如何定义？"><a href="#Web-Mercator-如何定义？" class="headerlink" title="Web Mercator 如何定义？"></a>Web Mercator 如何定义？</h1><p><br></p>
<p> 我们知道，地理数据的坐标系一般有两大类，一是地理坐标系(GCS)，是经纬度单位的椭球坐标系；二是投影坐标系(PCS)，是平面直角坐标系。</p>
<p>投影坐标系（PCS）的定义一般会包含两方面的定义信息：<br>（1）基准面/Datum — 与GCS相应<br>（2）投影方法/Projection Method</p>
<p><br></p>
<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p><strong>Web Mercator 是一个投影坐标系统，其基准面是 WGS 1984 。</strong></p>
<p><br></p>
<p>那么，第一个问题，<em>WGS 1984 是什么？</em></p>
<p>“ 世界大地坐标系是美国国防部制图局（Defence Mapping Agency， DMA）为统一世界大地坐标系统，实现全球测量标准的一致性，定义用于制图、大地、导航的坐标基准。它包括标准地球坐标框架、用于处理原始观测数据的标准椭球参考面（即基准和参考椭球）和定义标准海平面的重力等势面（大地水准面）。……”（摘自《大地坐标系统及其应用》）</p>
<p>在上面一段中可以知道，定义一个坐标系绝对是一个复杂浩大的数学工程。 我们经常听说的 WGS 1984 （或 WGS 84）就是其中一个世界大地坐标系统。我们经常使用的 GPS 的坐标参考系统也是它。</p>
<p>WGS 1984 的具体定义参数：</p>
<blockquote>
<p>GCS_WGS_1984<br>WKID: 4326 Authority: EPSG</p>
<p>Angular Unit: Degree (0.0174532925199433)<br>Prime Meridian: Greenwich (0.0)<br>Datum: D_WGS_1984<br>  Spheroid: WGS_1984<br>    Semimajor Axis: 6378137.0<br>    Semiminor Axis: 6356752.314245179<br>    Inverse Flattening: 298.257223563</p>
</blockquote>
<p>通过参数描述，我们知道 WGS 1984 是一个长半轴(a)为6378137，短半轴（b）为6356752.314245179 的椭球体，扁率(f)为298.257223563，f=(a-b)/a 。</p>
<p><img src="http://kikitamap.com/images/blogImg/SecretofWebMercator_Speriod.png" alt=""></p>
<p><br></p>
<h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p><strong>Web Mercator 坐标系使用的投影方法不是严格意义的墨卡托投影，而是一个被 EPSG（European Petroleum Survey Group）称为</strong>伪墨卡托<strong>的投影方法，这个伪墨卡托投影方法的大名是 Popular Visualization Pseudo Mercator，PVPM。</strong> 看起来就觉得这个投影方法不是很严谨的样子，大众化的？受欢迎的？可视化伪墨卡托投影……</p>
<p>因为这个坐标系统是 Google Map 最先使用的，或者更确切地说，是Google 最先发明的。在投影过程中，将表示地球的参考椭球体近似的作为正球体处理（正球体半径 R = 椭球体半长轴 a）。这也是为什么在 ArcGIS 中我们经常看到这个坐标系叫 <strong>WGS 1984 Web Mercator (Auxiliary Sphere)</strong>。Auxiliary Sphere 就是在告知你，这个坐标在投影过程中，将椭球体近似为正球体做投影变换，虽然基准面是WGS 1984 椭球面。</p>
<p><img src="http://kikitamap.com/images/blogImg/SecretofWebMercator_Geodesic.png" alt=""></p>
<p>后来，Web Mercator 在 Web 地图领域被广泛使用，这个坐标系就名声大噪。尽管这个坐标系由于精度问题一度不被GIS专业人士接受，但最终 EPSG 还是给了 WKID:3857。</p>
<p>下面放一张在 EPSG 官网上找到的3857坐标的具体参数介绍，供参考：</p>
<p><img src="http://kikitamap.com/images/blogImg/SecretofWebMercator_Name.png" alt=""></p>
<p><br></p>
<p><br></p>
<h1 id="Web-Mercator-的阴暗面"><a href="#Web-Mercator-的阴暗面" class="headerlink" title="Web Mercator 的阴暗面"></a>Web Mercator 的阴暗面</h1><p><br></p>
<p>Web Mercator 无论是来自Google程序员的谬误，还是为了简化换算的有意为之，现在它都已经名正言顺的成为了 Web 底图的最受欢迎平面坐标系。</p>
<p>问题又来了，<strong>为什么这么受欢迎的坐标系还会受到GIS大咖的诟病？</strong></p>
<p>拒绝给这个坐标系分配 坐标系ID 的原话是这样的：</p>
<p><strong>“</strong> The projected coordinate reference system originally lacked an official spatial reference identifier (SRID), and the Geodesy subcommittee of the OGP’s Geomatics committee (also known as EPSG) refused to provide it with one, declaring “We have reviewed the coordinate reference system used by Microsoft, Google, etc. and believe that it is technically flawed. We will not devalue the EPSG dataset by including such inappropriate geodesy and cartography.”  <strong>”</strong></p>
<p>这不是EPSG 冷酷无情无理取闹，从技术角度看是有原因的。简而言之，主要原因在于基准面被篡改后，本来是等角投影的Mercator坐标变换算法，不再等角了，而是近似等角，也就是出现角度变形。这种变形势必影响了坐标的精度，如下是某位GIS专家给出的概要说明（闪亮的最后一条）：</p>
<p><img src="http://kikitamap.com/images/blogImg/SecretofWebMercator_darkside.png" alt=""></p>
<p>如果你想进一步关心细节，想知道这位专家对 Web Mercator 的 dark side 的深入见解，点<a href="http://hydrometronics.com/downloads/Web%20Mercator%20-%20Non-Conformal,%20Non-Mercator%20%28notes%29.pdf" target="_blank" rel="noopener">这里</a>看看。</p>
<p><br></p>
<p><br></p>
<h1 id="不再混乱的-ID"><a href="#不再混乱的-ID" class="headerlink" title="不再混乱的 ID"></a>不再混乱的 ID</h1><p><br></p>
<p>也是由于GIS专业人士的质疑，这个坐标系的ID经历了曲折的过程，好多做Web开发的朋友都感到困惑。简单地顺一下：</p>
<p><strong>OpenLayers:900913</strong>     由于得不到官方的认证ID，Google为Web Mercator 任性地制定了这个ID，自娱自乐，也祝大家玩的开心……下面可不是我编的。</p>
<blockquote>
<p>i think 900913 is great.<br>9-g<br>0-o<br>0-o<br>9-g<br>1-l<br>3-e<br>get it? 900913 is equal to google. THAT’S AMAZING ! =-)</p>
</blockquote>
<p><strong>EPSG:3785</strong>  这是 EPSG 在 2008 年给 Web Mercator 设立的WKID，但是这个坐标系的基准面是正圆球，不是WGS 1984。 存在了一段时间后被弃用。</p>
<p><strong>EPSG:3857</strong>  EPSG为 Web Wercator 最终设立的WKID，也就是现在我们常用的Web 地图的坐标系，并且给定官方命名 “<strong>WGS 84 / Pseudo-Mercator</strong>“。</p>
<p><strong>ESRI:102113</strong>   Esri内部使用ID，与 EPSG:3785 相应。已被弃用。</p>
<p><strong>ESRI:102100</strong>   Esri内部使用ID，与 EPSG:3857 相应。</p>
<p>因此，细心地话，会发现在 ArcGIS Server 的REST 服务页面中，Web Mercator 的空间参考会记做： <strong>102100(3857)</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/SecretofWebMercator_3857.png" alt=""></p>
<p><br></p>
<p><br></p>
<p><br></p>
<p>这些东西其实一直都是公开的，博主没有生产这些小秘密，只是小秘密的搬运工。</p>
<p><br></p>
<p>我把自己看过的资源放在下面，共享之，文中提到的已经做链接了地，下面就不重复列举：</p>
<p><a href="http://en.wikipedia.org/wiki/Web_Mercator" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Web_Mercator</a></p>
<p><a href="http://blogs.esri.com/esri/arcgis/2014/09/25/what-does-the-nga-web-mercator-advisory-mean-for-esri-defense-and-intelligence-users/" target="_blank" rel="noopener">http://blogs.esri.com/esri/arcgis/2014/09/25/what-does-the-nga-web-mercator-advisory-mean-for-esri-defense-and-intelligence-users/</a></p>
<p><a href="http://blogs.esri.com/esri/arcgis/2012/03/05/mercators-500th-birthday/" target="_blank" rel="noopener">http://blogs.esri.com/esri/arcgis/2012/03/05/mercators-500th-birthday/</a></p>
<p><a href="http://www.sharpgis.net/post/2008/05/15/SphericalWeb-Mercator-EPSG-code-3785" target="_blank" rel="noopener">http://www.sharpgis.net/post/2008/05/15/SphericalWeb-Mercator-EPSG-code-3785</a></p>
<p><a href="http://crschmidt.net/blog/archives/243/google-projection-900913/" target="_blank" rel="noopener">http://crschmidt.net/blog/archives/243/google-projection-900913/</a></p>
<p><a href="http://forums.esri.com/Thread.asp?c=93&amp;f=984&amp;t=288607" target="_blank" rel="noopener">http://forums.esri.com/Thread.asp?c=93&amp;f=984&amp;t=288607</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux下安装绿色版Oracle客户端备忘录]]></title>
      <url>/2015/05/26/LinuxOracleClient/</url>
      <content type="html"><![CDATA[<blockquote>
<p>环境及版本信息：<br>远程服务器- Redhat 6.4；Oracle 11g x64； ArcGIS Server 10.2；<br>本地机器- Windows 8.1</p>
</blockquote>
<p><br><br>开始安装 12c 和 11g 的客户端，总是不满足系统需求，各种提示缺包，所以还是使用绿色版省心点。<br><br></p>
<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>将Oracle绿色版客户端安装文件上传到 Linux 服务器（oracle-instantclient11.2-basic-11.2.0.1.0-1.x86_64.zip） ，并解压到自己指定的目录，如 Client。</p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxOracleClient_unzip.png" alt=""></p>
<p><br></p>
<h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><p>由于安装Oracle客户端的目的是为了 ArcGIS Server 能够访问数据库服务器，所以对Client目录赋予 ArcGIS Server 账户（<strong>arcgis</strong>）的755权限。</p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxOracleClient_Grant.png" alt=""></p>
<p><br></p>
<h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><p>修改环境变量，使得ArcGIS Server 能够使用这个客户端。</p>
<p>环境变量文件位于ArcGIS Server 安装目录中 usr文件夹下的 init_user_param.sh 。</p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxOracleClient_Env.png" alt=""></p>
<p><br></p>
<p>编辑init_user_param.sh，将Oracle客户端所在的目录配置到对应的环境变量中，保存退出。PS，不要忘记删除前面的<strong>＃</strong>……　默认所有的变量信息是被注释掉的。</p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxOracleClient_Edit.png" alt=""></p>
<p><br></p>
<h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><p>重启 ArcGIS Server 服务。</p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxOracleClient_Restart.png" alt=""></p>
<p><br></p>
<h1 id="5"><a href="#5" class="headerlink" title="5"></a>5</h1><p>然后到 ArcGIS Server Manger中或者 ArcGIS Desktop 的 Server Connection中去注册数据库试试。</p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxOracleClient_Datastore.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决Linux系统中缺少Xvfb包的问题]]></title>
      <url>/2015/05/08/LackofPackonLinux/</url>
      <content type="html"><![CDATA[<p>上一篇文中写了在 Linux上安装 ArcGIS Server前的准备工作，最后一步是环境检测，只有所有项都通过才可以安装 ArcGIS Server。</p>
<p>不幸的是，第一次其实没有通过环境监测，提示系统中缺少了Xvfb包，具体的检测结果如下：</p>
<p><img src="http://kikitamap.com/images/blogImg/LackofPackonLinux_Xvfb.png" alt=""></p>
<p>检测报告中提示了解决方法，参考技术文章 <a href="http://support.esri.com/en/knowledgebase/techarticles/detail/40860" target="_blank" rel="noopener">40860</a>：</p>
<p>但是这篇文章只告诉我们缺包了，需要安装一个Xvfb包，没有说明包的获取与安装过程等，下面我就bala一下喽。</p>
<p><br><br><br></p>
<h1 id="1-下载Xvfb包到主机"><a href="#1-下载Xvfb包到主机" class="headerlink" title="1 . 下载Xvfb包到主机"></a>1 . 下载Xvfb包到主机</h1><p>用 <strong>wget</strong> 命令下载xorg-x11-server-Xvfb-1.10.4-6.el6.x86_64.rpm包到主机。</p>
<blockquote>
<p><strong>wget <a href="http://vault.centos.org/6.2/os/x86_64/Packages/xorg-x11-server-Xvfb-1.10.4-6.el6.x86_64.rpm" target="_blank" rel="noopener">http://vault.centos.org/6.2/os/x86_64/Packages/xorg-x11-server-Xvfb-1.10.4-6.el6.x86_64.rpm</a></strong></p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/LackofPackonLinux_Download.png" alt=""></p>
<p><br><br><br></p>
<h1 id="2-运行安装Xvfb包"><a href="#2-运行安装Xvfb包" class="headerlink" title="2 .  运行安装Xvfb包"></a>2 .  运行安装Xvfb包</h1><blockquote>
<p><strong>yum localinstall xorg-x11-server-Xvfb-1.10.4-6.el6.x86_64.rpm</strong></p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/LackofPackonLinux_Install.png" alt=""></p>
<p><br><br><br></p>
<h1 id="3-执行环境检测"><a href="#3-执行环境检测" class="headerlink" title="3 . 执行环境检测"></a>3 . 执行环境检测</h1><p>所有检测通过即可安装 ArcGIS Server 程序：</p>
<p><img src="http://kikitamap.com/images/blogImg/LackofPackonLinux_Done.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 下安装 ArcGIS Server 前的准备工作备忘录]]></title>
      <url>/2015/05/08/LinuxArcGISServerDeployment/</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>安装环境： ArcGIS for Server Linux 10.2.2 ， Redhat 6</strong></p>
</blockquote>
<p>因为是在网络虚拟机中安装部署，首先需要一个远程Linux的客户端，这里使用 putty，可以在官方的 <a href="http://www.putty.org/" target="_blank" rel="noopener">www.putty.org</a> 下载，但是貌似网站被墙了，我也放了一份在<a href="http://download.csdn.net/detail/kikitamoon/8675531" target="_blank" rel="noopener">我的资源</a>中。</p>
<p><strong>1） 运行 putty.exe ,登陆linux服务器</strong>：</p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_Putty.png" alt=""></p>
<p><strong>2） 输入用户名密码，登入服务器：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_Login.png" alt=""></p>
<p><strong>3） 查询主机的 IP 地址：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_IP.png" alt=""></p>
<p><strong>4） 查询 hostname：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_hostname.png" alt=""></p>
<p><strong>5） 编辑hosts文件，映射IP地址和主机名：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_Mapping.png" alt=""></p>
<p><strong>6） 创建 ArcGIS Server 账户：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_CreatAcount.png" alt=""></p>
<blockquote>
<p>备注：<br>/etc/group 中存储了用户组信息，格式如下：<br>用户组名:组密码:GID:组内帐号（多个帐号用逗号分隔）<br>/etc/passwd 中存储了用户账户信息，格式如下：<br>用户名:密码:UID:GID:用户信息:HOME目录路径:用户shell<br>其中UID为0则是用户root，1～499为系统用户，500以上为普通用户</p>
</blockquote>
<p><strong>7） 为ArcGIS Server 账户设置密码：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_Password.png" alt=""></p>
<p><strong>8）在home目录下创建ArcGISServer目录，授权 ArcGIS Server账户对文件夹的权限：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_chmod.png" alt=""></p>
<p><strong>9）文件句柄和进程的硬限制要求</strong></p>
<p>要增加软限制和硬限制，需要使用超级用户访问权限编辑 /etc/security/limits.conf 文件。例如，添加以下四行：</p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_Limits.png" alt=""></p>
<p><strong>10） 将安装程序上传到Linux主机</strong></p>
<p>Linux主机是个网络虚拟机，也没有光驱，就用上传安装包（iso镜像）的方式安装了。一般在各种linux的发行版中，默认带有的ftp软件是vsftp。</p>
<p>检查vsftpd软件是否安装， # <strong>rpm -qa|grep vsftp</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_vsftp.png" alt=""></p>
<p>启动 vsftp 服务，# <strong>service vsftpd start</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_ServiceStart.png" alt=""></p>
<p>其它命令：<br>      停止ftp：service vsftpd stop<br>      重启ftp：service vsftpd restart</p>
<p>软后用ftp客户端连接服务器即可，这里我用了以前一直用的 FileZilla.</p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_FileZilla.png" alt=""></p>
<p><strong>11） 挂载 ISO映像</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_mount.png" alt=""><br>PS：第一次mount没写完整的路径信息，文件没找到，请忽略，看最后一行。</p>
<p><strong>12）执行安装前的环境检测</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/LinuxArcGISServerDeployment_check.png" alt=""></p>
<p>各项检测通过，可以安装 ArcGIS Server 了。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> Linux </tag>
            
            <tag> ArcGIS Enterprise </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ASCII 栅格的显示]]></title>
      <url>/2015/04/21/MappingASCIIRaster/</url>
      <content type="html"><![CDATA[<p>今天刚好有人问到一个有关 ASCII 栅格数据的问题，这里梳理下，用最简单的方式极速理解。</p>
<p><br></p>
<blockquote>
<p><strong>什么是ASCII栅格？</strong>      就是用ASCII文本记录的栅格数据……</p>
<p><strong>怎么得到ASCII栅格？</strong>   比如使用工具 Raster to ASCII……</p>
</blockquote>
<p><br></p>
<p><br></p>
<p>一般在 ASCII 栅格的文件头中我们会看到这几行：</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingASCIIRaster_TXT.png" alt=""></p>
<p><strong>ncols</strong>  和 <strong>nrows</strong>   表示这份数据的行列数，这份数据是10×10。</p>
<p><strong>xllcorner</strong> 和 <strong>yllcorner</strong> 表示的就是栅格的左下角（low left）角点的坐标。</p>
<p><strong>cellsize</strong> 也就是像元大小，表示每个正方形单元的尺寸。</p>
<p>通过这几个值不就确定了栅格数据的范围了吗？嗯，确定了。</p>
<p><br></p>
<p>看图说话：</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingASCIIRaster_Demo.png" alt=""></p>
<p><br></p>
<p>文本文件下面的值就对应到每个格子里的像元值：</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingASCIIRaster_Value.png" alt=""></p>
<p><br><br><br><br>我想你不会再有any疑问了……</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Editor for OSM, 10.3.x Desktop]]></title>
      <url>/2015/04/01/ArcGISEditorforOSM103xDesktop/</url>
      <content type="html"><![CDATA[<p>对于好多地图爱好者，由于保（众）密（所）严（周）格（知），获取高精度的数据不是个容易事，幸亏有了可爱的 <a href="http://www.openstreetmap.org/" target="_blank" rel="noopener">OpenStreetMap</a> 。</p>
<p> ArcGIS Editor for OpenStreetMap 是一个免费开源的 ArcGIS Desktop 插件。上个月Esri官网提供可用于Desktop 10.3 的最新版本插件。</p>
<p><strong>下载页面：<a href="http://www.arcgis.com/home/item.html?id=75716d933f1c40a784243198e0dc11a1&amp;_ga=1.40580837.631931551.1427269542" target="_blank" rel="noopener">ArcGIS Editor for OSM, 10.3.x Desktop</a></strong></p>
<p>相关资源自取：<a href="https://github.com/Esri/arcgis-osm-editor/wiki" target="_blank" rel="noopener"><strong>点这里</strong></a></p>
<p><br><br><br></p>
<p>下载之后，有32位和64位两个安装包，如果你安装了Desktop的64位后台GP补丁，就把64位的插件程序也安装上。</p>
<p>ArcToolbox中多了好多工具……</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISEditorforOSM103xDesktop_Toolset.png" alt=""></p>
<p><br><br><br></p>
<p>这里我就推荐两个最常用的工具。<br><br><br><br></p>
<p><strong>Download OSM Data</strong></p>
<p>下载的范围，可以通过手工填写坐标指定，也可以根据ArcMap现有的图层范围进行指定，这个方便又好用。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISEditorforOSM103xDesktop_Extent.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISEditorforOSM103xDesktop_Download.png" alt=""></p>
<p><br><br><br></p>
<p><strong>Load OSM Data</strong></p>
<p>如果你已经从 OpenStreetMap 下载了 *.osm 数据文件，那就用这个工具导入 GDB 即可。简单到没什么可说的，请看图。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISEditorforOSM103xDesktop_Load.png" alt=""></p>
<p><br><br><br></p>
<p>有个关键问题，注意：</p>
<blockquote>
<p><strong>How much of the OSM data can I download?</strong></p>
<p>The ArcGIS Editor for OpenStreetMap uses the OpenStreetMap API, which limits downloads to <strong>an area of 0.5 by 0.5 degrees or 50,000 nodes</strong>, whichever is reached first. This is usually more than enough to fill an area for editing.</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间统计（五）诊断回归分析结果]]></title>
      <url>/2015/03/31/RegressionAnalysisResult/</url>
      <content type="html"><![CDATA[<p>为了理解、解释、预测某个问题，我们会进行回归分析。上一篇中提到了回归模型中的因变量和解释变量的概念，用一组解释变量来建模解释因变量，但事实上，选择一组优质的解释变量并不是那么容易。通常我们会根据一些常识、理论基础、某些研究、专家的意见、参考文献等等选择一组解释变量，来进行解释变量的筛选。在ArcGIS Desktop中，当我们使用 普通最小二乘法（OLS）执行回归分析的时候，工具会进行诊断测试，提供一个汇总报告，帮助我们诊断回归分析的质量。这篇文章咱们就围绕这个话题展开——回归分析的结果诊断。</p>
<p><br></p>
<p><br></p>
<h1 id="六项检查"><a href="#六项检查" class="headerlink" title="六项检查"></a>六项检查</h1><p><br></p>
<blockquote>
<p><a href="http://resources.arcgis.com/en/help/main/10.2/index.html#//005p00000053000000" target="_blank" rel="noopener">帮助文档</a>中也有相关的内容，但是觉得相对还是比较晦涩，我就结合Esri Global UC的视频介绍一下。内容不尽相同，但是对学习回归分析是有帮助的。</p>
</blockquote>
<p><br></p>
<p><br></p>
<h2 id="Check-1-解释变量与因变量具有预期的关系否？"><a href="#Check-1-解释变量与因变量具有预期的关系否？" class="headerlink" title="Check #1  解释变量与因变量具有预期的关系否？"></a>Check #1  解释变量与因变量具有预期的关系否？</h2><p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check1.png" alt=""></p>
<p>每个解释变量都会有一个系数，系数具有+/-号，来表示解释变量与因变量的关系。从工具的得到的报告中，我们看到的系数的正负，每个解释变量应该是我们期望的关系。如果有非常不符合逻辑的系数，我们就应该考虑剔除它了。</p>
<p>当然，有时也可能得到与常识不同的结论。举个例子，假如我们在研究森林火灾，我们通常认为降雨充沛的区域火灾的发生率会相对较低，也就是所谓的负相关，但是，这片森林火灾频发的原因可能是闪电雷击，这样降雨量这个解释变量可能就不是常识中的负相关的关系了。</p>
<p>因此，我们除了验证解释变量的系数与先验知识是否相符外，还有继续结合其他项检查继续诊断，从而得出更可靠的结论。</p>
<p><br></p>
<p><br></p>
<h2 id="Check-2-解释变量对模型有帮助否？"><a href="#Check-2-解释变量对模型有帮助否？" class="headerlink" title="Check #2  解释变量对模型有帮助否？"></a>Check #2  解释变量对模型有帮助否？</h2><p>解释变量对模型有无帮助说的就是解释变量是否有显著性，同样我们可以从 OLS 工具的汇总报表中得出些结论。</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check2.png" alt=""></p>
<p>那如何了解这些解释变量是否有<strong>显著性</strong>呢？</p>
<p>OLS 工具除了对模型中的每个解释变量计算一个系数外，还执行统计检验以确定这些解释变量是否对模型有所帮助。</p>
<p>如果解释变量的系数为零（或非常接近零），我们认为这个解释变量对模型没有帮助，统计检验就用来计算系数为零的概率。如果统计检验返回一个小概率值（p 值），则表示系数为零的概率很小。如果概率小于 0.05，OLS 汇总报告上 <strong>概率（Probability）</strong> 旁边的一个 <strong>星号（*）</strong> 表示相关解释变量对模型非常重要。换句话说，其系数在 95% 置信度上具有统计显著性。</p>
<p>利用空间数据在研究区域内建模的关系存在差异是非常常见的，这些关系的特征就是不稳定。我们就需要通过 <strong>稳健概率（robust probability）</strong> 了解一个解释变量是否具有统计显著性。 OLS 汇总报告中所包括的另一项统计检验是用于不稳定性的 Koenker（Koenker 的标准化 Breusch-Pagan）统计量。</p>
<p>你也可以忽略上面说的，傻瓜方法就是：<strong>确保解释变量的概率、稳健概率列中带星号</strong>。</p>
<p><br></p>
<p><br></p>
<h2 id="Check-3-残差是否有空间聚类？"><a href="#Check-3-残差是否有空间聚类？" class="headerlink" title="Check #3  残差是否有空间聚类？"></a>Check #3  残差是否有空间聚类？</h2><p>残差在空间上应该是随机分布的，而不应该出现聚类。这项检查我们可以使用 <strong>空间自相关工具（Spatial Autocorrelation Tool）</strong>工具进行检查。</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check3.png" alt=""></p>
<p><br></p>
<p><br></p>
<h2 id="Check-4-模型是否出现了倾向性？"><a href="#Check-4-模型是否出现了倾向性？" class="headerlink" title="Check #4  模型是否出现了倾向性？"></a>Check #4  模型是否出现了倾向性？</h2><p>我们以前听过政治老师说过，不要戴着“有色眼镜”看人！也可能是历史老师？这不重要。。同样，回归分析模型中，也不要带有“成见”，不能具有倾向性，否则，这不是个客观合理的模型。</p>
<p>我们都知道正态分布是个极好的分布模式，如果我们正确的构建了回归分析模型，那么模型的残差会符合完美的正态分布，其图形为钟形曲线。</p>
<p>当模型出现偏差时，可能我们看到的图形也是诡异的，这样我们就无法完全信任所预测的结果。</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check4.png" alt=""></p>
<p><br></p>
<p><strong>如何检验呢？</strong></p>
<p>在 OLS 汇总报告中，有一个具有统计显著性的 Jarque-Bera 诊断表示模型是否出现偏差。如下图中是没有偏差的模型，如果有偏差，在篮框中会出现星号。</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check4JBS.png" alt=""></p>
<p>因此，判断自己的模型没有偏差的最直观的方法就是：<strong>Jarque-Bera 诊断中没有星号</strong>。</p>
<p><br></p>
<p><strong>解决偏差！</strong></p>
<p>为了解决模型偏差，最好为所有模型变量创建一个<strong>散点图矩阵</strong>。因变量和一个解释变量之间存在非线性关系，这是出现模型偏差的常见原因。这些在散点图矩阵中看起来像一条曲线。</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check4Scatter.png" alt=""></p>
<p>OLS 是一种线性回归方法，假设您正在建模的关系是线性关系。如果不是，可尝试变换您的变量，以查看这样做是否可创建出线性更明显的关系。常见变换包括对数变换和指数变换。</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check4Transform.png" alt=""></p>
<p>另外，散点矩阵图还可以显示出数据异常值。要了解一个异常值是否正在影响您的模型，请尝试在含有和不含有异常值的情况下分别运行 OLS，从而了解异常值对模型性能的更改程度，以及移除异常值是否会校正模型偏差。</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check4Outlier.png" alt=""></p>
<p><br></p>
<p><br></p>
<h2 id="Check-5-解释变量中存在冗余吗？"><a href="#Check-5-解释变量中存在冗余吗？" class="headerlink" title="Check #5  解释变量中存在冗余吗？"></a>Check #5  解释变量中存在冗余吗？</h2><p>在我们建模的过程中，应尽量去选择表示各个不同方面的解释变量，也就是尽量避免传达相同或相似信息的解释变量。要清楚，引入了冗余变量的模型是不足以信任的。</p>
<p>那么问题来了，<strong>如何判断是否存在冗余解释变量？</strong></p>
<p>OLS工具会为每个变量计算膨胀因子（Variance Inflation Factor，VIF），VIF 值是对变量冗余度的一种度量，可辅助决定在不削弱模型解释能力的情况下可从中移除哪些变量。根据经验，<strong>VIF 值超过 <em>7.5</em> 就有问题</strong>。如果有两个或更多解释变量的 VIF 值超过了 7.5，应该一次移除其中一个变量并重新运行 OLS，直到冗余消失。记住，不要全部移除掉哦！</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check5.png" alt=""></p>
<p><br></p>
<p><br></p>
<h2 id="Check-6-评估模型的性能"><a href="#Check-6-评估模型的性能" class="headerlink" title="Check #6  评估模型的性能"></a>Check #6  评估模型的性能</h2><p>最后需要做的是，评估模型的性能。 <strong>矫正R<sup>2</sup>值</strong> 是评估解释变量对因变量建模的重要度量。</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysisResult_Check6.png" alt=""></p>
<p>这项检查应该放到<strong>最后</strong>。一旦我们通过了前面的所有检验，接下来就可以进行评估矫正R<sup>2</sup>值。</p>
<p>R<sup>2</sup>值的范围介于 0 和 1 之间，以百分比形式表示。假设正在为犯罪率建模，并找到一个通过之前所有五项检查的模型，其校正 R<sup>2</sup> 值为 0.65。这样就可以了解到模型中的解释变量说明犯罪率是 65%（更技术一些来说就是，模型解释了犯罪率因变量中 65% 的变化量）。在有些科学领域，能够解释复杂现象的 23% 就会让人兴奋不已。在其他领域，一个R<sup>2</sup>值可能需要更靠近 80% 或 90% 才能引起别人的注意。不管采用哪一种方式，校正 R2 值都会帮我们判断自己模型的性能。</p>
<p>另一项辅助评估模型性能的重要诊断是修正的 Akaike 信息准则 /Akaike’s information criterion (AICc)。AICc 值是用于比较多个模型的一项有用度量。例如，可能希望尝试用几组不同的解释变量为学生的分数建模。在一个模型中仅使用人口统计变量，而在另一个模型选择有关学校和教室的变量，如每位学生的支出和师生比。只要所有进行比较的模型的因变量（在本示例中为学生测试分数）相同，我们就可以使用来自每个模型的 AICc 值确定哪一个的表现更好。<strong>模型的 AICc 值越小，越适合观测的数据。</strong></p>
<p><br></p>
<p>有关回归分析结果诊断就说这么多了，希望看起来不是那么枯燥无味……</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Statistics </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间统计（四）回归分析探索]]></title>
      <url>/2015/03/20/RegressionAnalysis/</url>
      <content type="html"><![CDATA[<p>在上一篇文章中，我提到的这些工具都是用于研究数据有什么样的空间模式，哪里聚类？哪里是热点？哪里有冷点？哪里有异常值？等等，总之研究的是“生米煮成熟饭”的结果状态。</p>
<p>而“空间关系建模”工具箱中的工具，更倾向于研究 Why？ 例如，为什么会出现这种情况？ 或者说什么导致了这种情况。这时我们就可以使用工具进行回归分析，如：普通最小二成法（OLS） 和 地理加权回归（GWR）。</p>
<p><br><br><br></p>
<p>你可能会问，<strong>为什么要进行回归分析？</strong>帮助文档中回归分析基础这一章写的最好，比较贴近读者，而不是冰冷的字典，我把回归分析的应用示例搬过来帮助理解，以下内容整理自<a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#/na/005p00000023000000/" target="_blank" rel="noopener">帮助文档</a>。</p>
<ol>
<li><p>对某一现象建模，以更好地了解该现象并有可能基于对该现象的了解来影响政策的制定以及决定采取何种相应措施。基本目标是测量一个或多个变量的变化对另一变量变化的影响程度。示例：了解某些特定濒危鸟类的主要栖息地特征（例如：降水、食物源、植被、天敌），以协助通过立法来保护该物种。（<strong>更好地了解</strong>）</p>
</li>
<li><p>对某种现象建模以预测其他地点或其他时间的数值。基本目标是构建一个持续、准确的预测模型。示例：如果已知人口增长情况和典型的天气状况，那么明年的用电量将会是多少？（ <strong>建模预测</strong>）</p>
</li>
</ol>
<ol>
<li>您还可以使用回归分析来深入探索某些假设情况。假设您正在对住宅区的犯罪活动进行建模，以更好地了解犯罪活动并希望实施可能阻止犯罪活动的策略。开始分析时，您很可能有很多问题或想要检验的假设情况：（ <strong>探索检验假设</strong>）</li>
</ol>
<ul>
<li>“破窗理论”表明公共财产的破坏（涂鸦、被毁坏的建筑物等）可招致其他犯罪行为。破坏财产行为与入室盗窃之间是否存在正关系？</li>
<li>非法使用毒品与盗窃行为之间存在某种关系吗（吸毒成瘾的人有可能通过偷取财物来维持他们吸毒的习惯吗）？</li>
<li>窃贼恃强凌弱吗？老人或女性户主家庭居多的住宅区内发生盗窃的可能性更高吗？</li>
<li>是住在富有的小区内更容易遭受盗窃，还是住在贫穷的小区内更容易遭受盗窃？<br>您可以通过回归分析来探索这些关系并解答您的问题。</li>
</ul>
<p>总之，通过回归分析，我们可以对空间关系进行建模、检查和探究；回归分析还可帮助我们解释所观测到的空间模式背后的诸多因素。</p>
<p>在所有的回归方法中，OLS 最为著名。而且，它也是所有空间回归分析的正确起点。它可以尝试了解或预测（早逝/降雨）的变量或过程提供一个全局模型；而且，它可创建一个回归方程来表示该过程。地理加权回归 (GWR) 是若干空间回归方法中的一种，被越来越多地用于地理及其他学科。通过对数据集中的各要素拟合回归方程，GWR 为您要尝试了解/预测的变量或过程提供了一个局部模型。若使用得当，这些方法可提供强大且可靠的统计数据，以对线性关系进行检查和估计。</p>
<p>例如如下是两个变量之间存在正、负关系以及无关系的情况：</p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysis_Relations.png" alt=""></p>
<p><br><br><br><br><br><br><br></p>
<p>通过上文，我们有了对回归分析的基本的印象，下面我们就来深入进去，看看 <strong>回归分析是如何实现的</strong>？</p>
<p>回归分析是一个复杂的过程。在这个过程中，我们利用一个或多个解释变量对因变量进行最佳预测。说到底就是一个包含因变量、解释变量、系数、残差的数学公式，像下面的样子。</p>
<p><img src="http://img.blog.csdn.net/20150320143734273" alt=""></p>
<p><br><br><br></p>
<p><strong>什么是因变量？</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysis_Dependent.png" alt=""></p>
<p>等式的左边是 <strong>因变量（Dependent Variable）</strong> ，记为 <strong>Y</strong>，表示我们要研究或者预测的对象。通常我们会先给定一些已知的 Y 值，用于构建回归方程，这些已知的 Y 值称为 <strong>观测值</strong>。</p>
<p><br><br><br></p>
<p><strong>什么是解释变量？</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysis_Explanatory.png" alt=""></p>
<p>等式的右边的 X ，称为 <strong>自变量</strong> 或 <strong>解释变量（Explanatory Variables）</strong>。因变量是解释变量的函数。到这里，可能有的同学就晕了。<br>同样，举个栗子。我们想研究人们肥胖的诸多原因，想找到肥胖与收入、健康食品摄入、教育水平等等因素是否有关联。在这个例子中，肥胖就是因变量（Y），收入、健康食品摄入、教育水平等这些因素即为解释变量（X）。</p>
<p><br><br><br></p>
<p><strong>还有重要的回归系数呢！</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysis_Coefficient.png" alt=""></p>
<p>在方程中，我们还发现有些 β 值，称为 <strong>回归系数（Coefficient）</strong> 。表示解释变量与因变量之间的关系强度和类型，每个解释变量都有一个对应的回归系数。当关系为正时，关联系数的符号也为正。当关系为负时，关联系数的符号也为负。如果关系很强，则系数也相对较大。如果关系较弱，则关联系数接近于零。</p>
<p>其中，<img src="http://kikitamap.com/images/blogImg/RegressionAnalysis_Intercept.png" alt=""> 为回归<strong>截距</strong>(Intercept)。 它表示所有自变量（解释变量）均为零时因变量的预期值。</p>
<p><br><br><br></p>
<p><strong>绝对不能忘记的残差！</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/RegressionAnalysis_Residual.png" alt=""></p>
<p> ε称为 <strong>残差（Residual）</strong>或 <strong>随机误差项</strong>，是因变量不能解释的部分。回归工具可以构造出能够对那些已知的 y 值作出最佳预测的方程。不过，预测值很少会和观测值完全匹配。y 的观测值与预测值之差称为残差。回归方程中的残差可用于确定模型的拟合程度。残差较大表明模型拟合效果较差。</p>
<p><br><br><br><br><br><br><br></p>
<p>回归模型的构建是一个迭代过程，在该过程中，需要找出有效的自变量来了解因变量，且需要运行回归工具来确定哪些变量为有效的预测因子，然后需要反复执行变量移除和/或添加操作，直到找出最佳的回归模型。<br>虽然构建模型的过程通常是探索性的，但它绝不是“盲目的搜查”。我们应通过了解相关理论、请教该领域内的专家并凭借一些常识性信息来确定可能的解释变量。在分析之前，我们应该清楚每个可能的解释变量和因变量之间的关系并能够对其正确与否作出判断，而且，对于这些关系不匹配的模型，我们应该表示质疑。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Statistics </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间统计（三）聚类分布制图]]></title>
      <url>/2015/03/17/MappingCluster/</url>
      <content type="html"><![CDATA[<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_Toolset.png" alt=""></p>
<p>这组工具中包含众所周知的热点分析工具，通过这个工具我们能捕获到大量数据中的热点和冷点，对我们分析问题有很大的帮助。例如，在犯罪分析中，我们可以研究哪些位置犯罪频繁并且聚集，对增设警力有重要的辅助作用。工具集中的其他工具也有类似的作用，都是通过执行聚类分析来识别具有统计显著性的热点、冷点和空间异常值的位置。</p>
<p>依照惯例，我们还是 one by one 来看。</p>
<h1 id="Similarity-Search"><a href="#Similarity-Search" class="headerlink" title="Similarity Search"></a><strong>Similarity Search</strong></h1><p>相似搜索工具，顾名思义，工具根据要素属性确定哪些候选要素与输入要素最相似或者最不相似。</p>
<p>举个栗子：</p>
<p>我希望找到与圣地亚哥5岁以下儿童、未成年人、65岁以上老年人人数分布相似的城市：</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_SanDiego.png" alt=""></p>
<p>工具中我做如下配置：</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_Env.png" alt=""></p>
<p>结果在这里，其中 Similarly Rank 为 1 的即为三个年龄属性最相似的城市 Orange：</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_SimilarCity.png" alt=""></p>
<p>匹配方法参数中提供了3种算法，分别为：属性值、等级属性值或属性剖面（余弦相似性）。</p>
<blockquote>
<p><strong>可能的应用</strong>：</p>
<ul>
<li>人力资源经理可能希望能够证明公司的工资范围。找出在大小、生活成本、市容建筑方面相似的城市后，她便可以查看这些城市的工资范围，从而查看他们是否在此行列。</li>
<li>犯罪分析师希望搜索数据库以查看某罪行是否属于较重犯罪形式或有重罪趋势。</li>
<li>课外健身计划在 A 城极其成功。计划提倡者期望找到与其计划推广的候选城市具有相似特征的其他城市。</li>
<li>执法机构用此方法揭露毒品种植地或生产地。标识具有相似特征的地方可能有助于制定未来的搜索目标。</li>
<li>大型零售商不仅拥有数个成功店铺，也有少数业绩不佳的店铺。找到一些具有相似人口特征和环境特征（交通便利性、知名度以及商业互补性等等）的地方有助于标识新店的最佳位置。</li>
</ul>
</blockquote>
<p><br></p>
<h1 id="Grouping-Analysis"><a href="#Grouping-Analysis" class="headerlink" title="Grouping Analysis"></a><strong>Grouping Analysis</strong></h1><p>我们在学习研究事物时，有事需要对事物进行归类从而帮助理解与分析。在ArcGIS 中，分析分组分析工具就是来进行这个逻辑分类过程，它会执行一个分类过程来查找数据中存在的自然聚类。要素相似性是基于您为分析字段参数指定的一组特性，同时还可以包括空间属性或空间-时间属性。</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_GroupAnalysis.png" alt=""></p>
<p>在这个工具中有个重要的参数—— Spatial Constrains，用于设置分组过程是否受某种空间关系约束，具体可选的方法如下：</p>
<ul>
<li>CONTIGUITY_EDGES_ONLY — 共享一条边的相连的面才属于同一个组。</li>
<li>CONTIGUITY_EDGES_CORNERS — 共享一条边或一个折点的相连面才属于同一个组。</li>
<li>DELAUNAY_TRIANGULATION — 同一个组中的要素至少具有一个与该组中的另一要素共用的自然邻域。自然邻域关系基于 Delaunay 三角测量。从概念上讲，Delaunay 三角测量可以根据要素质心创建不重叠的三角网。每个要素是一个三角形结点，具有公共边的结点被视为邻域。</li>
<li>K_NEAREST_NEIGHBORS — 同一个组中的要素将相互邻近；每个要素至少是该组中某一其他要素的邻域。邻域关系基于最近的 K 要素，您可以在此为“相邻要素的数目”参数指定整型值 K。</li>
<li>GET_SPATIAL_WEIGHTS_FROM_FILE — 空间关系和可选的时态关系通过空间权重文件 (.swm) 进行定义。使用“生成空间权重矩阵”工具创建空间权重矩阵文件。</li>
<li>NO_SPATIAL_CONSTRAINT — 只能使用数据空间邻域法对要素进行分组。要素不是必须在空间或时间上互相接近，才能属于同一个组。</li>
</ul>
<blockquote>
<p><strong>可能的应用</strong>：</p>
<ul>
<li>假设您拥有来自所在州周围农场的沙门氏菌样本，以及包括类型/类别、位置和日期/时间在内的属性。为了更好地了解细菌如何传播和扩散，您可以使用分组分析工具将样本划分为各个“爆发”。您可能决定使用空间-时间约束，因为同一次爆发的样本会在空间和时间上会非常接近，而且也会与相同类型/类别的细菌关联。确定分组之后，可以使用其他空间模式分析工具，比如标准差椭圆、平均中心或近邻来分析每一次爆发。</li>
<li>如果您收集了有关动物观察方面的数据，以便更好地了解它们的领地，分组分析工具可能很有帮助。例如，了解鲑鱼在不同生命阶段的聚集地点和时间，可以帮助您规划保护区，以帮助确保成功繁育。</li>
<li>作为一名农学家，您可能想将研究领域内的不同土壤进行分类。对通过一系列样本发现的土壤特征使用分组分析可以帮助识别出明显的、空间上相邻的土壤类型的聚类。<br>按购买方式、人口统计特征和/或旅行方式对客户进行分组，可以帮助您为公司产品制订有效的营销策略。</li>
<li>城市规则师常常需要将各个城市划分成不同的邻域，以便有效地定位公共设施、促进地方能动性和提高社区参与度。对城市街区的物理和人口统计特征使用分组分析，可以帮助规划师确定具有相似物理和人口统计特征并且在空间上相邻的城市区域。</li>
<li>每当对聚合的数据进行分析时，生态谬误都是一个众所周知的统计推断问题。通常，用于分析的聚合方案对我们想要分析的内容没有任何关系。例如，人口普查数据是根据人口分布而聚合，而人口分布情况可能不是用来进行火灾分析的最佳选择。针对与目前分析问题准确相关的一组属性，将可能的最小聚合单位划分成同质区域，是降低聚合偏差和避免生态谬误的一种有效方法。</li>
</ul>
</blockquote>
<p><br></p>
<h1 id="Hot-Spot-Analysis-Getis-Ord-Gi"><a href="#Hot-Spot-Analysis-Getis-Ord-Gi" class="headerlink" title="Hot Spot Analysis (Getis-Ord Gi*)"></a><strong>Hot Spot Analysis (Getis-Ord Gi*)</strong></h1><p>热点分析工具是个 Most Popular 工具，经常会被用到，通过此工具，我们可以来识别有统计显著性的热点和冷点。例如，警察局会调查哪个区域是刑事案件的高发区？这就是一个典型的热点分析例子。如下图，黑点表示报警位置，其中属性表中包含一个报案次数的字段，得到了犯罪热点。从而警察局可以考虑在热点位置增设警力。</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_HotPots.png" alt=""></p>
<p>此工具的工作方式为：查看邻近要素环境中的每一个要素。因此，仅仅一个孤立的高值不会构成热点，说白了就是，单个要素以及它的邻居都是高值才算是热点。在热点分析工具中，z 得分和 p 值都是统计显著性的度量，用于逐要素地判断是否拒绝零假设。置信区间（Gi_Bin字段） +3 到 -3 中的要素反映置信度为 99% 的统计显著性，置信区间 +2 到 -2 中的要素反映置信度为 95% 的统计显著性，置信区间 +1 到 -1 中的要素反映置信度为 90% 的统计显著性；而置信区间 0 中要素的聚类则没有统计学意义。</p>
<p>如果要素的 z 得分高且 p 值小，则表示有一个高值的空间聚类。如果 z 得分低并为负数且 p 值小，则表示有一个低值的空间聚类。z 得分越高（或越低），聚类程度就越大。如果 z 得分接近于零，则表示不存在明显的空间聚类。</p>
<p><strong>关于此工具的建议：</strong></p>
<ul>
<li>输入要素类是否至少包含 30 个要素？如果少于 30 个要素，则结果不可靠。</li>
<li>您选择的空间关系的概念化是否合适？对于此工具，建议使用固定距离范围方法</li>
</ul>
<blockquote>
<p> <strong>可能的应用</strong>：</p>
<ul>
<li>应用领域包括：犯罪分析、流行病学、投票模式分析、经济地理学、零售分析、交通事故分析以及人口统计学。其中的一些应用示例包括：</li>
<li>疾病集中爆发在什么位置？</li>
<li>何处的厨房火灾在所有住宅火灾中所占的比例超出了正常范围？</li>
<li>紧急疏散区应位于何处？</li>
<li>峰值密集区出现于何处/何时？</li>
<li>我们应在哪些位置和什么时间段分配更多的资源？</li>
</ul>
</blockquote>
<p><br></p>
<h1 id="Optimized-Hot-Spot-Analysis"><a href="#Optimized-Hot-Spot-Analysis" class="headerlink" title="Optimized Hot Spot Analysis"></a><strong>Optimized Hot Spot Analysis</strong></h1><p>在最近几个版本的 ArcGIS 中多了一个 “优化的热点分析工具”，我们如何理解这个工具呢？打个比方，好比“数码相机自动根据光线、拍摄主体与背景对比度的读数，来确定合适的光圈、快门速度和焦点”，优化的热点分析是根据输入数据的特征派生参数，从而获得产生最佳热点结果的设置，然后执行热点分析工具。</p>
<p>简而言之，如果拿到单反，使用“优化的热点分析工具”好比把拍照模式调成了“全自动”，而使用“热点分析工具”好比把拍照模式调成“手动”，热点分析工具允许我们完全控制所有参数选项。运行优化的热点分析工具并记录其使用的参数设置，有助于优化设置热点分析 (Getis-Ord Gi*) 工具的参数。</p>
<p>打开这个工具，我们会发现，这个工具太可爱了，除了输入和输出参数，其他所有参数都是可选的，都可以不填！ 果然是全自动模式，傻瓜相机版热点分析。但是，这几个参数决定了优化热点分析的方式，为了“照片”更美，还是需要了解些东西的，一起来看看：</p>
<p><strong>分析字段</strong>：当要分析的数据中存在一个字段存储了采样值，我们想了解这个采样值的高值与低值的聚集区域，那分析字段就需要选择这个字段。</p>
<p>当我们的数据不具有这样的采样值，并且我们希望研究的是点的计数，也就是研究：哪里存在很多点？哪里存在很少点？这时，选择一种<strong>聚合方案</strong>就变得重要了。</p>
<p>工具中提供了三种聚合方案：</p>
<p>1） COUNT_INCIDENTS_WITHIN_FISHNET_POLYGONS：采用渔网聚合，渔网的网格大小由工具根据点的距离关系决定。</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_Fishnet.png" alt=""></p>
<p>2） COUNT_INCIDENTS_WITHIN_AGGREGATION_POLYGONS：提供聚合面以覆盖事件聚合面参数中的事件点数据。计算每个面内的事件数。例如：计算加州每个城市的消防站的聚集情况。</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_PolygonAggr.png" alt=""></p>
<p>3）SNAP_NEARBY_INCIDENTS_TO_CREATE_WEIGHTED_POINTS：邻近事件将聚合在一起，从而创建单个加权点。各点的权重值是该位置的聚合事件数。</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_Points.png" alt=""></p>
<p>无论是哪种方法，在工具的日志中会提供一个研究这些数据聚类的最优的距离，类似：</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_Log.png" alt=""></p>
<p><br></p>
<h1 id="Cluster-and-Outlier-Analysis-Anselin-Local-Moran’s-I"><a href="#Cluster-and-Outlier-Analysis-Anselin-Local-Moran’s-I" class="headerlink" title="Cluster and Outlier Analysis (Anselin Local Moran’s I)"></a>Cluster and Outlier Analysis (Anselin Local Moran’s I)</h1><p>给定一组加权要素，使用 Anselin Local Moran’s I 统计量来识别具有统计显著性的热点、冷点和空间异常值。</p>
<p>热点分析(Getis-Ord Gi<em>) 工具也是查找热点和冷点位置的有效工具。但是，<em>*只有</em></em>聚类和异常值分析(Anselin Local Moran’s I) 工具可以识别具有统计学上的显著性的空间异常值（高值由低值围绕或低值由高围绕的值）。</p>
<p>输出要素类中包含：<strong>Local Moran’s I 指数、z 得分、p 值、聚类/异常值类型 (COType)</strong>。</p>
<p>如果要素的 z 得分是一个较高的正值，则表示周围的要素拥有相似值（高值或低值）。输出要素类中的 COType 字段会将具有统计显著性的高值聚类表示为 HH，将具有统计显著性的低值聚类表示为 LL。<br>如果要素的 z 得分是一个较低的负值（如，小于 -3.96），则表示有一个具有统计显著性的空间数据异常值。输出要素类中的 COType 字段将指明要素是否是高值要素而四周围绕的是低值要素 (HL)，或者要素是否是低值要素而四周围绕的是高值要素 (LH)。如下图可以帮助理解：</p>
<p><img src="http://kikitamap.com/images/blogImg/MappingCluster_HHLL.png" alt=""></p>
<p>COType 字段将始终指明置信度为 95% 的统计显著性聚类和异常值。只有统计显著性要素在 COType 字段中具有值。</p>
<blockquote>
<p><strong>可能的应用</strong><br>聚类和异常值分析(Anselin Local Moran’s I) 工具可识别高值密度、低值密度和空间异常值。还可帮助您解决如下问题：</p>
<ul>
<li>研究区域中的富裕区和贫困区之间的最清晰边界在哪里？</li>
<li>研究区域中存在可以找到异常消费模式的位置吗？</li>
<li>研究区域中意想不到的糖尿病高发地在哪里？<br>可在经济学、资源管理、生物地理学、政治地理学和人口统计等许多领域中应用此工具。</li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Statistics </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NEW！获取 ArcGIS Pro 与 ArcGIS Desktop 60天试用许可]]></title>
      <url>/2015/03/06/ArcGISPro60DayFreetrial/</url>
      <content type="html"><![CDATA[<p>春节之后，美国esri官网给了我们一些小惊喜，千呼万唤的 ArcGIS Pro 的试用许可终于放出来了。与ArcGIS Desktop Advanced 一起提供 60天的试用，同时附赠了 200 个 credit。</p>
<p>ArcGIS Pro 使用了全新的 Named User 方式授权许可，我们可以多个设备同时在线使用。</p>
<blockquote>
<p>PS：如果你希望得到 ArcGIS Desktop的使用许可，这篇文章也能帮到你。</p>
</blockquote>
<p>下面就说说申请途径和激活方式。</p>
<p><br><br><br></p>
<h1 id="First-，找到Esri官方试用地址"><a href="#First-，找到Esri官方试用地址" class="headerlink" title="First ，找到Esri官方试用地址"></a>First ，找到Esri官方试用地址</h1><p><a href="http://www.esri.com/software/arcgis/arcgis-for-desktop/free-trial" target="_blank" rel="noopener">http://www.esri.com/software/arcgis/arcgis-for-desktop/free-trial</a></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_SignUp.png" alt=""></p>
<p><br><br><br></p>
<h1 id="2-填写姓名、邮箱地址，用于接收验证邮件"><a href="#2-填写姓名、邮箱地址，用于接收验证邮件" class="headerlink" title="2 填写姓名、邮箱地址，用于接收验证邮件"></a>2 填写姓名、邮箱地址，用于接收验证邮件</h1><p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_EmailSent.png" alt=""></p>
<p><br><br><br></p>
<h1 id="3-收取邮件，激活链接"><a href="#3-收取邮件，激活链接" class="headerlink" title="3 收取邮件，激活链接"></a>3 收取邮件，激活链接</h1><p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_EmailSample.png" alt=""></p>
<p><br><br><br></p>
<h1 id="4-创建ArcGISOnline账户"><a href="#4-创建ArcGISOnline账户" class="headerlink" title="4 创建ArcGISOnline账户"></a>4 创建ArcGISOnline账户</h1><p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_OnlineAccount.png" alt=""></p>
<p><br><br><br></p>
<h1 id="5-设置组织信息，并保存继续"><a href="#5-设置组织信息，并保存继续" class="headerlink" title="5 设置组织信息，并保存继续"></a>5 设置组织信息，并保存继续</h1><p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_Organization.png" alt=""></p>
<p><br><br><br></p>
<h1 id="6-获取应用程序"><a href="#6-获取应用程序" class="headerlink" title="6 获取应用程序"></a>6 获取应用程序</h1><p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_GetApp.png" alt=""></p>
<p><br><br><br></p>
<h1 id="7-下载-ArcGIS-Pro-程序"><a href="#7-下载-ArcGIS-Pro-程序" class="headerlink" title="7 下载 ArcGIS Pro 程序"></a>7 下载 ArcGIS Pro 程序</h1><blockquote>
<p><strong> PS：</strong></p>
<p>ArcGIS Pro 暂时只有英文版，注意切换语言。</p>
<p><strong>ArcGIS Desktop 的程序也可以在这里下载，授权号码就在右边的位置，与以往授权方式不变。</strong><br>如果需要了解如何授权 ArcGIS Desktop ，还是看我 <strong><a href="http://blog.csdn.net/kikitamoon/article/details/40708133" target="_blank" rel="noopener">以前写的一篇</a></strong>，从第6步开始看即可。</p>
</blockquote>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_EVA.png" alt=""></p>
<p><br><br><br></p>
<h1 id="8-转到-ArcGIS-Online"><a href="#8-转到-ArcGIS-Online" class="headerlink" title="8 转到 ArcGIS Online"></a>8 转到 ArcGIS Online</h1><p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_Turn2Online.png" alt=""></p>
<p><br><br><br></p>
<h1 id="9-在组织中管理-ArcGIS-Pro-的许可"><a href="#9-在组织中管理-ArcGIS-Pro-的许可" class="headerlink" title="9 在组织中管理 ArcGIS Pro 的许可"></a>9 在组织中管理 ArcGIS Pro 的许可</h1><p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_ManageLicense.png" alt=""></p>
<p><br><br><br></p>
<h1 id="10-分配许可给指定用户（Named-User）"><a href="#10-分配许可给指定用户（Named-User）" class="headerlink" title="10 分配许可给指定用户（Named User）"></a>10 分配许可给指定用户（Named User）</h1><p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_Asign.png" alt=""></p>
<p>↓↓↓</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_Asign2.png" alt=""></p>
<p>↓↓↓</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_Asign3.png" alt=""><br><br><br><br><br><br><br><br></p>
<h1 id="Final，开启-ArcGIS-Pro-登录账号"><a href="#Final，开启-ArcGIS-Pro-登录账号" class="headerlink" title="Final，开启 ArcGIS Pro 登录账号"></a>Final，开启 ArcGIS Pro 登录账号</h1><p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_ProLaunch.png" alt=""></p>
<p>↓↓↓</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_SignIn.png" alt=""></p>
<p>↓↓↓</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISPro60DayFreetrial_SignIn2.png" alt=""></p>
<p>现在就开始 ArcGIS Pro 之旅喽。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> License </tag>
            
            <tag> ArcGIS Pro </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间统计（二）分析模式 B]]></title>
      <url>/2015/03/05/AnalysisPatternsB/</url>
      <content type="html"><![CDATA[<p><em>Updated: 2017-10-11</em><br><em>修改了文中表意含糊的语句，增加了更多解释性描述。</em></p>
<p><br></p>
<p>这一篇具体看分析模式工具集中的具体工具，整理这一篇的目的，不是要读者了解每个工具的背后使用了多么高级的算法，运用了多么庞大的公式，而是一起了解这些工具究竟可以为我们研究什么样的空间数据分布模式，当需要探索数据的空间性质时，知道应该如何去应用这些分析工具。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_Toolset.png" alt=""></p>
<p><br></p>
<h2 id="Average-Nearest-Neighbor"><a href="#Average-Nearest-Neighbor" class="headerlink" title="Average Nearest Neighbor"></a>Average Nearest Neighbor</h2><p>平均最近邻工具，计算每个要素中心与其最邻近要素中心的距离，然后求取所有最近邻距离的平均值，然后用这个观测平均值与随机分布的期望平均值进行比较，从而可以反应数据的空间分布是聚合的还是分散的。 </p>
<p>Average Nearest Neighbor 工具将返回五个值：</p>
<ul>
<li>观测的平均距离 / Observed Mean Distance</li>
<li>期望的平均距离 / Excepted Mean Distance</li>
<li>最近邻指数 / Nearest Neighbor Ratio</li>
<li>z得分 / z-score</li>
<li>p值 / p-value</li>
</ul>
<p>其中，最近邻指数是观测平均值与期望平均值的比率，最近邻如果最近邻比率小于1，则表现的模式为聚类。如果指数大于1，则表现的模式趋向于扩散。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_AverageNearest.png" alt="最近邻比率"></p>
<p>在HTML报告文件中可以更显见的了解数据的趋势：</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_AverageNearestSummary.png" alt="报告"></p>
<blockquote>
<p>可能的应用：</p>
<ul>
<li>评估竞争或领地：量化并比较固定研究区域中的多种植物种类或动物种类的空间分布；比较城市中不同类型的企业的平均最近邻距离。</li>
<li>监视随时间变化的更改：评估固定研究区域中一种类型的企业的空间聚类中随时间变化的更改。</li>
<li>将观测分布与控制分布进行比较：在木材分析中，如果给定全部可收获木材的分布，则您最好将已收获面积图案与可收获面积图案进行比较，以确定砍伐面积是否比期望面积更为聚类。</li>
</ul>
</blockquote>
<p><br></p>
<h2 id="Spatial-Autocorrelation"><a href="#Spatial-Autocorrelation" class="headerlink" title="Spatial Autocorrelation"></a>Spatial Autocorrelation</h2><p>空间自相关 (Global Moran’s I) 工具同时根据要素位置和要素的属性值来度量空间自相关。在给定一组要素及相关属性的情况下，评估所表达的模式是聚类模式、离散模式还是随机模式。</p>
<p>此工具将返回五个值：</p>
<ul>
<li>Moran’s I指数 / Moran’s I Index</li>
<li>预期指数 / Expected Index</li>
<li>方差 / Variance</li>
<li>z得分 / z-score</li>
<li>p值 / p-value</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_SpatialAutocorrelationReport.png" alt=""></p>
<p><strong>Moran’s I 指数</strong>：</p>
<p>Global Moran‘s I 工具计算所评估属性的<strong>均值/Mean</strong>和<strong>方差/Variance</strong>。然后，将每个要素值减去均值，从而得到与均值的<strong>偏差/Deviation</strong>。 将所有相邻要素（例如位于指定距离范围内的要素）的偏差值相乘，从而得到<strong>叉积/Cross Production</strong>。Global Moran’s I 统计量的分子是这些叉积的和。</p>
<p>如果数据在空间上趋于聚类，则Moran’s I指数为正值；如果空间上高值排斥其他高值而分散存在，则Moran’s I 指数为负值；如果叉积的正负值趋于平衡，则指数趋于0。</p>
<p>在使用这个工具的时候，<strong>注意</strong>以下几点：</p>
<ul>
<li>输入要素的记录数至少30个，少于30结果不可靠。</li>
<li>选择的适当的概念化空间关系，具体根据自己的数据参考前一篇。</li>
</ul>
<blockquote>
<p>可能的应用</p>
<ul>
<li>通过查找距离（即空间自相关最强的位置对应的距离），可为各种空间分析方法确定合适的邻近距离。</li>
<li>度量种族或民族分离随时间推移的总体趋势 - 分离程度是逐渐增强还是逐渐减弱？</li>
<li>总结某种观点、疾病或趋势随空间和时间变化的传播情况 - 观点、疾病或趋势是保持隔离和集中，还是传播开并变得更加分散？</li>
</ul>
</blockquote>
<p><br></p>
<h2 id="Incremental-Spatial-Autocorrelation"><a href="#Incremental-Spatial-Autocorrelation" class="headerlink" title="Incremental Spatial Autocorrelation"></a>Incremental Spatial Autocorrelation</h2><p>增量自相关工具会去测量一系列的空间自相关，并且可以创建Z得分折线图。Z得分反映空间聚类的程度，峰值Z得分表示聚类最明显的距离。<br>这些峰值能做什么呢？我们可以将这些峰值作为其他工具（例如热点分析，将来会说到）的必要参数，例如距离范围，距离半径等等。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_Incremental.png" alt=""></p>
<p>以下面的数据为例：</p>
<p>我欲研究下面几个城市的人口分布情况：</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_SamplePoints.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_SamplePoint2.png" alt=""></p>
<p><img src="http://img.blog.csdn.net/20150305091915238" alt=""></p>
<p>第一个峰值位于大约 250000 处。当显示多个具有统计显著性的峰值时（例如，本示例数据中有两个峰值），聚类在这些距离处均很明显。选择与感兴趣的分析比例对应的峰值距离，我们通常选择第一个具有统计显著性的峰值。</p>
<p><br></p>
<h2 id="High-Low-Clustering-Getis-Ord-General-G"><a href="#High-Low-Clustering-Getis-Ord-General-G" class="headerlink" title="High/Low Clustering (Getis-Ord General G)"></a>High/Low Clustering (Getis-Ord General G)</h2><p>高/低聚类 (General G) 统计的零假设规定被研究的要素值不存在空间聚类。当返回的 p 值较小且在统计学上显著，则可以拒绝零假设。如果零假设被拒绝，则 z 得分的符号将变得十分重要。如果 z 得分值为正数，则观测的 General G 指数会比期望的 General G 指数要大一些，表明属性的高值将在研究区域中聚类。如果 z 得分值为负数，则观测的 General G 指数会比期望的 General G 指数要小一些，表明属性的低值将在研究区域中聚类。</p>
<p>当存在完全均匀分布的值并且要查找高值的异常空间峰值时，首选高/低聚类(Getis-Ord General G)工具。遗憾的是，高值和低值同时聚类时，它们倾向于彼此相互抵消。如果在高值和低值同时聚类时测量空间聚类，则使用空间自相关工具。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_HighLow.png" alt=""></p>
<p>“高/低聚类”工具可返回五个值：General G 观测值、General G 期望值、方差、z 得分以及 p 值。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_HighLowReport.png" alt=""></p>
<blockquote>
<p>可能的应用：</p>
<ul>
<li>在访问急症室的次数中查找出现的异常峰值，可能表明在局部或区域的健康问题的爆发。</li>
<li>比较在城市中不同种类零售业的空间模式，利用比较购物的方式来了解哪类行业充满竞争性（如汽车经销商）以及哪类行业拒绝竞争（如健康中心/健身房）。</li>
<li>汇总空间现象聚类的程度以检查不同时期或不同位置的变化。例如，众所周知的城市及其人口聚类。使用高/低聚类分析时，可以随时间来比较某个城市的人口聚类的程度（城镇发展以及密集度的分析）。</li>
</ul>
</blockquote>
<p><br></p>
<h2 id="Multi-Distance-Spatial-Cluster-Analysis-Ripley’s-K-Function"><a href="#Multi-Distance-Spatial-Cluster-Analysis-Ripley’s-K-Function" class="headerlink" title="Multi-Distance Spatial Cluster Analysis (Ripley’s K Function)"></a>Multi-Distance Spatial Cluster Analysis (Ripley’s K Function)</h2><p>基于 Ripley’s K 函数的多距离空间聚类分析工具是另外一种分析事件点数据的空间模式的方法。Ripley’s K 函数可表明要素质心的空间聚集或空间扩散在邻域大小发生变化时是如何变化的。</p>
<p>如果有兴趣研究要素的聚类/扩散如何相对于不同距离（不同的分析规模）进行变化，可以使用此工具。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsB_MultiDistance.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Statistics </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间统计（二）分析模式 A]]></title>
      <url>/2015/03/05/AnalysisPatternsA/</url>
      <content type="html"><![CDATA[<p>有时对于数据量较大的地理数据，我们希望通过一定的统计方法将空间模式量化，从而获知这些地理数据在空间上是聚合的、还是离散的、还是随机的等。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsA_Toolset.png" alt="分析模式工具集"></p>
<p>在了解如上工具之前，有一些空间统计学的基本知识还是要先搞明白，磨刀不误砍柴工，那就开始吧。</p>
<p><br></p>
<h1 id="零假设、P值、Z得分、置信度"><a href="#零假设、P值、Z得分、置信度" class="headerlink" title="零假设、P值、Z得分、置信度"></a>零假设、P值、Z得分、置信度</h1><p>分析模式工具集中的工具都采用“推论统计学”，先确定一个<strong>零假设</strong>，也就是假设要素或与要素相关的值都表现为空间随机模式—— <strong>Complete Spatial Randomness (CSR)</strong>；然后再计算一个 p值，用来表示零假设的正确概率。分析模式工具集中的工具都会返回 <strong>P值（P-Value）</strong>和 <strong>Z得分（Z-Score）</strong>，这是我们拒绝前面的零假设的依据，也就是我们观测的要素表现出显著性聚类或离散模式，而不是随机模式。</p>
<p>什么是 P 值？ 什么是 Z 得分？</p>
<p><strong>P值</strong> 就是概率值，它表示观测到的空间模式是由某随机过程创建而成的概率，或者我们简单的理解成是观测到的空间模式是随机空间模式的概率。P 值越小，也就是观测到的空间模式是随机空间模式的可能性越小，也就是我们越可以拒绝开始的零假设。</p>
<p><strong>Z得分</strong> 表示标准差的倍数。例如，如果工具返回的 z 得分为 +2.5，我们就会说，结果是 2.5 倍标准差。如下所示，z 得分和 p 值都与标准正态分布相关联。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsA_Normal.png" alt="正态分布"></p>
<p>z 得分和 p 值结果是统计显著性的量度，用来判断是否拒绝零假设。在正态分布的两端出现非常高（正值）或非常低（负值）的 z 得分，这些得分与非常小的 p 值关联。当运行要素模式分析工具得到很小的 p 值以及绝对值很大的 z 得分时，就表明观测到的空间模式不太可能反映零假设中假定的随机模式。</p>
<p>那么，P值需要多小？或者说要小到什么程度，才能拒绝零假设呢？这时就需要我们自己主观选择一个 <strong>置信度（Confidence Level）</strong>，典型的置信度有 90%、95%、99%。其中显见，99%的置信度是最保守的。</p>
<p><br></p>
<h1 id="空间关系的概念化"><a href="#空间关系的概念化" class="headerlink" title="空间关系的概念化"></a>空间关系的概念化</h1><p>空间统计分析和传统（非空间）统计分析的一个重要区别是空间统计分析将空间关系整合到算法中。在我们执行各种各样的空间统计工具时，需要选择一项“空间关系概念化”，如何选择就主要取决于要测量的对象。如下是常见的选项：</p>
<p><br></p>
<h2 id="反距离、反距离平方（阻抗）"><a href="#反距离、反距离平方（阻抗）" class="headerlink" title="反距离、反距离平方（阻抗）"></a>反距离、反距离平方（阻抗）</h2><p> <img src="http://kikitamap.com/images/blogImg/AnalysisPatternsA_InverseDistance.png" alt=""><br>使用“反距离”选项时，空间关系的概念模型是一种阻抗或距离衰减。距离越远，影响越小。<br>INVERSE_DISTANCE：表示与远处的要素相比，附近的邻近要素对目标要素的计算的影响要大一些；INVERSE_DISTANCE_SQUARED：与 INVERSE_DISTANCE 类似，但它的坡度更明显，因此影响下降得更快，并且只有目标要素的最近邻域会对要素的计算产生重大影响。</p>
<blockquote>
<p>例如：反欧氏距离适用于对连续数据（如温度变化）进行建模。再比如测量某种种子植物的聚集程度，使用反距离可能最合适。</p>
</blockquote>
<p><br></p>
<h2 id="距离范围（影响的范围）"><a href="#距离范围（影响的范围）" class="headerlink" title="距离范围（影响的范围）"></a>距离范围（影响的范围）</h2><p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsA_FixDistance.png" alt=""><br>FIXED_DISTANCE_BAND：将对邻近要素环境中的每个要素进行分析。在指定临界距离内的邻近要素将分配值为 1 的权重，并对目标要素的计算产生重大影响。在指定临界距离外的邻近要素将分配值为零的权重，并且不会对目标要素的计算产生任何影响。</p>
<blockquote>
<p>例如：要研究通勤模式并且已知平均上下班路程为 15 英里，则最好使用 15 英里的固定距离进行分析。</p>
</blockquote>
<p><br></p>
<h2 id="无差别的区域"><a href="#无差别的区域" class="headerlink" title="无差别的区域"></a>无差别的区域</h2><p><img src="http://kikitamap.com/images/blogImg/AnalysisPatternsA_ZoneIndiff.png" alt=""><br>ZONE_OF_INDIFFERENCE：将“反距离”模型和“固定距离范围”模型合并为一体，在目标要素的指定临界距离内的要素将分配值为 1 的权重，并且会影响目标要素的计算。一旦超出该临界距离，权重就会随距离的增加而减小。</p>
<blockquote>
<p>举个常见的例子，工作日的午饭我们通常会在公司附近解决，选餐馆的时候，可能在500米以内哪家都行，超过500米就可能太过占用时间从而影响中午的休息、娱乐等等，当餐馆距离公司超过500米，随着距离的增加，权重就不断减小。</p>
</blockquote>
<p><br></p>
<h2 id="面邻接（一阶）"><a href="#面邻接（一阶）" class="headerlink" title="面邻接（一阶）"></a>面邻接（一阶）</h2><p>对于面要素类，可选择 CONTIGUITY_EDGES_ONLY或 CONTIGUITY_EDGES_CORNERS。其中，CONTIGUITY_EDGES_ONLY：只有共用边界的相邻面要素会影响目标面要素的计算，不共享边的面被排除在目标要素计算之外。CONTIGUITY_EDGES_CORNERS：共享边界、结点的面要素会影响目标面要素的计算。如果两个面存在重叠的部分，则将视为相邻要素并包含在彼此的计算中。</p>
<blockquote>
<p>例如，研究某些传染病的传染区域时，可以考虑此空间关系概念化。</p>
</blockquote>
<h2 id="K最近邻域"><a href="#K最近邻域" class="headerlink" title="K最近邻域"></a>K最近邻域</h2><p>K表示最近邻域数目。如果 K（邻域数）为 8，则距目标要素最近的 8 个邻域都会包含在该要素的计算中。在要素密度高的位置处，分析的空间范围会比较小。与此类似，要素密度稀的位置，分析的空间范围会比较大。使用生成空间权重矩阵工具时该方法可用。</p>
<h2 id="通过文件获取空间权重（用户定义的空间关系）"><a href="#通过文件获取空间权重（用户定义的空间关系）" class="headerlink" title="通过文件获取空间权重（用户定义的空间关系）"></a>通过文件获取空间权重（用户定义的空间关系）</h2><p>GET_SPATIAL_WEIGHTS_FROM_FILE：将在空间权重文件(.SWM) 中定义空间关系，文件可以使用空间统计工具箱中其他相关的工具创建，这里先不展开，后面再说。</p>
<p>有了这些基础知识，我们就来看看ArcGIS Desktop 中提供的这些工具，有点长了，再另起一篇看工具吧。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Statistics </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间统计（一）度量地理分布]]></title>
      <url>/2015/02/26/MeasuringGeographicDistributions/</url>
      <content type="html"><![CDATA[<p><em>Updated: 2017-10-11</em></p>
<p><br></p>
<p>ArcGIS Desktop 中有一个包含了一系列用于研究空间分布/spatial distribution、空间模式/spatial pattern、空间关系/spatial relationship的统计的工具箱 —— Spatial Statistics Toolbox。  这与普通的统计方法不同，空间统计将许多地理空间的概念融入到统计算法逻辑中，例如：邻域/proximity，面积/area，连通性/connectivity等。</p>
<p>本篇总结一下有关 度量地理分布/Measuring Geographic Distributions工具集中提供的功能。</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_Toolset.png" alt=""></p>
<p>这些工具用于研究要素的空间分布特征，下面一个一个来看：</p>
<p><br></p>
<h1 id="Central-Feature"><a href="#Central-Feature" class="headerlink" title="Central Feature"></a>Central Feature</h1><p>中心要素（Central Feature）这个工具可用于寻找一组要素中处于最中心位置的要素，这一组要素可以是点、线、面。<br>算法：测量每个要素与其他要素之间两两的距离，然后求和，和值最小的要素即判定为central feature。</p>
<p>可解决的问题，例如：</p>
<p>某个区域的仓库中最中心位置的是哪个? </p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_CentralFeature.png" alt=""></p>
<p>在几个区块中，哪一个具有最中心的位置？</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_CentralFeature2.png" alt=""></p>
<p>工具的算法是将每个要素质心与其他各要素质心之间的距离计算并求和，取最小值。那么问题来了……</p>
<p><strong>距离测量方法是什么？</strong></p>
<p>有欧式距离与曼哈顿距离可选，区别点这里。并且需牢记，投影坐标系下才有准确的测量值，如果数据是经纬度坐标系，需要投影变换。</p>
<p><strong>要素的质心如何确定？</strong></p>
<p>对于线和面要素，距离计算中会使用要素的质心。对于多点、折线或由多部件组成的面，将会使用所有要素部件的加权平均中心来计算质心。点要素的加权项是1，线要素的加权项是长度，而面要素的加权项是面积。</p>
<p><strong>如何求多组要素的各自的中心要素？</strong></p>
<p>设置分组/case字段，可以对多个分组的要素分别计算中心要素。</p>
<p><br></p>
<h1 id="Mean-Center"><a href="#Mean-Center" class="headerlink" title="Mean Center"></a>Mean Center</h1><p>平均中心（Mean Center）用于计算输入的要素的质心的平均中心，因此这个工具会计算出一个新的点。</p>
<p>如果输入数据包含 Z 值，那么在平均中心也会计算 Z 值，也就是得到3D点。</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_MeanCenter.png" alt=""></p>
<blockquote>
<p>这个工具在现实中有什么应用呢？我从帮助中引用几个有意思的应用：</p>
<p>★  犯罪分析师在对白天事件点与夜间事件点进行对比评估时，可能希望查看盗窃行为的平均中心是否会有所变化。这有助于公安部门更好地分配资源。</p>
<p>★  野生生物学家可以计算某个公园若干年内的麋鹿观测值的平均中心，以了解夏季和冬季麋鹿会在何处聚集，从而为公园游客提供更好的信息。</p>
<p>★  GIS 分析师可以通过将 911 紧急电话的平均中心与紧急响应站的位置进行比较来评估服务水平。此外，该分析师还可以对由超过 65 岁的个人加权所得的平均中心进行评估，从而确定提供老人服务的理想位置。</p>
</blockquote>
<p>举个栗子：</p>
<p>2012年西非的马里暴动的位置信息采集后，求取平均中心大致可以了解事件的分布情况。</p>
<p>所有事件：</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_Events.png" alt=""></p>
<p>各类事件的平均中心：</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_Events2.png" alt=""></p>
<p><br></p>
<h1 id="Median-Center"><a href="#Median-Center" class="headerlink" title="Median Center"></a>Median Center</h1><p>中位数中心（Median Center）工具使用迭代算法来查找可使所有要素间的欧氏距离达到最小的点。</p>
<p>平均中心和中位数中心均是中心趋势度量。但是，比较而言，中位数中心工具的算法受数据异常值的影响较小。</p>
<p>例如，对紧凑性群集点的平均中心进行计算的结果是该群集中心处的某个位置点。如果随后添加一个远离该群集的新点并重新进行计算平均中心，会注意到结果会向新的异常值靠近。而如果要使用中位数中心工具执行相同的测试，会发现新的异常值对结果位置的影响明显减小。</p>
<p>如下图中，向数据中增加两个相隔较远的点， Median Center 看起来要比 Mean Center 偏移的更小。</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_Compare.png" alt=""></p>
<p>PS： 尽管中位数中心工具只返回一个点，但实际上,距所有要素的距离最小的位置点可能有多个。</p>
<p><br></p>
<h1 id="Directional-Distribution-Standard-Deviational-Ellipse"><a href="#Directional-Distribution-Standard-Deviational-Ellipse" class="headerlink" title="Directional Distribution (Standard Deviational Ellipse)"></a>Directional Distribution (Standard Deviational Ellipse)</h1><p>方向分布（标准差椭圆）工具可以查看要素的分布是否是狭长的，是否具有方向性，从而使我们直观的感受数据的趋向。该方法是由平均中心作为起点对 x 坐标和 y 坐标的标准差进行计算，从而定义椭圆的轴，因此该椭圆被称为标准差椭圆。</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_Ellipse.png" alt=""></p>
<p>在工具生成的椭圆面中会包含：</p>
<ul>
<li>平均中心的 X 和 Y 坐标、两个标准距离（长轴和短轴）及椭圆的方向，这五个值。</li>
<li>如果要素的基础空间模式是中心处集中而朝向外围的要素较少（一种空间正态分布），则一个标准差椭圆面会包含聚类中约 68％ 的要素，两个标准差椭圆面会包含聚类中约 95％ 的要素，三个标准差椭圆面则可包含聚类中约 99％ 的要素。</li>
</ul>
<blockquote>
<p>这个工具可能的应有哪些呢？从帮助文档中摘录过来：</p>
<ul>
<li>在地图上标示一组犯罪行为的分布趋势可以确定该行为与特定要素（一系列酒吧或餐馆、某条特定街道等）的关系。 </li>
<li>在地图上标示地下水井样本的特定污染可以指示毒素的扩散方式，这在部署减灾策略时非常有用。</li>
<li>对各个种族或民族所在区域的椭圆的大小、形状和重叠部分进行比较可以提供与种族隔离或民族隔离相关的深入信息。</li>
<li>绘制一段时间内疾病爆发情况的椭圆可建立疾病传播的模型。</li>
</ul>
</blockquote>
<p>我还使用上面马里的例子，了解各种事件的分布情况：</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_Ellipse2.png" alt=""></p>
<p>且不说分布方向，我们可以看出，无论是哪种暴动事件，与之并发导致的无家可归的难民是分布最广的。</p>
<p><br></p>
<h1 id="Standard-Distance"><a href="#Standard-Distance" class="headerlink" title="Standard Distance"></a>Standard Distance</h1><p>标准距离工具可通过绘制一个圆心位于平均中心/meancenter、半径等于标准距离值的圆在地图上体现一组要素的紧密度。 </p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_StandardDistance.png" alt=""></p>
<blockquote>
<p>可能的应用：</p>
<ul>
<li>利用两种或多种分布的值对分布进行比较。例如，犯罪分析家可以对袭击行为和汽车偷窃行为的紧密度进行比较。了解不同犯罪类型的分布情况可能有助于警察制定出应对犯罪行为的策略。如果特定区域内的犯罪行为分布很紧凑，那么在该区域中心附近配置一辆警车也许就足够了。但如果分布较分散，则可能需要几辆警车同时巡查该区域，才能更有效地对犯罪行为做出响应。</li>
<li>可以对同一类型要素在不同时间段内的分布情况进行比较。例如，犯罪分析家可以对白天盗窃行为和夜间盗窃行为进行比较，以了解白天与夜间相比，盗窃行为是更加分散还是更加紧凑。</li>
<li>可将要素分布与静态要素进行比较。例如，可以针对某个区域内各响应消防站在几个月内接到的紧急电话的分布情况进行度量和比较，以了解哪些消防站响应的区域较广。</li>
</ul>
</blockquote>
<h1 id="Linear-Directional-Mean"><a href="#Linear-Directional-Mean" class="headerlink" title="Linear Directional Mean"></a>Linear Directional Mean</h1><p>线性方向平均值工具可以计算一组线要素的趋势的平均角度。</p>
<p>许多具有一个起点和一个终点的线要素，例如飓风路径，我们就可以使用这个工具计算飓风的平均方向。再比如断层线，这种线要素我们一般认为它们有方位（orientation），但是没有方向（direction），我们也可以使用这个工具计算平均方位。</p>
<p>所以，如果要计算平均方向，请确保所有线的方向都是正确的。如果要计算平均方位，则会忽略线的方向。</p>
<p>请牢记，尽管大多数线在起点和终点之间具有多个折点，此工具将只使用起点和终点来确定方向。</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_MeanDirection.png" alt=""></p>
<p>输出线要素的为位于要素平均中心，长度为输入要素的平均长度。包含了罗盘角（以正北为基准方向按顺时针旋转）、方向平均值（以正东为基准方向按逆时针旋转）、圆方差（指示方向/方位偏离方向平均值的程度）、平均中心 X 和 Y 坐标及平均长度。</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_MeanDirection2.png" alt=""></p>
<blockquote>
<p>可能的应用：</p>
<ul>
<li>比较两组或多组线。例如，研究河谷中麋鹿和驼鹿迁移状况的野生生物学家可计算这两个物种迁徙路径的方向趋势。</li>
<li>比较不同时期的要素。例如，鸟类学家可逐月计算猎鹰迁徙的趋势。方向平均值可汇总多个个体的飞行路径并对每日的迁移进行平滑处理。这样便可很容易地了解鸟类在哪个月进得最快，以及迁徙在何时结束。</li>
<li>评估森林中的伐木状况以了解风型和风向。</li>
<li>分析可以指示冰川移动方式的冰擦痕。</li>
<li>标识汽车失窃及被盗车辆追回的大体方向。</li>
</ul>
</blockquote>
<p>再举个栗子：</p>
<p>如下图中绿色的线段表示历年不同日期采集的风向数据，现在根据不同的年份计算每年的平均风向，结果如图，图形总是比表格数据直观的很：</p>
<p><img src="http://kikitamap.com/images/blogImg/MeasuringGeographicDistributions_MeanDirection3.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Statistics </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Desktop 工具的并行处理]]></title>
      <url>/2015/01/12/ParallelProcessing/</url>
      <content type="html"><![CDATA[<p>开始下面正文之前，先说一个旧闻，ArcGIS Desktop 10.1 SP1 之后的版本中， 出现了一个不明觉厉的 <a href="http://resources.arcgis.com/en/help/main/10.1/index.html#/What_s_new_in_ArcGIS_10_1_service_packs/016w0000005q000000/" target="_blank" rel="noopener"><strong>新特性</strong></a> —— <strong>并行处理（Parallel Processing）</strong>。 </p>
<p>现在机器硬件越来越优，多核CPU的机器比比皆是，ArcGIS Desktop 32位单进程的模式不能充分的利用这些硬件资源，不能满足大数据量的处理要求。因此，Esri 改进了 ArcToolbox 中的部分工具，赋予了这部分工具并行处理的能力，确切地说是一小部分工具。 </p>
<p>看到这里，问题可能来了，哪些工具支持并行处理呢？遗憾的是官方没有给出这个清单，这一点体验上确实不是很佳。但是我们还是有办法把它们找出来的，当我们在使用某个工具的时候，可以打开工具的帮助，在环境变量题目下找找有没有叫做 <strong>并行处理因子（Parallel Processing Factor）</strong>的项目。 </p>
<p><img src="http://kikitamap.com/images/blogImg/ParallelProcessing_Toolhelp.png" alt="">   </p>
<p><img src="http://kikitamap.com/images/blogImg/ParallelProcessing_Factor.png" alt=""> </p>
<p><strong>也就是说，对于所有工具，只有其文档中环境变量下标明的环境变量参数才有效，而不是全部环境变量参数都有效！</strong> </p>
<p>下面我们来看看这个参数是如何设置和影响工具运行的。做一个简单的小测试，先找到一个支持并行处理的工具，例如 <strong> Build Pyramids And Statistics</strong> 工具，用其为数据量较大的镶嵌数据集的项目创建金字塔和统计值。在默认设置下，只要工具支持并行处理，工具会自动创建多个进程（<strong>ArcSOCP.exe</strong>）来执行任务。如下图所示： </p>
<p><img src="http://kikitamap.com/images/blogImg/ParallelProcessing_taskManager.png" alt=""> </p>
<p>在工具支持并行处理的情况下，设置并行处理因子（Parallel Processing Factor）这个参数又能做什么呢？ </p>
<p>这个因子的数值，会决定工具运行使用的进程数量。一般，各工具在各个支持的环境中都有进程数量的内置默认值。我们可根据自己的数据情况、执行任务的类型和机器的可用资源对其进行更改。 </p>
<p>一般是这四种设置方法： </p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>留空</strong></td>
<td><strong>让工具自动决定使用进程的数量</strong>，这是 <strong>默认</strong>设置。<strong>*如上图中，我是8核的机器，工具自动开启了4个进程。</strong></td>
</tr>
<tr>
<td><strong>0</strong></td>
<td><strong>不跨多个进程进行操作。</strong></td>
</tr>
<tr>
<td><strong>n</strong></td>
<td><strong>使用指定的进程数量。</strong></td>
</tr>
<tr>
<td><strong>n%</strong></td>
<td>使用百分比计算进程数量：<strong>进程数量 = 系统核数量 * （n / 100）</strong>。</td>
</tr>
</tbody>
</table>
<p><strong>在填写的时候，是不是一定进程数越多越好呢？</strong> </p>
<p>引用帮助文档的原文供读者参考： </p>
<blockquote>
<p><strong>“指定的进程数量大于计算机所具有的核数量，可能导致性能损失。这是因为多进程将在一个核上争夺资源。为避免这样的竞争，可以指定低于 100% 的百分数值或少于计算机核数量的进程数量。”</strong> </p>
</blockquote>
<p>当然也有例外情况： </p>
<blockquote>
<p><strong>“当所有进程均是对磁盘或企业级数据库连接的 I/O bound 时，您可通过指定多于核数量的进程以提高性能。例如将镶嵌数据集储存到企业级数据库时，添加栅格至镶嵌数据集 工具是 I/O bound。同样，构建概视图工具对磁盘的主要的 I/O bound。您可通过指定大于 100% 的百分比或大于计算机所含核数量的进程数量，来使用更多进程。例如，如果您有一台四核计算机，则指定 8 或 200%，这会跨八个进程展开操作。”</strong> </p>
</blockquote>
<p><br></p>
<p>我做个了小测试，来对比对相同的数据做相同操作的时间消费。 </p>
<p><strong>测试环境：</strong> </p>
<p>Windows 8.1 Enterprise 64bit ；ArcGIS for Desktop 10.3  </p>
<p><img src="http://kikitamap.com/images/blogImg/ParallelProcessing_OS.png" alt=""> </p>
<p><strong>任务</strong>： </p>
<p>为相同的一个镶嵌数据集的栅格项目创建金字塔和统计值，使用工具 Build Pyramids And Statistics ，金字塔重采样方法和压缩方法等参数均相同。 </p>
<p><strong>结果</strong>： </p>
<blockquote>
<p>√ 并行处理因子设置为 0，即不跨多进程，用时 39 minutes 3 seconds； </p>
<p> √ 并行处理因子设置为 8，即工具跨8个进程并行处理，用时 1 minutes 28 seconds 。 </p>
</blockquote>
<p>*时间是工具运行的消息提供的时间。 </p>
<p>时间相差悬殊，虽然只是一个小测试，我们却能感受到并行处理相比单进程处理体验好了很多。 </p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[无法正常卸载 ArcGIS 产品时，这样完全清除]]></title>
      <url>/2014/12/26/Complete/</url>
      <content type="html"><![CDATA[<p>一般情况下，我们可以直接在“添加删除程序”中，对 ArcGIS 程序进行卸载，这是推荐的方法。</p>
<p>但是，如果遇到异常，例如：被杀毒程序不完整的删除或手动删除了必要的文件等，导致 ArcGIS 无论如何也卸载不掉，或者即使使用光盘去修复程序也失败，或者使用高版本的ArcGIS程序去覆盖也报错等。</p>
<p><strong>那就需要手动清理一下了，这是最后一招，正常卸载程序失败时再考虑这招……</strong></p>
<p>我把有可能有的位置列在下面，对照一下，检查是否删除干净了。有些文件夹是隐藏文件夹，设置显示出来然后删除。</p>
<h1 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹:"></a>文件夹:</h1><p>C:\Program Files (x86)\ArcGIS<br>C:\Program Files (x86)\Esri<br>C:\Program Files (x86)\Common Files\ArcGIS<br>C:\Program Files (x86)\Common Files\Esri<br>C:\Program Files\ArcGIS<br>C:\Program Files\Esri<br>C:\Program Files\Common Files\ArcGIS<br>C:\Program Files\Common Files\Esri<br>C:\Program Data\Esri<br>C:\Program Data\ArcGIS<br>C:\Program Data\FLEXnet<br>C:\Users\<username>\AppData\Local\ESRI<br>C:\Users\<username>\AppData\Local\ArcGIS<br>C:\Users\<username>\AppData\Roaming\ESRI<br>C:\Users\<username>\AppData\Roaming\ArcGIS<br>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\ArcGIS<br>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Esri</username></username></username></username></p>
<h1 id="注册表："><a href="#注册表：" class="headerlink" title="注册表："></a>注册表：</h1><p>HKEY_LOCAL_MACHINE\SOFTWARE\ESRI<br>HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ESRI<br>HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Flex LM License Manager<br>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\<delete any="" folder="" that="" contains="" arcgis="" or="" esri=""><br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\ArcGIS Server<br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\<delete any="" folder="" that="" contains="" arcgis="" or="" esri="" within=""><br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\FLEXnet Licensing Service<br>HKEY_CLASSES_ROOT\Installer\Products\<delete any="" folder="" that="" contains="" arcgis="" or="" esri="" within=""><br>HKEY_CLASSES_ROOT\Installer\Assemblies\<delete any="" folder="" that="" contains="" arcgis="" or="" esri="" within=""><br>HKEY_CLASSES_ROOT\<delete and="" folder="" that="" contains="" arcgis="" or="" esri="" within=""><br>HKEY_CLASSES_ROOT\Installer\Assemblies\Global\<delete all="" keys="" beginning="" with="" esri="" or="" arcgis=""></delete></delete></delete></delete></delete></delete></p>
<h1 id="安全设置："><a href="#安全设置：" class="headerlink" title="安全设置："></a>安全设置：</h1><p>安全设置/Security Settings -&gt; 本地策略/Local Policies -&gt; 安全选项/Security Options</p>
<p>找到 “用户账户控制：以管理员批准模式运行所有管理员” / “User Account Control: Run all administrators in Admin Approval” , 将设置从 “已启用/Enabled” 改为 “已禁用/Disabled”。</p>
<p>如果有，则卸载: C:\Windows\assembly\Esri.<br>如果有，则卸载: C:\Windows\assembly\ArcGIS.</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我们可能会遇到的距离量算方法]]></title>
      <url>/2014/12/25/MeasureDistances/</url>
      <content type="html"><![CDATA[<p>在看空间统计相关的文档资料的时候，看到了几个有关距离丈量方法的术语词汇，诸如：欧式距离、曼哈顿距离、切比雪夫距离…… 老外习惯于使用名字来命名算法，可是对于门外汉们，是一种困惑，今天就整理下，一起温故知新。 </p>
<p><br></p>
<h2 id="1-欧式距离（Euclidean-Distance）"><a href="#1-欧式距离（Euclidean-Distance）" class="headerlink" title="1. 欧式距离（Euclidean Distance）"></a><strong>1. 欧式距离（Euclidean Distance）</strong></h2><p>欧式距离是我们在直角坐标系中最常用的距离量算方法，例如小时候学的“两点之间的最短距离是连接两点的直线距离。”这就是典型的欧式距离量算方法。 </p>
<p>通常这这个距离的获取是基于我们熟悉的“勾股定理”，解算三角形斜边得到的。 </p>
<p><img src="http://kikitamap.com/images/blogImg/MeasureDistances_EucDis.png" alt=""> </p>
<p><img src="http://kikitamap.com/images/blogImg/MeasureDistances_EucDis2.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/MeasureDistances_Formula.png" alt=""> </p>
<p>看看维基百科：<a href="http://en.wikipedia.org/wiki/Euclidean_distance" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Euclidean_distance</a></p>
<p><br></p>
<h2 id="2-曼哈顿距离（Manhattan-Distance）"><a href="#2-曼哈顿距离（Manhattan-Distance）" class="headerlink" title="2. 曼哈顿距离（Manhattan Distance）"></a><strong>2. 曼哈顿距离（Manhattan Distance）</strong></h2><p>曼哈顿距离是与欧式距离不同的一种丈量方法，两点之间的距离不再是直线距离，而是投影到坐标轴的长度之和。 </p>
<pre><code>![](http://kikitamap.com/images/blogImg/MeasureDistances_Manhattan.png) 
</code></pre><p>还是看图吧，图比文字更显见。 </p>
<pre><code>![](http://kikitamap.com/images/blogImg/MeasureDistances_Manhattan2.png) 
</code></pre><p>图中绿色的线为欧式距离的丈量长度，红色的线即为曼哈顿距离长度，蓝色和黄色的线是这两点间曼哈顿距离的等价长度。 </p>
<p>想想我们下象棋的时候，车炮兵之类的，是不是要走曼哈顿距离？ </p>
<p>如果不会下象棋，没关系，看下面的例子： </p>
<p><img src="http://kikitamap.com/images/blogImg/MeasureDistances_ManhattanMap.png" alt=""></p>
<p>   在美国道路会像这样是很多的规则的网格状，从A到B通常无法去沿直线行走，而是会避开建筑物，走几个街区到达。    </p>
<p>图中蓝色的线即为曼哈顿距离的典型应用场景。 </p>
<p>_看看维基百科：<a href="http://en.wikipedia.org/wiki/Taxicab_geometry" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Taxicab_geometry</a>_ </p>
<p><br></p>
<h2 id="3-切比雪夫距离（Chebyshev-distance）"><a href="#3-切比雪夫距离（Chebyshev-distance）" class="headerlink" title="3. 切比雪夫距离（Chebyshev distance）"></a><strong>3. 切比雪夫距离（Chebyshev distance）</strong></h2><p>数学上，切比雪夫距离是将2个点之间的距离定义为其各坐标数值差的最大值。 </p>
<pre><code>![](http://kikitamap.com/images/blogImg/MeasureDistances_Chebyshev.png) 
</code></pre><p>网上搜索，好多有关这个距离的解释，大多都是采用国际象棋中的王的走步来作为例子，王可以前后左右走，还可以斜前斜后走，一共8个方向可以认为距离均等。 </p>
<p>也就是在下面3&amp;times;3邻域内，中心网格的中心点到8个邻域网格中心点的距离相等。 </p>
<pre><code>![](http://kikitamap.com/images/blogImg/MeasureDistances_Chebyshev2.png) 
</code></pre><p>_看看维基百科：<a href="http://en.wikipedia.org/wiki/Chebyshev_distance" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Chebyshev_distance</a>_    </p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Statistics </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（十一）分析、修复、同步镶嵌数据集]]></title>
      <url>/2014/12/09/MDAnalyzeRepairMD/</url>
      <content type="html"><![CDATA[<p>这是这个专题的最后一篇，将剩下的几个工具放在一起说一说。下面的这些工具在镶嵌数据集正常运行时常常会被忽略，但是一旦出现异常或者故障，这些工具就有了用武之地。 </p>
<p><img src="http://kikitamap.com/images/blogImg/MDAnalyzeRepairMD_Toolset.png" alt=""> </p>
<p><br></p>
<h1 id="分析镶嵌数据集"><a href="#分析镶嵌数据集" class="headerlink" title="分析镶嵌数据集"></a>分析镶嵌数据集</h1><p>当我们发现镶嵌数据集不能按照预期运行，或者性能比较差的的时候，可以使用工具 <strong>Analyze Mosaic Dataset</strong> 来分析检查存在的问题。这个工具可以发现常见问题、发出警告消息，并且给出些解决方法或者建议等。另外，当在 ArcMap 中镶嵌数据集图层的右键菜单也可以调用这个工具。 </p>
<p><img src="http://kikitamap.com/images/blogImg/MDAnalyzeRepairMD_Analyze.png" alt=""> </p>
<p><br></p>
<p>分析之后，在 Prepare 窗口中列出检查到的 Error，Warning，Message等，在列表的每一行上右键，都会打开相应的解决方法或者建议。 </p>
<p><img src="http://kikitamap.com/images/blogImg/MDAnalyzeRepairMD_Prepare.png" alt=""> </p>
<p>使用分析镶嵌数据集工具，我们可以分析的对象有： </p>
<blockquote>
<p><strong>FOOTPRINT</strong> — 镶嵌数据集的轮廓线<br><strong>FUNCTION</strong>—镶嵌数据集的栅格函数<br><strong>RASTER</strong> — 栅格数据<br><strong>PATHS</strong>— 分析是否存在损坏的路径<br><strong>SOURCE_VALIDITY</strong>— 对源数据的潜在问题进行分析。此方法可以有效检测同步工作期间可能发生的问题。<br><strong>STALE</strong> — 分析镶嵌数据集项目是否过时<br><strong>PYRAMIDS</strong> — 栅格数据金字塔，测试金字塔是否有断开连接的辅助文件。<br><strong>STATISTICS</strong> —  栅格统计数据和直方图<br><strong>PERFORMANCE</strong> — 对性能相关的问题进行分析。例如，传输期间未压缩，或建议对涉及大量栅格函数的项目进行项目缓存。<br><strong>INFORMATION</strong> —  对镶嵌数据集及其项目进行分析，并会为分析结果生成信息日志。 </p>
</blockquote>
<p><br></p>
<h1 id="计算脏区"><a href="#计算脏区" class="headerlink" title="计算脏区"></a>计算脏区</h1><p><strong>Compute Dirty Area</strong> 工具用于标识镶嵌数据集中在指定时间点之后发生更改的区域。 </p>
<p>工具的输出结果为面要素类，在面要素类区域以内就是发生变化的区域。工具支持较多的时间格式的输入，参考工具内部格式样例填写即可。 </p>
<p><br></p>
<h1 id="镶嵌数据集的路径"><a href="#镶嵌数据集的路径" class="headerlink" title="镶嵌数据集的路径"></a>镶嵌数据集的路径</h1><p>我们知道镶嵌数据集中存储的是栅格数据源的引用信息，而不是栅格数据源本身。当我们复制或者移动镶嵌数据集到其他位置时，镶嵌数据集中的引用信息并没有发生变化。 </p>
<p>有时，在同一台机器上，由于源数据的绝对路径没有变化，因此即使挪了镶嵌数据集的位置，也没有什么影响。但是如果是把镶嵌数据集移动或者复制到另一台机器上，或者其他原因源栅格数据的路径发生了更改，那么我们要做的就是更新或者说修复路径。 </p>
<p>如果我们需要知道镶嵌数据集现在使用的数据源，使用 <strong>Export Mosaic Dataset Paths</strong> 工具可以将镶嵌数据集引用的路径信息导出成一张表。也可以仅将损坏的路径导出。 </p>
<p>然后使用工具 <strong>Repair **</strong>Mosaic Dataset Paths<em>* 对路径进行修复，如果要更改所有路径，可输入星号 (</em>) 作为原始路径。 </p>
<p><br></p>
<h1 id="同步镶嵌数据集"><a href="#同步镶嵌数据集" class="headerlink" title="同步镶嵌数据集"></a>同步镶嵌数据集</h1><p>工具 <strong>Synchronize Mosaic Dataset </strong>可以将镶嵌数据集保持为最新状态。要理解同步镶嵌数据集，理解镶嵌数据集内数据的组织方式非常重要。 </p>
<p>1）最常见的是直接引用栅格数据的镶嵌数据集。这种镶嵌数据集与源数据有直接关系，可以称之为“源镶嵌数据集”。 </p>
<p><img src="http://kikitamap.com/images/blogImg/MDAnalyzeRepairMD_SourceMD.png" alt=""> </p>
<p>2）镶嵌数据集的数据源还可以是另外一个镶嵌数据集，也就是在创建镶嵌数据集后，添加数据的数据源是另外一个镶嵌数据集。这种可以称之为“派生镶嵌数据集”，帮助理解。当源镶嵌数据集发生变化时，为了保持派生镶嵌数据集最新，同步镶嵌数据集就非常重要了。 </p>
<p>PS：在第一篇中提到过 “引用镶嵌数据集 / Referenced Mosaic Dataset” ，这是一种特别的镶嵌数据集，与上文要表达的 “派生镶嵌数据集” 不是一种哦。 </p>
<p><img src="http://kikitamap.com/images/blogImg/MDAnalyzeRepairMD_ReferenceMD.png" alt=""> </p>
<p>同步镶嵌数据集是个单向操作，其中源数据中的更改可以同步到镶嵌数据集的属性表，但属性表中的更改将不会影响源数据，同步时所做的更改无法撤消。。应该在同步派生镶嵌数据集之前同步源镶嵌数据集，因为派生镶嵌数据集只能使用源镶嵌数据集中的信息进行更新。 </p>
<p>同步镶嵌数据集工具中有一系列的参数可供配置，来细化控制参与同步的想，所见即所得，不再赘述。 </p>
<p><br></p>
<h1 id="更改镶嵌数据集方案"><a href="#更改镶嵌数据集方案" class="headerlink" title="更改镶嵌数据集方案"></a>更改镶嵌数据集方案</h1><p><strong>Alter Mosaic Dataset Schema</strong> 工具通过生成所需的表或字段准备 ArcSDE 中镶嵌数据集的方案。该工具可防止在 ArcSDE 中存储镶嵌数据集时可能发生的方案锁定问题。 </p>
<p>只有在 ArcSDE 中创建镶嵌数据集，而且由非数据集所有者编辑镶嵌数据集时，才需要此工具。 </p>
<p>在工具中，选择该镶嵌数据集所允许的操作。这将创建所需的必要表。如果非数据集所有者尝试执行不允许的操作，则操作会失败。 </p>
<p>操作选项：ANALYSIS，BOUNDARY，CACHE，COLOR_CORRECTION，LEVELS，LOG，OVERVIEW，SEAMLINE，STEREO，VIEW </p>
<p>选择该镶嵌数据集所允许的栅格类型。这将创建所需的必要字段。如果非数据集所有者使用添加栅格至镶嵌数据集工具并尝试使用该工具未指定的栅格类型，则添加栅格至镶嵌数据集的执行将会失败。 </p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（十）函数链]]></title>
      <url>/2014/12/04/MDFunctionChain/</url>
      <content type="html"><![CDATA[<p><strong>镶嵌数据集中的函数</strong></p>
<p>在下文中会提到的工具有这几个，先摆在这里，有个初步的记忆：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFunctionChain_Toolset.png" alt=""></p>
<p><br></p>
<p>这个主题中，一起来看一下镶嵌数据集的函数。</p>
<p><strong>★</strong> 不过首先需要额外了解，在 ArcGIS 中，其实除了镶嵌数据集，普通的栅格数据集也可以使用函数，这并不仅仅是镶嵌数据集的特性。在 Image Analyst 窗口中，我们可以点击 fx 按钮给现有数据配置函数。</p>
<p>例如，下面给DEM增加个临时的山影效果，而不需要在硬盘上去存储这个结果：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFunctionChain_Hillshade.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/MDFunctionChain_ImageAnalysis.jpg" alt=""></p>
<p>在栅格数据上使用函数后，我们就可以直接查看函数作用后的结果栅格图层。在镶嵌数据集中创建的函数可以存储在数据库中，并且可以根据自己的需求，给栅格数据指定多个依次进行的函数，下一步的函数会使用上一步的函数的结果作为输入，称之为 <strong>函数链</strong>（Function Chain），一环扣一环，很形象。</p>
<p>给镶嵌数据集整体进行函数运算好处就是整体连续，如果我们每幅进行各自函数运算然后镶嵌，就会发现数据是不连续的片状。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFunctionChain_Mosaic.png" alt=""></p>
<p>我们在镶嵌数据集的属性窗口中可以看到 Function 选项卡，这就是配置函数链的主要的位置。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFunctionChain_Function.png" alt=""></p>
<p>如果我们在建库的时候选择某种 产品定义（Product Defination），在镶嵌数据集内部镶嵌数据集项目的也会存在函数链。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFunctionChain_Production.png" alt=""></p>
<p>ArcGIS 提供了很多可以用于栅格处理的函数，在 Web Help 文档中有每个函数的详细描述，这里我就不一一整理了。Web Help当工具书用，还是十分便利的，大家自可按需查询，点<a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//009t00000044000000" target="_blank" rel="noopener"><strong>这里</strong></a>。</p>
<p><br></p>
<p>镶嵌数据集工具箱中有这样几个工具，涉及到了函数，就联合上面的内容一起说说，从整体的总结来看，正文才刚刚开始……</p>
<p><br></p>
<p>前面说过了，我们可以直接在镶嵌数据集上右键，Function 选项卡中增加、删除、修改函数链，我们也可以使用工具 <strong>Edit Raster Function</strong> 。</p>
<p>如果没有特别的要使用 Model Builder或者脚本等调用这个工具，个人建议可以直接到属性中去修改，操作起来更方便直观。这个工具提供了 <strong>Insert、Replace、Remove</strong>三种修改选项，可以将 <strong>栅格函数模板文件(.rft.xml)</strong> 通过操作应用给镶嵌数据集，这种文件可以在<strong> Function Template Editor </strong>中保存获得。</p>
<p>举个最简单的例子，前面用了山影函数，现在我需要换成地貌晕染函数，执行下这个工具，导入现有的函数模板替换掉即可。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFunctionChain_ShadedRelief.png" alt=""></p>
<p>接着第二个相关的工具&nbsp;<strong>Build Mosaic Dataset Item Cache</strong>，这个工具是把 “Cached Raster Function” 函数插入到每个栅格数据函数链的顶部，这样该函数就成为链中最后实现的函数。一般是涉及到运算量较大的处理过程时，这样做可以提高性能。</p>
<p>在这个工具中，我们可以定义、生成缓存、指定缓存的存储位置。默认情况下，会在镶嵌数据集所处位置旁的文件夹中生成和存储缓存。此文件夹的名称与地理数据库的名称相同，但扩展名为 .cache。但是，如果镶嵌数据集创建于 ArcSDE 地理数据库，则将在该地理数据库中创建缓存。</p>
<p>如果我们想得到函数链处理之后镶嵌数据集中的各个栅格数据，就可以使用工具 <strong>Export Mosaic Dataset Items</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（九）计算像元大小范围]]></title>
      <url>/2014/11/28/MDCellRange/</url>
      <content type="html"><![CDATA[<p><strong>计算像元大小范围</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDCellRange_Toolset.png" alt=""></p>
<p>像元大小范围指的是，镶嵌数据集中的影像参加动态镶嵌的像元大小范围，也就是，动态镶嵌的过程中从栅格数据集中读取的像元大小的范围。</p>
<p>在镶嵌数据集的属性表中，字段 <strong>LowPS</strong> 列和 <strong>HighPS</strong> 列定义镶嵌数据集从源栅格数据集中读取的像元大小的 <strong>实际范围</strong>。当我们向镶嵌数据集中添加栅格时，工具会根据源栅格数据分辨率、金字塔等级、金字塔选项中的设置 来计算属性表中 LowPS 与 HighPS 字段值。<br>例如，下图中的 LowPS = 0.1 表示基础像素值，High = 0.4 表示正在使用的顶级金字塔像素值。对于不包含金字塔的栅格数据集，低像素大小和高像素大小可能为相同的值，例如第一行。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDCellRange_Table.png" alt=""></p>
<p>例如，在使用所有金字塔等级的情况下，如果栅格数据集包含 1 米的像元，且包含像元大小为 2、4、8 和 16 米的金字塔，则 LowPS 是 1，HighPS 是 16。如果在栅格金字塔选项中将最大像元大小设置为 8，则 HighPS 将为 8 而不是 16。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDCellRange_Pyramid.png" alt=""></p>
<p>属性表中还有两列：<strong>MinPS</strong> 列和 <strong>MaxPS</strong> 列，用来定义在什么像元大小范围内请求什么栅格数据。当我们向镶嵌数据集中添加栅格数据时，选中添加栅格至镶嵌数据集对话框上的 <strong>Update Cell Size Ranges (optional)</strong> 选项，或使用工具 <strong>Calculate Cell Size Ranges</strong> 时，就会填充两列字段值；也可以手动编辑表中的值。<br>MinPS 和 MaxPS 是根据栅格数据和叠加在上面的概视图来计算的。</p>
<p>用下面一幅图，可以看出默认情况下，MinPS，MaxPS 与 LowPS，HighPS 的关系：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDCellRange_CellSize.png" alt=""></p>
<p>当加入镶嵌数据集的栅格数据源有多种分辨率时，就可以利用像元大小范围来控制不同比例尺下显示不同的栅格数据。</p>
<p>例如，在国家级别查看影像，可以使用 <a href="http://baike.baidu.com/view/4221567.htm?fromtitle=Landsat&amp;fromid=7195765&amp;type=syn" target="_blank" rel="noopener">Landsat</a> 影像，约 30 米的像元大小；当放大到更高的比例，镶嵌数据集可以提供 SPOT 图像，像元大小约 5 米；进一步放大时，最终将看到航空正射影像，像元大小更小，分辨率更高。</p>
<p>比例尺和像元大小有很大的关系，如果我们希望求取计算的话，可以参考如下公式：<br>    <strong>Scale = CellSize * 96 / 0.0254</strong><br>    其中，ArcGIS 中 DPI 的默认值为 96，1 英寸（Inch） = 0.0254米，CellSize是以“米”为单位的。<br>    公式反之，可以通过比例推算像元大小：<br>    <strong>CellSize = Scale * 0.0254 / 96</strong></p>
<p>如果我们访问镶嵌数据集时，不断的放大地图，最终请求的影像的 Cell Size 小于了全部的 MinPS，那么就会请求失败，不再会返回影像；反之，如果我们不断的缩小地图，最终请求的Cell Size 大于了全部的的 MaxPS，那么也会请求失败，返回黑色和白色的棋盘状图案。也就是说，镶嵌数据集的像元大小范围会直接影响我们在缩放地图时影像数据的可见性。</p>
<p>That’s all …</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（八）色彩平衡与接缝线 Ⅱ]]></title>
      <url>/2014/11/20/MDColorBalance2/</url>
      <content type="html"><![CDATA[<h1 id="镶嵌数据集的色彩平衡"><a href="#镶嵌数据集的色彩平衡" class="headerlink" title="镶嵌数据集的色彩平衡"></a>镶嵌数据集的色彩平衡</h1><p><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_Toolset.png" alt=""></p>
<h2 id="创建接缝线"><a href="#创建接缝线" class="headerlink" title="创建接缝线"></a>创建接缝线</h2><p>在对镶嵌数据集进行镶嵌的时候，有时还会用到接缝线（Seamline）。在前面总结过镶嵌数据集的镶嵌方法，其中最后一种是 Seamline 镶嵌方法。<strong>在创建接缝线之前，建议先进行色彩平衡</strong>，因此就拿到这里一起说。</p>
<p>当我们把镶嵌方法选为了 Seamline 镶嵌方法时，Seamline 就会替代 Footprint 来作为每幅栅格数据的边线。这样会让接缝更自然，镶嵌数据集看起来会更像是无缝的一整张栅格数据。如果为镶嵌数据集创建了接缝线，还有个好处就是，我们可以根据需要去编辑接缝线，例如有的接缝线刚好穿过一个建筑物，我们就可以尽可能让边线绕过建筑物，让影像看起来拼接的自然美观一些。</p>
<p>工具<strong>Build Seamlines</strong>用来为镶嵌数据集创建接缝线的。Seamline 与 Footprints 类似：每个面表示一个图像。面的形状表示查看镶嵌数据集时将用于生成镶嵌图像的那部分图像。构建了 Seamline 之后，ArcMap 中显示镶嵌数据集时，会又多了一个图层 Seamline。根据镶嵌方法，等级值将存储在属性表的 SOrder 字段中。</p>
<p>下面就一起看看这个工具的使用方法：</p>
<p><strong>Computation Method</strong></p>
<p>构建接缝线，有五种计算方法可选：<strong>GEOMETRY ,&nbsp;RADIOMETRY , COPY_FOOTPRINT ,&nbsp;COPY_TO_SIBLING ,&nbsp;EDGE_DETECTION&nbsp;</strong>。</p>
<p>为了更直观的认识上面构建接缝线的方法，我还是用个简单的数据来说明问题：</p>
<p>数据是按照北西方法镶嵌，加上Footprint是这样的：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_Default.png" alt=""></p>
<p><strong>Geometry / 几何</strong>—— 根据当前的排序方法和Footprint来生成接缝线。通过这种方法生成的接缝线一眼就知道了栅格数据之间的压盖关系，并且接缝线（面）之间没有要素压盖。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_Geometry.png" alt=""><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_Geometry2.png" alt=""></p>
<p><strong>Radiometry/ 辐射度</strong>—— 通过检查相交区域的值和样式来构建接缝线，接缝线是Footprint交点之间的折线。这种方法拼接的影像看起来更自然一些。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_Radiometry.jpg" alt=""><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_Radiometry2.jpg" alt=""></p>
<p><strong>Copy_footprint/复制轮廓</strong>—— 这种方法的接缝线只是相应轮廓线的副本。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_CopyFootprint.png" alt=""></p>
<p><strong>Copy_to_sibling/复制到同类</strong>—— 此方法将已有的接缝线复制到与其组名相同的同类要素中。这种方法常常用于全色波段与多光谱波段范围不同的卫星影像，从而确保它们共享相同的接缝线。&nbsp;这里没有合适的数据，不放图了。</p>
<p><strong>Edge_detection/边缘检测</strong>—— 对相交区域应用边缘检测过滤器，以确定该区域中要素的边。然后，沿检测到的边创建接缝线。这种方法创建的接缝线也很漂亮和自然。</p>
<p>举个例子，看下面的影像边界是不是扎眼？</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_EdgeDetection.jpg" alt=""></p>
<p>使用边界探测方法创建接缝线后，一条沿着马路的折线（面的边界）产生了。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_EdgeCreation.jpg" alt=""></p>
<p>使用 接缝线方法拼接后就更加自然了。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance2_Done.png" alt=""></p>
<p><strong>Sort Method</strong></p>
<p>默认情况下，Seamline 排序是使用 “North-West” 镶嵌方法生成的。还可以选择使用 “CLOSEST_TO_VIEWPOINT&nbsp;” 或 “BY_ATTRIBUTE&nbsp;” 镶嵌方法来创建接缝线。这与前面说的镶嵌方法的理念是一样的，不再啰嗦了。</p>
<p><strong>Cell Size</strong></p>
<p>像元大小用于确定要生成接缝线时的栅格大小。</p>
<p>通常用在镶嵌数据集中存在多种数据分辨率并且只想为一个等级生成接缝线的情况。例如，如果将高分辨率数据源与低分辨率数据源进行混合，则可指定适合其中一个数据源范围的像元大小。如果存在多个 LOWPS（低像素大小）值，或者不确定要指定哪个像元大小，可将此参数留空。该工具将自动在适当的等级上创建接缝线。此参数的单位与镶嵌数据集的空间参照单位相同。</p>
<p><strong>沿接缝线混合（羽化）</strong></p>
<p>可以定义沿接缝线发生的混合的混合值（羽化）和类型，混合发生在接缝线上有重叠栅格的像素之间。</p>
<p><strong>Blend Width Units</strong></p>
<p>定义混合宽度的单位。默认是 PIXELS（像素）；还可选择 GROUND_UNITS，也就是也镶嵌数据集的单位相同。</p>
<p><strong>Blend Width</strong></p>
<p>混合宽度定义要混合的像素数目。</p>
<p><strong>Blend Type</strong></p>
<p>BOTH，INSIDE，OUTSIDE 三种混合类型。</p>
<p>例如：如果“混合宽度”值为 10，且使用 BOTH 作为混合类型，则将在接缝线的内部和外部分别混合 5 个像素。如果该值为 10，且混合类型为 INSIDE，则将在接缝线的内部混合 10 个像素。</p>
<p><strong>Request Size Type</strong></p>
<p>PIXELS — 将根据像素大小修改请求大小。根据栅格像素大小对最近图像进行重采样。</p>
<p>PIXELSIZE_FACTOR —将根据像素大小因子修改请求大小。通过将像元大小等级表（Level Table）中的 &nbsp;Cell Size 与 Pixel Size Factor 相乘对最近图像进行重采样。</p>
<p><strong>Request Size</strong></p>
<p>此参数决定对栅格进行重采样的大小，用于定义行列数。最大值为 5000。可以基于栅格数据的复杂程度增大或减小该值。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（七）色彩平衡与接缝线 Ⅰ]]></title>
      <url>/2014/11/17/MDColorBalance1/</url>
      <content type="html"><![CDATA[<p>镶嵌数据集的色彩平衡与接缝线  Ⅰ</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance1_Toolset.png" alt=""></p>
<p><br></p>
<p><strong>色彩平衡</strong></p>
<p>镶嵌数据集一般由多张影像组成的，各幅影像可能由于各种原因存在色彩差异，例如航摄时的天气、光线等原因。为了让整个镶嵌数据集看起来是无缝的一整张，而不是一片一片的，我们需要做的就是色彩校正，或者叫做色彩平衡（均衡）。也就是实现下面的效果：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance1_Demo.png" alt=""></p>
<blockquote>
<p>做色彩校正之前，需要检查原始数据的所有波段是不是满足下面几个条件：</p>
<ul>
<li>所有波段已经创建统计值（包括直方图）；</li>
<li>所有栅格数据集具有相同的波段数；</li>
<li>所有栅格数据集的像素类型和像素深度都相同（只支持 8 位无符号和 16 位无符号位深度）；</li>
<li>所有栅格数据集都没有关联的色彩映射表。</li>
</ul>
</blockquote>
<p><br></p>
<p><br></p>
<h1 id="Color-Balance-Mosaic-Dataset-工具用于实现镶嵌数据集的色彩平衡。"><a href="#Color-Balance-Mosaic-Dataset-工具用于实现镶嵌数据集的色彩平衡。" class="headerlink" title="Color Balance Mosaic Dataset 工具用于实现镶嵌数据集的色彩平衡。"></a><strong>Color Balance Mosaic Dataset</strong> 工具用于实现镶嵌数据集的色彩平衡。</h1><h2 id="Balance-Method"><a href="#Balance-Method" class="headerlink" title="Balance Method"></a><strong>Balance Method</strong></h2><p>工具提供了三种匀色的算法：</p>
<p><strong>匀光/Dodging</strong></p>
<p>这是传统的匀光摄影测量方法。 如果选择“匀光/Dodging”，需要同时选择<strong>目标颜色表面类型</strong> 。此方法会参照目标颜色来更改每个像素值，使图像均匀过渡到目标颜色。多数情况下，匀光平衡效果最佳。</p>
<ul>
<li>SINGLE_COLOR  — 所有像素都参照一个单色点（即，平均值）进行匀光处理。</li>
<li>COLOR_GRID    — 所有像素都参照分布在整个镶嵌数据集中的多组点进行匀光处理。</li>
<li>FIRST_ORDER   — 所有像素都参照从二维多项式倾斜平面获取的多个点进行匀光处理。与“颜色格网”表面相似。                           </li>
<li>SECOND_ORDER  — 所有像素都参照从二维多项式抛物线/双曲线/椭圆表面获取的一组多点进行匀光处理。与“颜色格网”表面相似。</li>
<li>THIRD_ORDER   — 所有像素都参照从三次表面获取的多个点进行匀光处理。</li>
</ul>
<p>PS：</p>
<ul>
<li>当栅格数量较少且地物类型较少时，单色表面会取得良好的效果。如果栅格数据较多或者地物类型较多时，这种方法输出颜色可能会变得模糊。</li>
<li>如果有大量的栅格或区域含有大量的地面物体类型，这种方法会产生非常好的输出效果。</li>
<li>First Order，Second Order, Third Oder 这三种方法与“颜色格网”表面相比，多项式阶表面的颜色变化通常更为平滑，并且使用的辅助表存储空间更少，但往往需要花费更长的时间进行处理。</li>
</ul>
<p><strong>直方图/Histogram</strong></p>
<p>此方法将根据目标直方图更改各像素值。可基于所有栅格自动计算目标直方图，也可以指定一个目标栅格。<br>当镶嵌数据集中的所有栅格的直方图形状都相似时，直方图平衡会取得较好的效果。</p>
<p><strong>标准差/Standard Deviation</strong></p>
<p>此方法将根据标准差计算更改每个像素值。可基于所有栅格或指定的目标栅格自动计算标准差值。<br>当镶嵌数据集中的所有栅格的正态值具有相同的直方图分布时，标准差平衡的效果最好。</p>
<h2 id="Target-Raster"><a href="#Target-Raster" class="headerlink" title="Target Raster"></a><strong>Target Raster</strong></h2><p>上面三种方法中所使用到的数值，既可以来源于镶嵌数据集自身，也可以来源于自己指定的目标栅格。</p>
<p>不同的色彩平衡方法：</p>
<ul>
<li>使用匀光平衡时，得出的目标颜色取决于当时所选择的目标颜色表面类型。<ul>
<li>对于 SINGLE_COLOR，将使用参照目标图像的平均值。</li>
<li>对于 COLOR_GRID，会将参照目标图像重采样为适合的格网。</li>
<li>对于 多项式阶表面，通过最小二乘拟合从参照目标图像获得多项式的系数。</li>
</ul>
</li>
<li>使用直方图平衡时，将基于参照目标图像获得目标直方图。</li>
<li>使用标准差平衡时，将基于参照目标图像获得目标标准差。</li>
</ul>
<h2 id="Block-Filed"><a href="#Block-Filed" class="headerlink" title="Block Filed"></a><strong>Block Filed</strong></h2><p>从镶嵌数据集的属性表中指定一个用于“分组”的字段，在执行计算和操作时，用于标识应被视为单一项目的多个项目。</p>
<p><br><br><br></p>
<p><strong>预处理选项</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance1_PreProcessing.png" alt=""></p>
<p>在执行栅格数据集色彩平衡之前，工具会先执行预处理选项。</p>
<h1 id="Exclude-Area-Raster"><a href="#Exclude-Area-Raster" class="headerlink" title="Exclude Area Raster "></a><strong>Exclude Area Raster </strong></h1><p>用于排除不能或者难于进行色彩校正的区域，例如：水、云和异常区域等。本质上就是创建一个掩膜，从而从镶嵌数据集色彩校正算法中排除一些像素。</p>
<p>PS： 对镶嵌数据集进行色彩校正时，排除区域并不会经常用到。只有当存在较难校正的区域，且不希望因为这些问题区域产生偏差时，可创建排除区域。另外，像素分布中的极值（极低像素值和极高像素值）区域也可能成为色彩校正的问题区域。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance1_Exclude.png" alt=""></p>
<p>那如何生成这个排除区域栅格呢？</p>
<p>工具箱中提供 <strong>Generate Exclude Area</strong> 工具，下面就来看看这个工具。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance1_ExcludeArea.png" alt=""></p>
<p>通过输入数据选择 <strong>位深</strong> 和 <strong>生成</strong> 方法：</p>
<p><strong>Pixel type：</strong></p>
<p>此参数用于选择输入栅格数据集的像素深度。像素深度非常重要，因为需要对所有 8 位以上的像素深度调整色彩掩膜和直方图值。</p>
<ul>
<li>8_BIT  —  0 到 255 之间。这是默认值；</li>
<li>11_BIT —  0 到 2047 之间；</li>
<li>12_BIT —  0 到 4095 之间；</li>
<li>16_BIT —  0 到 65535 之间。</li>
</ul>
<p><strong>Generate Method：</strong></p>
<p>提供了两种方法：COLOR_MASK ，HISTOGRAM_PERCENTAGE</p>
<ul>
<li>COLOR_MASK — 可以设置要在输出中排除的最大颜色值。这是默认设置。</li>
<li>HISTOGRAM_PERCENTAGE — 可以设置像素的最小和最大直方图百分比。</li>
</ul>
<p><strong>Stretch Type</strong></p>
<p>如果我们指定的了拉伸类型，那么就意味着在色彩平衡的过程中，使用的是栅格数据拉伸后的值，而不是栅格数据的原始像元值。</p>
<ul>
<li>NONE — 不应用预拉伸。这是默认设置。</li>
<li>ADAPTIVE — 自适应预拉伸。</li>
<li>MINIMUM_MAXIMUM — 最小值-最大值预拉伸。</li>
<li>STANDARD_DEVIATION — 标准差预拉伸。</li>
</ul>
<p><strong>Gamma</strong></p>
<p>当选择了标准差拉伸或最小值-最大值拉伸时，可以额外的设置Gamma值。可通过应用 Gamma 拉伸来控制图像的整体亮度。<br>如果 Gamma 系数设置得太低，中间色调将太暗；而如果 Gamma 系数设置得太高，中间色调又会太亮。Gamma 系数不仅会改变图像的亮度，还会改变红绿蓝之间的比率。</p>
<p>如果对色彩校正的不满意，我们也可以移除效果，镶嵌数据集的右键菜单中，Remove – Color Balancing。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDColorBalance1_Remove.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（六）镶嵌数据集的属性 Ⅲ]]></title>
      <url>/2014/11/11/MDProperties3/</url>
      <content type="html"><![CDATA[<p><strong>设置镶嵌数据集属性工具 Ⅲ</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties3_Toolset.png" alt=""></p>
<p>这一篇接着，再接着，说这个参数无比巨多的工具 Set Mosaic Dataset Properties， 看看其中的 Catalog Item Properties 对应的各个参数的作用 。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties3_Catalog.png" alt=""></p>
<p><br></p>
<p><strong>元数据级别</strong></p>
<p>Metadata Level 参数用于定义从服务器到客户端的元数据传输量。如果要传输大量元数据，此属性将会影响传输时间，因此可选择对其进行限制。</p>
<p>通过下面三个选项，选择发布镶嵌数据集时从服务器提供给客户端的元数据级别：</p>
<ul>
<li>FULL —所有元数据将被传输，包含基本栅格数据集信息及函数链的详细信息。这是默认设置。</li>
<li>BASIC —将传输栅格数据集级别信息，比如列和行、像元大小和空间参考信息。</li>
<li>NONE —不提供任何元数据给客户端。</li>
</ul>
<p><strong>允许传输的字段</strong></p>
<p>Allowed Transmission Field 参数列表，定义将镶嵌数据集作为服务提供时属性表中对客户端可见的字段。</p>
<p>默认情况下，此列表包括字段：Name, MinPS, MaxPS, LowPS, HighPS, Tag, GroupName, ProductName, CenterX, CenterY, ZOrder, Shape_Length, Shape_Area。如果镶嵌数据集中包含自定义字段，这个列表中除了上面的字段，还会出现自定字段。</p>
<p><strong>许是否启用时间</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties3_Time.png" alt=""></p>
<p>如果镶嵌数据集包含定义时间的属性字段，可创建自动具有时间感知性的镶嵌数据集。</p>
<p>如果激活了时间，则需要指定与时间有关的其他参数——起始和结束字段，以及时间格式。建议将时间值存储在日期字段中，但也支持字符串和数值字段。</p>
<p><strong>地理变换方法</strong></p>
<p>如果镶嵌数据集的坐标系统不同于源栅格数据坐标系统，则可能需要指定特定的地理变换方法。通过 Geographic Transformation 参数列表选择地理变换。</p>
<p><strong>可下载的最大项目数</strong></p>
<p>Max Number of Download Items 参数用来限制客户端可从影像服务中下载的栅格数量。该值会影响系统负荷。</p>
<p>如果不希望客户端从镶嵌数据集内下载任何栅格，可将其设置为 0。另外注意，Grid格式数据源的镶嵌数据集不能下载。</p>
<p><strong>返回的最大记录数</strong></p>
<p>以影像服务的形式查看镶嵌数据集时，Max Number of Records Returned 参数用来限制，针对客户端每个请求，服务器返回的记录数。</p>
<p><strong>最小像素作用</strong></p>
<p>只看中文名字让人有点晕，实际上 Minimum Pixel Contribution 参数用于指定镶嵌数据集中的项目需要至少具有多少像素才能在镶嵌数据集中使用。默认值为1个像素。</p>
<p>我们可以设置合理的值，这样镶嵌数据集会跳过所有像素量不够大的栅格项目。跳过这些镶嵌数据集项目将有助于提高镶嵌数据集的计算或显示性能。这在大量叠置栅格只具有少量像素时尤其有用。</p>
<p>但是，同时需要知道，较大的值可能减少重叠项目成为感兴趣区组成部分的可能性；这会导致您的镶嵌数据集的某些区域空白。</p>
<p>特别需要注意的是，镶嵌数据集的属性中有其他两项属性与这个选项可能存在矛盾关系，因此，此属性仅在 <strong><em>始终将栅格裁剪至其轮廓</em></strong> 设置为“<strong>是</strong>”，并且 <strong><em>轮廓线可能含有 NoData</em></strong> 设置为 <strong>否</strong> 时有效。否则可能会无视这个选项。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties3_MinPixel.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（五）镶嵌数据集的属性 Ⅱ]]></title>
      <url>/2014/11/10/MDProperties2/</url>
      <content type="html"><![CDATA[<p><strong>设置镶嵌数据集属性工具 Ⅱ</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_Toolset.png" alt=""></p>
<p>这一篇接着说这个参数无比巨多的工具 Set Mosaic Dataset Properties ，镶嵌属性这一组参数会控制多幅影像的拼接方式和顺序等。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_MDProperties.png" alt=""></p>
<p>如果我们的多幅影像的数据源之间没有重叠，那么拼接顺序就没有什么值得设置的。但是我们一般拿到的航片、卫片等都是有重叠的，不同的镶嵌规则会让数据在拼接出现差异，我们设置这一组参数来控制影像的拼接方式和顺序等。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_Overlap.png" alt=""></p>
<p><br></p>
<h1 id="Mosaic-Methods（镶嵌方法）"><a href="#Mosaic-Methods（镶嵌方法）" class="headerlink" title="Mosaic Methods（镶嵌方法）"></a><strong>Mosaic Methods（镶嵌方法）</strong></h1><p><img src="http://kikitamap.com/images/blogImg/MDProperties2_Method.png" alt=""></p>
<p>在“允许的镶嵌方法”中我们可以选择影像的镶嵌方法，从而控制用户访问镶嵌数据集时可以使用哪些方法。同时，可以设置一种方法作为默认方法。</p>
<ul>
<li>None 根据镶嵌数据集属性表中的顺序 (ObjectID) 对栅格进行排序。</li>
<li>Center - 根据栅格中心与视图中心的距离对栅格进行排序，与视图中心距离越小，栅格的默认次序越靠前。</li>
<li>NorthWest - 中心越靠近西北的栅格显示的位置越靠上。</li>
<li>LockRaster - 允许用户根据 ObjectID 锁定单个或多个栅格数据的显示。</li>
<li>ByAttribute - 根据已定义的元数据属性及其与基值的差对栅格进行排序。</li>
<li>Nadir - 根据像底点位置和视图中心的距离对栅格进行排序。此方法与“Center”方法类似，但使用的是栅格的像底点，像底点可以不是中心点，尤其是在倾斜的影像中。</li>
<li>Viewpoint - 使用“视点”工具根据用户定义的位置与栅格的像底点位置对栅格进行排序。</li>
<li>Seamline - 使用预定义的接缝线形状分割栅格（可以选择是否沿接缝线使用羽化功能）并根据属性表中的 SOrder 字段对影像进行排序。</li>
</ul>
<p>假设我现在有这样9幅影像数据源的镶嵌数据集，可以把他们理解成9张卡片。看图比看例子更容易理解，下面通过一个例子来了解各种镶嵌方法，前提是我们都是用升序排序和使用默认的 First 镶嵌运算符。</p>
<p>★ 选在<strong>None</strong>方法，默认使用了数据的存储顺序作为镶嵌顺序，也就是 ObjectID 的顺序。图中的数字即使各幅影像的 ObjectID，数字越靠前，镶嵌的也就越靠前。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_None.png" alt=""></p>
<p>★ 选择 <strong>Center</strong> 方法，中心的影像最优先：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_Center.png" alt=""></p>
<p>★ 选择 <strong>NorthWest</strong> 方法，我们看到位于西北角的 7 获得了最优先的镶嵌顺序，反之，东南角的9排在最后：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_NorthWest.png" alt=""></p>
<p>★ 选择 <strong>Lock Raster </strong>方法，允许客户端可以指定某些栅格数据，这样仅对被锁定的栅格进行显示：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_LockRaster.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_LockRaster2.png" alt=""></p>
<p>★ 选择 <strong>ByAttribute</strong> 方法，需要指定 <strong><em>Order Field</em></strong> ，例如按照自定义字段 MyOrder 排序：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_ByAttr.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_ByAttr2.png" alt=""></p>
<p>如果您的字段是数值或日期字段，则可以设置排序基础参数（<strong>_Order<em>Base</em></strong>）。可以根据此值与 Order_Field 中的其他值之间的差异对影像进行排序。</p>
<p>还可以指定排序是升序还是降序。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_ByAttr3.png" alt=""></p>
<p>★ 选择 <strong>Nadir</strong> 方法，类似于 Center 方法，只是像底点距离整个视图中心的距离成为镶嵌的标准：</p>
<p>如下图，点A即为像底点（nadir），在垂直摄影测量中，影像中心点和像底点可能是重合的：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_Nadir.pngr" alt=""></p>
<p>此方法与“Center”方法类似，但使用的是栅格的像底点，像底点可以不是中心点，尤其是在倾斜的影像中。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_Nidir2.png" alt=""></p>
<p>★ 选择 <strong>Viewport </strong>方法，可以使用“ViewPoint”工具根据自定义的位置与栅格的像底点位置对栅格进行排序。</p>
<p>ViewPoint 是个隐藏工具，我们可以在自定义菜单中找到并添加出来：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_Viewport.png" alt=""></p>
<p>打开 Viewpoint 窗口之后，我们就可以自定义视点，视点的位置将会影响栅格数据的镶嵌顺序，如下图。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_ViewPort2.png" alt=""></p>
<p>在设置镶嵌数据集属性的时候，参数 View Point Spacing X 与 View Point Spacing Y 会影响 ViewPoint 对话框中的箭头按钮的偏移量，偏移量的长度单位是当前空间参考决定的。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_Viewport3.png" alt=""></p>
<p>★ 选择 <strong>Seamline</strong> 方法，使用预定义的接缝线形状分割栅格，并且可以选择是否沿接边使用羽化功能。在生成接缝线的过程中对排序进行预定义。使用此镶嵌方法时，镶嵌运算符 LAST 无效。</p>
<p>镶嵌数据集的接缝线可以通过 <strong>Build Seamlines</strong> 工具来创建，这个工具后面会单独的总结一下。这里就不罗嗦了。</p>
<p><br></p>
<h1 id="Mosaic-Operator（镶嵌运算符）"><a href="#Mosaic-Operator（镶嵌运算符）" class="headerlink" title="Mosaic Operator（镶嵌运算符）"></a><strong>Mosaic Operator（镶嵌运算符）</strong></h1><p>镶嵌运算符用于确定如何解析重叠像元。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_Operator.jpg" alt=""></p>
<ul>
<li>First 重叠区域中所列出的第一个栅格数据集中的像元。</li>
<li>Last 重叠区域中所列出的最后一个栅格数据集中的像元。</li>
<li>Min 重叠区域中包含所有重叠像元中的最小像元值。</li>
<li>Max 重叠区域中包含所有重叠像元中的最大像元值。</li>
<li>Mean 重叠区域中包含所有重叠像元的平均像元值。</li>
<li>Blend 重叠区域是镶嵌影像中沿各栅格数据集边缘重叠的像元值的混合。默认情况下，各栅格的边由轮廓线或接缝线定义。</li>
<li>Sum 重叠区域中包含所有重叠像元的像元值总和。</li>
</ul>
<p><strong>Blend Width（混合宽度）</strong></p>
<p>当在上述方法中，定义混合（Blend）镶嵌运算符所使用的像素距离。</p>
<p>跨越边界时此值将分成两半；因此，如果该值为 40，则将在轮廓线内部混合 20 像素，在轮廓线外部混合 20 像素。</p>
<p>如果存在接缝线，可以在接缝线表中定义每个接缝线的混合宽度和类型，从而覆盖此值。</p>
<p>除了镶嵌方法以及有关的这些参数，镶嵌属性的设置参数中还包含了其他一些与镶嵌有关的参数，放在下面以便参考：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties2_MosaicPara.png" alt=""></p>
<p><strong>Max Number Per Mosaic（每个镶嵌图的最大栅格数）</strong></p>
<p>这个参数是为了镶嵌数据集镶嵌过多栅格数据，默认值为 20。</p>
<p>例如，在没有创建概视图时，不希望让机器耗费资源过多的去镶嵌栅格数据。但是这种情况下，很可能20幅图像不足够观看，如果你的机器硬件过硬，这个数字也可以适量调大。这个参数相当于性能与体验的博弈，在没有概视图的时候可以自己尝试设置。</p>
<p><strong>Cell Size Tolerance Factor （像元大小容差系数）</strong></p>
<p>用于控制具有不同像素大小的镶嵌数据集项目在某些操作（例如镶嵌或接缝线生成）中的分组方式。</p>
<p>系数 0.1 表示所有比最低像素大小高百分之十的 LowPS 值都被视为相同的值。此值必须大于或等于 0.0。可在等级表中查看结果。</p>
<p><strong>Output Cell Size（输出像元大小）</strong></p>
<p>镶嵌数据集的像元大小一般是自动计算的，我们也可以进行自定义。这个参数用于自定义指定镶嵌数据集的像元大小，可选择图层作为像元大小模板，也可指定实际像元大小。如果指定像元大小，可以将单个值用于方形像元大小，或者将 X 值和 Y 值用于矩形像元大小。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在Esri官网申请60天试用版 ArcGIS Desktop（已失效）]]></title>
      <url>/2014/11/02/ArcGISDesktopTrial/</url>
      <content type="html"><![CDATA[<p><strong>此方法已失效，esri官网更新了呢，点 <a href="http://kikitamap.com/2015/03/06/ArcGISPro60DayFreetrial/" target="_blank" rel="noopener">这里</a> 查看更新后的方法吧。</strong></p>
<p><br></p>
<p>在Esri的美国官网上，提供了当前最新版本 ArcGIS Desktop 的试用版，我们可以下载、安装、注册、试用，以及用于非商业目的学习和使用。</p>
<p>最近关心这个问题的朋友很多，为了使大家获得帮助，所以就插播了这篇。</p>
<h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><p>打开官网试用地址：<a href="http://www.esri.com/software/arcgis/arcgis-for-desktop/free-trial" target="_blank" rel="noopener">http://www.esri.com/software/arcgis/arcgis-for-desktop/free-trial</a></p>
<p>页面上提示申请人必须有个账号，两种情况：</p>
<ul>
<li>（1）已经账号直接登录申请；</li>
<li>（2）没有账号，先注册账号然后登录申请</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Login.png" alt=""></p>
<h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><p>如果已经有账号登陆即可，跳过这一步。如果没有账号，填写下面的信息，邮箱地址一定要真实的，可以收到邮件的。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_SignUp.png" alt=""></p>
<p>创建新的账户之后，网站会向填写的邮箱发送一封邮件，去自己的邮箱中看看吧。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_EmailSent.png" alt=""></p>
<p>邮件的主题为：<strong>Important information about activating your Esri Account</strong>。收到的邮件这个样子，点击最下面的激活按钮，跳转到 esri 网站。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_EmailSample.png" alt=""></p>
<p>在网页中填写对应的信息即可，这就不啰嗦了。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_SignIn.png" alt=""></p>
<h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h2><p>无论是新创建的账号还是已有账号，登录账号。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_SignIn2.png" alt=""></p>
<p>##Step 4</p>
<p>登陆之后，就看到了ArcGIS Desktop 的试用页面。如果不确定自己的机器是否能安装 ArcGIS Desktop软件，可以点击页面上的 <strong>System Requirements（系统要求）</strong>，看看自己的机器的操作系统、硬件配置等是否满足要求。</p>
<p>我们需要的是 ArcGIS for Desktop。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Download.png" alt=""></p>
<h2 id="Step-5"><a href="#Step-5" class="headerlink" title="Step 5"></a>Step 5</h2><p>点击 ArcGIS for Desktop 后面的 Download 按钮，在弹出的小窗口中，有一个免费提供试用的许可号码，<strong>EVA123456789</strong>。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_EVA.jpg" alt=""></p>
<p>如果这个窗口不小心被关闭了，也没有关系，这个号码也发送了邮箱中，还是可以找到它的……</p>
<p>如果没有ArcGIS安装包，那就点 Continue to Download 下载；已经有安装包了，就不需要下载了，保存好许可号码即可。</p>
<h2 id="Step-6"><a href="#Step-6" class="headerlink" title="Step 6"></a>Step 6</h2><p>安装 ArcGIS Desktop 软件，安装完成之后，在【开始】菜单 的ArcGIS 目录中启动程序 ArcGIS Administrator。按照如下顺序找到授权按钮：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_SingleUse.png" alt=""></p>
<p>在弹出的新窗口中选择：我已经安装了软件，现在要进行授权，下一步。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Authorize.png" alt=""></p>
<p>如果安装 ArcGIS Desktop的机器是能够上网的，那就用最快捷的“通过Internet授权”，下一步。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Internet.png" alt=""></p>
<p>后面的两个页面是填写个人信息，工作行业与职业等信息，根据自己的实际情况填写即可，带星号的是必须填写的，然后下一步。</p>
<p>将开始申请的许可号码填进去，下一步。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_FillEVA.png" alt=""></p>
<p>然后，一路下一步，等到出现进度条开始联网授权，这时确保不要断网，耐心等待一两分钟。出现“Congratulations……”，授权就结束了。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMap60DayFreetrial_Congrs.png" alt=""></p>
<p>好了，现在就可以开始使用 ArcGIS Desktop 软件了……</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
            <tag> License </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（四）镶嵌数据集的属性]]></title>
      <url>/2014/10/29/MDProperties/</url>
      <content type="html"><![CDATA[<p><strong>设置镶嵌数据集属性工具</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties3_Toolset.png" alt=""></p>
<p>我们可在镶嵌数据集属性窗口看到 General，Default，Key MetaData 三个选项卡。</p>
<ul>
<li><p>General 中包含了类似单个栅格数据集的属性信息，例如像元大小、像元类型、位深、范围等等信息，详情可以戳 <a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//009t00000018000000" target="_blank" rel="noopener"><strong>这里</strong></a>，不再赘述；</p>
</li>
<li><p>Default 选项卡中包含了一些镶嵌数据集所特有的属性，这些属性将会影响客户端查看镶嵌数据集的显示方式和交互方式；</p>
</li>
<li><p>如果为镶嵌数据集定义了产品定义，则 Key Metadata 将来自产品定义，Key Metadata 包含了用于渲染和一些处理过程的波段和波长信息。</p>
</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties_Defaults.png" alt=""></p>
<p>★ 需要注意的是，如果我们在图层列表中去修改镶嵌数据集的默认属性，这种修改不会存储到镶嵌数据集内部，因此当移除图层，这些设置就失效了。图层上的修改，一般用于临时查看修改效果，或者多个用户访问镶嵌数据集，并且希望自己的修改不影响到其他人。</p>
<p>而我们在Catalog中，镶嵌数据集的属性中设置的属性是存储在镶嵌数据集中。 需要了解Default 选显卡中各个属性项的作用和对镶嵌数据集的影响，非常详细的说明就戳<strong> <a href="http://resources.arcgis.com/zh-cn/help/main/10.2/#/na/009t00000038000000/" target="_blank" rel="noopener">这里</a></strong>，注意其中部分参数仅适用于镶嵌数据集作为 Image Service 发布和访问的情形。</p>
<p>在工具箱中提供了一个可以设置这些属性的工具  Set Mosaic Dataset Properties 关于这个工具，我就结合镶嵌数据集属性来说明各个参数的作用和适用情况。由于这是一个很多很多参数的工具，这一篇先说说影像属性部分的参数吧。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties_ImageProperties.png" alt=""></p>
<p><strong>影像属性</strong></p>
<p><strong><em>Maximum Size Of Requests</em></strong>：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties_MaxRequest.png" alt=""></p>
<p>控制每次生成镶嵌影像时的最大行数和列数。仅当将镶嵌数据集作为影像服务而发布和访问时，此属性才适用。</p>
<p><strong><em>Allowed Compression Methods</em></strong>：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties_Compression.png" alt=""></p>
<p>定义将镶嵌影像从服务器传输到客户端时所使用的压缩方法。如果通过 LAN 访问影像服务，即使数据量很大也不会引发问题。但通过速度较慢的 Internet 连接访问时，最好在传输前对影像进行压缩。压缩会减小传输影像的大小，但服务器需要先对数据进行压缩，因而增添了额外负荷。如下是几种压缩方法的整理：</p>
<ul>
<li><strong>None</strong> —— 不压缩影像，这可以提供最高质量的影像，但是在网络中需要传输的数据量最大。</li>
<li><strong>LZ77</strong> —— 一种高效的无损压缩方法，推荐用于具有相似像素值（离散数据）的影像，例如扫描的地图或分类后的影像。</li>
<li><strong>JPEG</strong> —— 一种高效的压缩方法，它通常可将影像压缩三至八倍，但在影像质量上有轻微损失。如果选择 JPEG 方法，也可通过输入 0 至 100 之间的任意值来编辑质量。值 80 提供大约 8 倍的压缩，通常能够保证影像质量。</li>
<li><strong>LERC</strong> —— 一种高效的有损压缩方法，推荐用于具有较大像素深度的数据（如浮点型、32 位、16 位或 12 位数据）。选择此方法时，需要指定代表每个像素所适用的最大错误值的质量值。该值以镶嵌数据集的单位指定。例如，如果误差为 10 厘米而镶嵌数据集的单位为米，则输入 0.1。对于浮点型数据，LERC 比 LZ77 的压缩效果好 5 到 10 倍，压缩速度快 5 到 10 倍；对于整型数据，LERC 的压缩效果和压缩速度更优于 LZ77。使用整型数据并且指定的错误限制为 0.99 或更低时，LERC 相当于无损压缩。</li>
</ul>
<p><strong><em>Default Resampling Method：</em></strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties_Resampling.png" alt=""></p>
<ul>
<li><strong>NEAREST</strong> —— 使用最邻近采样法可获得较精确的辐射度值。这种方法通常速度较快，但会导致要素的边呈锯齿状。</li>
<li><strong>BILINEAR</strong> —— 双线性插值法可提供较平滑的影像，但会导致某些影像被滤除掉。对于连续栅格数据，建议使用双线性插值法。</li>
<li><strong>CUBIC</strong>—— 与双线性插值相比，三次卷积插值法生成的几何更加精确，但速度较之稍慢。</li>
<li><strong>MAJORITY</strong> —— 众数法最适用于离散数据。</li>
</ul>
<p><strong><em>Clip to Footprint：</em></strong></p>
<p>许多情况下，栅格和轮廓线是相同的，但当它们不同时，您可以指定是否裁剪栅格。</p>
<p><strong><em>Footprints May Contain NoData：</em></strong></p>
<p>指定镶嵌数据集的轮廓线是否包含 NoData 的像素。如果选择包含，可以确保footprint中不包含洞。</p>
<p><em><strong>Clip To Boundary</strong>：</em></p>
<p>指定是否要裁剪镶嵌数据集的影像到边界，或显示整个镶嵌影像。</p>
<p><strong><em>Color Correction：</em></strong></p>
<p>设置是否启用为镶嵌数据集设置的色彩校正</p>
<p><strong><em>Allowed Mensuration Capabilities：</em></strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties_Mensuration.png" alt=""></p>
<ul>
<li><strong>None</strong>  — 不使用任何测量功能；</li>
<li><strong>Basic</strong> — 允许计算距离、点、质心和面积；</li>
<li><strong>Base-Top Height</strong> — 允许测量底部至顶层高度。要执行底部至顶层高度测量，需要有理多项式系数 (RPC) 信息.</li>
<li><strong>Base-Top Shadow Height</strong> — 允许测量底部至顶层阴影高度。要执行底部至顶层阴影高度测量，需要太阳方位角和太阳高程信息。</li>
<li><strong>Top-Top Shadow Height</strong> — 允许测量顶部至顶部阴影高度。要执行此测量，需要太阳方位角、太阳高程和有理多项式系数 (RPC) 信息。</li>
<li><strong>3D</strong> — DEM 可用时，可进行 3D 测量。</li>
</ul>
<p>具体对应的测量工具，我们可以在 Image Analysis 窗口中使用。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties_ImageAnalysis.png" alt=""></p>
<p>有关影像测量这一块将来如果有时间会单独整理一下，这里不再插入了，不然篇幅过长了。_</p>
<p><strong>Data Source Type：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDProperties_DataSource.png" alt=""></p>
<ul>
<li>Generic - 通用类型，镶嵌数据集没有指定的数据类型。</li>
<li>Thematic - 镶嵌数据集为专题型，专题数据具有离散值。</li>
<li>Processed -镶嵌数据集已得到处理。镶嵌数据集的颜色已经过调整。</li>
<li>Evelation -镶嵌数据集包含高程数据。</li>
</ul>
<p>琳琅满目的影像属性参数就说到这里，下一篇接着说设置镶嵌数据集属性中的镶嵌属性参数。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（三）概视图/Overviews]]></title>
      <url>/2014/10/28/MDOverviews/</url>
      <content type="html"><![CDATA[<h2 id="了解概视图"><a href="#了解概视图" class="headerlink" title="了解概视图"></a>了解概视图</h2><p>定义/创建概视图类工具**</p>
<p><img src="http://kikitamap.com/images/blogImg/MDOverviews_Toolset.png" alt=""></p>
<p>这一贴，接着说镶嵌数据集的概视图（Overview），如果你对栅格数据集的金字塔有所了解，那就能立即理解概视图的作用。概视图实际上是对镶嵌数据集显示上的”抽稀“，通过重采样生成多层低分辨率的栅格，用与不同比例尺下显示镶嵌数据集。无论是金字塔还是概视图，它们的目的都是为了提高栅格数据的显示速度和减少CPU的运算，从而提升体验。</p>
<p>ArcGIS的帮助文档中有这样一幅图，可以很好的说明数据源、金字塔、概视图之间的关系：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDOverviews_Relations.png" alt=""></p>
<p>如果不创建概视图，那么在显示镶嵌数据集的时候，ArcMap会以动态方式对整个数据集进行处理，这样可想而知，一个庞大的镶嵌数据集，会消耗大量系统资源，甚至可能使资源消耗殆尽。没有概视图，每缩放或者挪动镶嵌数据集，ArcMap都动态运算显示的区域，这是个效率很低的事情。有时有朋友遇到，加入的镶嵌数据集是漆黑一片，那么很可能是没有创建概视图。</p>
<p>如果我们尚未对栅格数据构建金字塔和统计数据，可以使用工具 <strong>Build Pyramids And Statistics</strong> 对镶嵌数据集内的栅格数据批量创建金字塔和概视图，然后再创建概视图。栅格数据的金字塔会减少镶嵌数据集需要创建的概视图数据量。如果加入镶嵌数据集的栅格数据是下面的两种情形，推荐优先创建栅格金字塔再创建镶嵌数据集概视图：（1）可以接合没有重叠区的，也就是可以不受镶嵌方法影像的（2）参数和镶嵌方法不需要更改的，需要动态处理的栅格数据。</p>
<p>用于生成概视图的工具有两种： Define Overviews 和 Build Overviews。</p>
<p>除了上面的两个工具之外，我们在向镶嵌数据集中添加栅格数据时，也可以勾选创建概视图，这样会使用默认设置构建概视图。如果我们不需要对Footprint做修改的时候，可以在添加栅格数据时勾选这个选项直接创建概视图。</p>
<p><br></p>
<h2 id="Build-Overviews"><a href="#Build-Overviews" class="headerlink" title="Build Overviews"></a><strong>Build Overviews</strong></h2><p>这个工具可以定义缺失的概视图、更新及生成概视图。此工具支持镶嵌数据集的默认设置（也就是在Catalog中打开镶嵌数据集属性，在Default页签上的设置），但是在 ArcMap 中基于图层的设置对于这个工具是无效的。概视图的第一个级别在镶嵌数据集的全分辨率下创建，后续各个级别均在上一次生成的概视图级别基础上构建。工具中还有几个参数可以配置，用来满足不同构建概视图的需求。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDOverviews_OverviewOptions.png" alt=""></p>
<p>工具默认会创建缺失的概视图，更新过期的概视图，如果有特别要求，可以按照下面的依据配置：</p>
<p>-（1）如果我们向镶嵌数据集添加了新数据集，而没有定义新增的概视图时，需要勾选 Define Missing Overview Tiles。如果个别情况下，不希望为新增的数据定义和新建概视图，取消勾选这一项。<br>-（2）如果我们已经定义了概视图，但是尚未生成，则需要勾选 Generate Missing Overview Images Only。<br>-（3）如果基础栅格数据集发生更改或其属性进行过修改，会将概视图识别为过期的概视图（Stale Overview），最后一个选项就是来控制是否更新过期的概视图。例如，我们从当前数据集移除了一些栅格数据，或者修改了轮廓线，那么原来创建的概视图就标识为了过期的概视图，这时候如果需要更新，应该勾选这一项的。</p>
<p><br></p>
<h2 id="Define-Overviews"><a href="#Define-Overviews" class="headerlink" title="Define Overviews"></a><strong>Define Overviews</strong></h2><p>如果创建概视图的默认设置不能满足我们的需要，我们还可以使用 Define Overviews 预先自定义配置：</p>
<p><strong>定义Overview的写入位置：</strong></p>
<p>默认情况下，会在镶嵌数据集所处位置旁的文件夹中生成和存储概视图。此文件夹的名称与地理数据库的名称相同，具有 .overview 扩展名。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDOverviews_Path.png" alt=""></p>
<p>如果镶嵌数据集创建于 ArcSDE 地理数据库，默认将在该地理数据库中创建概视图。</p>
<p>以Oracle为例，有关镶嵌数据集的信息存储在<strong>GDB_ITEMS</strong> 和 <strong>GDB_ITEMTYPES</strong>系统表中。创建该镶嵌数据集的用户的方案中可能还存储着 12 个其他的表。其中 <strong>ART、BND、CAT</strong>和<strong>LOG</strong>这四个表在使用创建的镶嵌数据集时创建；其他表则在首次执行要用到对应表的操作时生成。</p>
<p><strong><code>AMD_NAME_OVR</code></strong>，这张表默认用来存储概视图。默认情况下，为镶嵌数据集创建的金字塔栅格存储在此表中。如果使用“定义概视图”工具更改概视图的存储位置，将不会填充此表。而是将指向概视图位置的指针存储在<strong><span style="font-family:Courier New;"> AMD_&lt;NAME&gt;_CAT</span></strong> 表的 urihash 字段中。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDOverviews_SDEtable.png" alt=""></p>
<p><strong>定义Overview的边界范围：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDOverviews_Extent.png" alt=""></p>
<p>默认情况下，在镶嵌数据集边界内的区域创建金字塔。</p>
<p>我们也可以根据一些特定的需要，来指定生成概视图的范围，范围可以来自栅格数据集的范围，矢量要素数据的外接矩形，或者手工指定四边的坐标范围。</p>
<p><strong>定义Overview块参数：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDOverviews_Block.png.png" alt=""></p>
<p><strong>像元大小</strong>：默认情况下，工具会自动计算用于生成概视图的基础像素大小。我们也可以从某一特定分辨率开始创建概视图。例如，数据量巨大的高分辨率栅格数据添加到镶嵌数据集中，实际上仅需要分辨率一般的整体拼接效果，那调整至合适的像元大小即可。</p>
<p><strong>等级数目：</strong>此参数决定生成的金字塔等级数。例如，3 表示将生成三个Overview 等级。如果值留空或为 -1，则系统会生成最佳数量的概视图。</p>
<p><strong>行、列数：</strong>可以通过定义最佳的行数和列数的方式来限制概视图的物理尺寸。我们需要考虑到：值越大，文件（块）尺寸也就越大，Overview区域对应的任意栅格数据发生变化时需要重新生成Overview的可能性也越大。该数值还会影响栅格数据集创建的概视图的数目。如果是一个较大的数值，则将生成较小数量的概视图文件（块）；如果是一个较小的数值，则会生成较多的概视图文件（块）。</p>
<p><strong>概视图采样系数：</strong>可以通过概视图采样系数来控制栅格数据集创建的概视图的数目。此系数可以确定后续概视图的大小。例如，如果第一个等级的像元大小为 x，概视图采样系数为 3，则下一等级的概视图像元大小将为 3x。也就是，系数越大，生成的概视图就越少，但同时，这会影响镶嵌图像的显示速度。通常，概视图等级越多，显示的速度就越快，因为这减少了重采样的次数。您还可以控制是否在概视图生成中考虑栅格的金字塔。可能使用您不喜欢的重采样方法生成了原始金字塔，也可能由于某种其他原因而不需要使用任何金字塔。您可以选中定义概视图工具对话框中的“强制概视图切片参数”选项，这样将忽略所有栅格金字塔，并从大于栅格基础像素大小的系数开始定义概视图。例如，如果系数为 3，而基础像素大小或栅格为 1 米，则将以 3 米开始生成概视图。此外，您的镶嵌数据集可能由数据源大量混合而成，并且由于某种原因，您需要使用最开始的金字塔的一部分，而不是全部。您可以定义概视图开始位置的像素大小。</p>
<p><strong>强制概视图切片参数：</strong>这个参数用于控制在概视图生成中是否考虑栅格数据的金字塔。我们可能由于某种原因而不需要使用原始数据的金字塔，那么就勾选此选项，这样将忽略所有栅格金字塔，并从大于栅格基础像素大小的系数开始定义概视图。例如，如果镶嵌数据集系数为 3，而原始栅格数据的像素大小为 1 米，则将以 3 米的像元大小开始生成概视图。</p>
<p>定义Overview图像参数：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDOverviews_ImagePara.png" alt=""></p>
<p>  我们可以根据数据的实际情况定义：重采样方法、压缩方法和压缩质量。例如，对于专题数据，一般可选择最邻近法；而对于航空摄影或卫星影像，一般可使用双线性插值法或三次卷积插值法。我们可以选择不进行压缩、进行无损压缩或进行可定义总体图像质量的压缩。不同的压缩方法会影响生成Overview的大小。例如，质量为 75 的 JPEG 压缩一般可提供最佳的数据质量及文件大小。</p>
<p>定义镶嵌数据集的参数繁多，但是总结起来，都是对镶嵌数据集概视图大小和质量的控制，几个参数可以单独使用，也可以组合使用。</p>
<p>如果平时遇到概视图相关的问题，还是一定要结合自己的数据对比这些参数，考虑是否有排除错误和优化性能的好方法。</p>
<p>您还可以控制是否在概视图生成中考虑栅格的金字塔。可能使用您不喜欢的重采样方法生成了原始金字塔，也可能由于某种其他原因而不需要使用任何金字塔。您可以选中定义概视图工具对话框中的“强制概视图切片参数”选项，这样将忽略所有栅格金字塔，并从大于栅格基础像素大小的系数开始定义概视图。例如，如果系数为 3，而基础像素大小或栅格为 1 米，则将以 3 米开始生成概视图。</p>
<p>此外，您的镶嵌数据集可能由数据源大量混合而成，并且由于某种原因，您需要使用最开始的金字塔的一部分，而不是全部。您可以定义概视图开始位置的像素大小。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（二）镶嵌数据轮廓线与边界]]></title>
      <url>/2014/10/17/MDFootprint/</url>
      <content type="html"><![CDATA[<p>上一篇帖子说明了如何创建镶嵌数据集、添加栅格数据，以及相关的常用参数配置。</p>
<p>下面再接着说如何根据自己的各种需要来修改镶嵌数据集，这一贴的主题主要是如何创建、修改镶嵌数据集的轮廓线和边界。</p>
<p><strong>修改镶嵌数据轮廓线、边界类工具</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDFootprint_Toolset.png" alt=""></p>
<p>当镶嵌数据集创建好之后，我们将其加入到 &nbsp;ArcMap 中后发现，镶嵌数据集是以类似图层组的形式加入的，包含了至少三个图层，分别为：<strong>Boundary</strong>、<strong>Footprint</strong> 和 <strong>Image</strong>。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFootprint_toc.png" alt=""></p>
<p>在使用开头列出的那些工具之前，我们需要对上图的几个图层有所了解，了解的过程中自然会发现这些工具的用武之地。</p>
<p><strong>Image（影像）</strong></p>
<p>影像图层用于控制镶嵌数据集的动态镶嵌影像的渲染。如果你在ArcMap中显示过单张影像，那会发现这个图层其实看起来和单张影像差别不大。也就是镶嵌数据集将散列在磁盘上的多张栅格数据，动态拼接成了一整张栅格。对影像图层属性做出的修改不会影响镶嵌数据集，仅影响镶嵌数据集在显示时的渲染方式。</p>
<p><strong>Footprint（轮廓线）</strong></p>
<p>轮廓线是按照镶嵌数据集的坐标系统创建的，有可能有原始栅格数据的坐标系不一致。还记得上一篇中提到过创建镶嵌数据集时指定的坐标系可以与原始栅格数据不同吗？轮廓线包含镶嵌数据集内每个栅格的轮廓，但是不一定是每个栅格数据集的范围，而应该是栅格数据集内有效栅格数据的范围。NoData 区域是轮廓线形状所排除内容的典型示例。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFootprint_FootPrint.png" alt=""></p>
<p>当然，我们也可以根据自己的需求，进一步定义和裁剪栅格数据。方法通常是三种：</p>
<ul>
<li><strong>1）自动计算方法：</strong></li>
</ul>
<p>使用 <strong>Build Footprint</strong> 工具执行系统计算得到新的轮廓线。</p>
<p>重新定义轮廓线的方法有：</p>
<ul>
<li>RADIOMETRY：根据像素值范围来重新定义轮廓线的形状，从而排除无效数据（*辐射法重新计算轮廓线这个小专题可以展开，以后有时间可以详细整理。）</li>
<li>GEOMETRY：将轮廓线的形状重新定义为其原始几何形状</li>
<li>COPY_FROM_SIBLING：在使用全色锐化的栅格类型时，轮廓线将被替换为多光谱项的轮廓线。</li>
</ul>
<p>在这之前，还可以使用 <strong>Define Mosaic Dataset NoData</strong> 工具将栅格中不希望显示的值置为Nodata，这个工具允许同时将多个值置为Nodata。然后再执行 Build Footprint 可以一次性排除全部Nodata值。</p>
<p><strong>2）手工编辑方法：</strong></p>
<p>通过编辑工具条，手工编辑修改 Footprint 面要素得到新的轮廓线。这种方法和我们平时编辑矢量面没有什么区别。</p>
<p><strong>3）导入已有多边形的方法：</strong></p>
<p>可以使用工具<strong>Import Mosaic Dataset Geometry </strong>，将面要素导入，按照指定的关联字段替换轮廓线。另外，此工具也可用于替换边界或接缝线多边形。</p>
<p><strong>Boundary（边界）</strong></p>
<p>Boundary层，我们可以理解成镶嵌数据集所引用的所有栅格数据的外边界，实际它是一个储存在地理数据库（GDB）内部的面要素类。我们可以使用 <strong>Build Boundary</strong> 工具来创建这个层，也可以在一开始添加栅格工具中勾选&nbsp;Build Boundary 参数。</p>
<p>那这个Boundary 层是基于什么计算得到的呢？ 本质上，是将许许多多的 Footprint 层进行融合得到的。 也就是我们可以理解成，Footprint是每个栅格数据的边界，而Boundary是全部栅格的Footprint融合之后的总外边界。边界用于确定镶嵌数据集的空间范围。</p>
<p>如下图，说明 Footprint 与 Boundary：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFootprint_Boundary.png" alt=""></p>
<p>创建边界可以指定简化方法，可以是实际数据边界，也就是不进行简化（None），可以是凸多边形（Convex Hull），还可以是外接矩形（Envelope）。</p>
<p>如下图一目了然：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFootprint_boundaryType.png" alt=""></p>
<p>如果镶嵌数据集中所包含的栅格数据超出了边界，那超出的数据在镶嵌图像中就不可见了。因此，我们可以通过修改边界来限制镶嵌数据集的可见内容。</p>
<p>类似操作 Footprint，我们可以通过手工编辑，或者使用工具&nbsp;Import Mosaic Dataset Geometry 制作自定义边界。</p>
<p><img src="http://kikitamap.com/images/blogImg/MDFootprint_Demo.png" alt=""></p>
<p>当然与&nbsp;Import Mosaic Dataset Geometry&nbsp;工具相应，我们还可以使用工具 <strong>Export Mosaic Dataset Geometry</strong>导出镶嵌数据集的轮廓线、边界等要素类。</p>
<p>有关轮廓线、边界、镶嵌数据集图层就到这里了，对于初学者来说，上面这些足够用了。</p>
<p>下一篇我会接着整理有关概视图创建等增强优化镶嵌数据集的工具。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[镶嵌数据集工具小结（一）创建/删除镶嵌数据集]]></title>
      <url>/2014/10/14/MDCreateMD/</url>
      <content type="html"><![CDATA[<p>在 ArcGIS 中，镶嵌数据集是用来批量管理、动态镶嵌大量栅格数据的推荐数据模型，在工具箱中有一系列用于操作镶嵌数据集的工具。如果希望了解什么是镶嵌数据集，可以预先看&nbsp;<a href="http://resources.arcgis.com/zh-cn/help/main/10.2/#/na/009t00000037000000/" target="_blank" rel="noopener"><strong>帮助文档</strong></a>。平时接触到的问题可能散落在使用镶嵌数据集的各个环节，最近就以镶嵌数据集工具为索引，顺藤摸瓜。</p>
<p>镶嵌数据集的工具箱位于： <em><strong>Data Management Tools\ Raster\ Mosaic dataset</strong></em> 目录下，其中绝大部分工具在镶嵌数据集的右键菜单中也可以调用，下面就分类整理小结一下。</p>
<p><strong>创建/删除镶嵌数据集类工具</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MDCreateMD_Toolset.png" alt=""></p>
<p>首先，我们可以使用 <strong><em>Create Mosaic Dataset</em></strong> 工具创建一个新的镶嵌数据集，这是所有与镶嵌数据集有关的操作的起点。</p>
<p><br></p>
<p><strong>也就是，先要做出一个空的盒子来容纳下面要加入的栅格数据。</strong></p>
<p>创建镶嵌数据集要了解下面几点：</p>
<ul>
<li>需要ArcGIS 标准版或者高级版的许可。</li>
<li>可以在有写权限的文件地理数据库、个人地理数据库或 ArcSDE 地理数据库中，创建镶嵌数据集。</li>
<li>为镶嵌数据集命名，名称需要满足数据库规范。</li>
<li>必须设置空间参考，这里也就是坐标系统。当我们访问镶嵌数据集的时候，这个空间参考就是整个镶嵌数据集的默认空间参考，镶嵌数据集的其他附加部分会依据这个空间参考创建，有关附加部分后面再说。如果将来往里添加的栅格数据的空间参考与镶嵌数据集默认空间参考不一致，也没有关系，数据会进行动态投影。这时你可能会问，什么是动态投影？举个例子来回答问题，例如创建了一个坐标系统为WGS1984的镶嵌数据集，但是后面添加的影像坐标系是Beijing1954的，那么在查看镶嵌数据集时，我们会看到影像数据自动变换到WGS1984坐标系中进行镶嵌显示。</li>
<li>创建镶嵌数据集工具中还有几个可选参数可以根据需要配置，例如：波段数、位深等。如果没有要求，可以跳过，镶嵌数据集会按照默认设置创建。</li>
</ul>
<p><br></p>
<p><strong>盒子有了，然后我们就可以往里放东西了。</strong></p>
<p>接着使用工具 <strong><em>Add Rasters To Mosaic Dataset</em></strong> ，向镶嵌数据集加入内容。</p>
<p>★ 这里需要了解，栅格数据本身实际是没有入库的，而是以非托管的形式在镶嵌数据集中进行管理。也就是，执行添加栅格数据操作之后，镶嵌数据集中存储了指向栅格数据位置的指针，而不是将实际的栅格数据存储在镶嵌数据集内。也因此，不要在添加栅格数据之后，就把原始数据删除或者移动了，否则镶嵌数据集就受到了影响。</p>
<p>添加栅格数据有几个参数需要理解其意义：</p>
<p>1）<strong>Raster Type</strong></p>
<p>向镶嵌数据集添加栅格数据时，我们需要指定“栅格类型”。默认的栅格类型是“栅格数据集（Raster Dataset）”，是指ArcGIS支持的任何栅格格式。其他栅格类型则特定于产品（传感器、数据提供商或供应商）或关联的元数据信息。通过指定除了“栅格数据集”之外的栅格类型添加栅格数据时，元数据信息和栅格处理信息会被读取。</p>
<p>举个例子说明下它们之间的区别：例如， 添加 QuickBird 标准场景时，<em>.imd文件定义了一个场景，它包含了栅格数据的元数据信息，指向了一个或者多个</em>.tif 文件。如果希望正确添加&nbsp;QuickBird 标准场景数据，那么需要选择&nbsp;QuickBird &nbsp;栅格类型，这种栅格类型会搜索 <em>.imd 和 </em>.tif 的组合从而保证数据信息的完整。如果我们以默认的“Raster Dataset”栅格类型添加这个数据，那就只能添加和识别 <em>.tif 文件，这样 </em>.imd 中所定义的元数据信息就丢失了。</p>
<p>如果需要了解自己的栅格数据是否能被ArcGIS支持，那需要查看如下两个主题的帮助文档列表：</p>
<p>√ <a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//009t0000000v000000" target="_blank" rel="noopener">支持的栅格和影像数据格式列表</a></p>
<p>√ <a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//009t0000000q000000" target="_blank" rel="noopener">受支持的栅格数据集文件格式</a></p>
<p>2）<strong>Input Data</strong></p>
<p>镶嵌数据集支持通过如下几种方式的输入方法来添加栅格数据：</p>
<ul>
<li>数据集 — 可以输入ArcGIS支持的任何栅格、栅格目录或镶嵌数据集</li>
<li>工作空间 — 用于选择一个包含多个栅格数据集的文件夹。该文件夹可包含子文件夹。它受“是否包括子文件”和“输入数据过滤器”参数的影响。</li>
<li>文件 — 用于选择文件列表文件、影像服务定义 (.ISDef) 文件和栅格处理定义 (.RPDef) 文件。 文件列表检索器还将忽略与添加的栅格类型不对应的任何文件。</li>
<li>服务 — 用于选择 WCS、地图、影像服务或 Web 服务图层文件。</li>
</ul>
<p>3）<strong>Update Cell Size Ranges/Update Boundary/Update Overviews</strong></p>
<p>如果要多次使用“添加栅格至镶嵌数据集”工具将数据添加到镶嵌数据集中，建议取消选中“<strong>Update Cell Size Ranges</strong>”和“<strong>Update Boundary</strong>”，直到所有栅格数据全部添加完成。</p>
<p>如果将栅格数据添加到已生成概视图（<strong>Overview</strong>）的镶嵌数据集中，则可以选择勾选“<strong>Update Overviews</strong>”，这样可在添加栅格数据的同时完成更新概视图。也可以稍后利用“构建金字塔（Build Overviews）”工具来完成。有关概视图后面的优化镶嵌数据集中再详细说明。</p>
<p>4）其他几个可选参数（栅格金字塔、坐标系统、数据过滤、操作描述等等）不再啰嗦了，看看帮助都比较好理解，如下链接：</p>
<p><a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//001700000085000000" target="_blank" rel="noopener"><em>http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//001700000085000000</em></a></p>
<p><br></p>
<p><strong>如果发现盒子里的东西不需要了，或者放错了，需要丢出去呢。</strong></p>
<p>如果需要从镶嵌数据集移除栅格数据，就可以使用 <strong>Remove Raster From Mosaic Dataset</strong> 工具 。同样需要了解的是，这个工具并没有真正的删除原始栅格数据，而仅是从镶嵌数据集中移除存储的栅格数据的指针，或者叫链接。</p>
<ol>
<li>移除栅格的操作是通过内部执行<strong>SQL</strong>语句实现的，在工具中，我们可以自行来写SQL语句中的 Where 语句。例如如果希望全部移除已添加的栅格数据，可以写成&nbsp;“OBJECTID&gt;=0”。</li>
<li>在移除栅格数据的同时，可以选择配置是否移除<strong>Overview</strong>、<strong>Item Cache</strong>，以及是否更新像元大小范围、边界,是否标记受影响的概视图等。</li>
<li>如果我们仅需要移除概视图，而不移除栅格数据，这个工具也可以满足，取消勾选“<strong>Remove Mosaic Dataset Items</strong>”选项即可。</li>
</ol>
<p><br></p>
<p><strong>如果连盒子都不想要了，希望和里面的东西一起全部扔掉。</strong></p>
<p>我们可以使用工具<strong>Delete Mosaic Dataset</strong>工具，默认会全部删除镶嵌数据集、概视图和项目缓存。如果不希望删除概视图或缓存时，也可以取消勾选相关参数。</p>
<p><br></p>
<p><br></p>
<p>另外， 可以使用工具 <strong>Create Referenced Mosaic Dataset</strong> ，基于一个现有的镶嵌数据创建新的镶嵌数据集。</p>
<p>Referenced Mosaic Dataset&nbsp;有一些自己的特点，可以解决一些实际问题。举几个例子，帮助理解为什么会有创建这种镶嵌数据集的需求。</p>
<ul>
<li>例如希望别人访问自己做好的镶嵌数据集，但是不希望别人更改已经定义好的一些属性和函数。也就是控制了修改数据的权限。 </li>
<li>例如现有包含了全部数据的主镶嵌数据集，但是希望根据需要筛选出部分感兴趣的特定栅格，同时又不更改主镶嵌数据集。也就是为了感兴趣对象的过滤。</li>
<li>同样，如果现有包含了全部数据的主镶嵌数据集，但是希望使用不同的函数创建出多种输出，例如根据红色波段和近红外波段的 NDVI 或全色锐化的镶嵌。</li>
<li>再比如，现有覆盖范围广大的全国的镶嵌数据集，但是希望按省提供小范围的镶嵌数据集给相应人员。</li>
</ul>
<p>在地理数据库内外，均可创建&nbsp;Referenced Mosaic Dataset。而不像普通镶嵌数据集仅能在数据库中创建。</p>
<p>在文件夹下而不是在地理数据库中创建，这种地理数据库的文件扩展名为 .amd，但是不会创建边界。加入ArcMap中，类似下面的样子：</p>
<p><img src="http://kikitamap.com/images/blogImg/MDCreateMD_toc.png" alt=""></p>
<p>另外，需要了解，我们无法对&nbsp;Referenced Mosaic Dataset&nbsp;构建概视图、计算像素大小范围、在栅格级别添加函数或添加新栅格数据。</p>
<p>就到这里了，下一篇打算抽时间总结下镶嵌数据集的修改方面知识点。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS 系统要求知多少]]></title>
      <url>/2014/09/24/ArcGISSystemRequirment/</url>
      <content type="html"><![CDATA[<p>安装 ArcGIS 软件之前，一定要注意自己的操作系统，硬件（包括型号和驱动），甚至一些软件的版本是否能满足系统要求。只有出现在各个版本的列表中的操作系统和其他软硬件版本才算是真正的支持。否则可能会出现诸如不稳定，崩溃等等各种异常现象。</p>
<p>时常会被问到：“ArcGIS 9.3还能安装在 Windows XP SP1 中吗？ArcGIS 10.0能安装在 windows 8 中吗？”答案都是不能。但是前者安装时系统会主动报错，不支持安装，后者貌似没有任何提示，也安装上了。用户就会问，你不是说安装不上米？</p>
<p>“能不能安装”在官方和“民间”，是两个完全不同层面的问题。为什么这么说呢？我们一起脑补下。从个人学习角度，只要安装成功，没有收到致命报错，似乎就是支持安装；但是，从官方角度，我们可以理解成，这个操作系统的发布和ArcGIS某个版本软件开发测试不是同期的，例如10.0早在2010年就发布了，而win8在2013年才发布，没有经过严格测试证明可以全面支持的，不能称为支持。因此如果强行安装了，出于个人研究探索并无大碍，但只能后果自负了。</p>
<p>下面是各个版本的系统要求列表：</p>
<p><strong>ArcGIS 10.0</strong></p>
<p><a href="http://help.arcgis.com/en/systemrequirements/index.html" target="_blank" rel="noopener">http://help.arcgis.com/en/systemrequirements/index.html</a></p>
<p><strong>ArcGIS 10.1</strong></p>
<p><a href="http://resources.arcgis.com/en/help/system-requirements/10.1/index.html" target="_blank" rel="noopener">http://resources.arcgis.com/en/help/system-requirements/10.1/index.html</a></p>
<p><strong>ArcGIS 10.2.x</strong></p>
<p><a href="http://resources.arcgis.com/en/help/system-requirements/10.2/index.html" target="_blank" rel="noopener">http://resources.arcgis.com/en/help/system-requirements/10.2/index.html</a></p>
<p><strong><em>过气版本 ArcGIS 9.3</em></strong></p>
<p>Desktop：<a href="http://downloads.esri.com/support/systemrequirements/ArcGIS_Desktop_93_SystemRequirements.pdf" target="_blank" rel="noopener">http://downloads.esri.com/support/systemrequirements/ArcGIS_Desktop_93_SystemRequirements.pdf</a></p>
<p>Server：<a href="http://downloads.esri.com/support/systemrequirements/arcgis_server.pdf" target="_blank" rel="noopener">http://downloads.esri.com/support/systemrequirements/arcgis_server.pdf</a></p>
<p><br></p>
<p><br></p>
<p>ArcGIS 9.2 甚至更早的版本就不说了，太久远了，现在的操作系统没有几个能支持的了，如果还在使用这8年前的版本，算了，丢了吧，反正你不爱ArcGIS。</p>
<p>以前整理过各个版本的补丁下载链接，<a href="http://kikitamap.com/2013/05/29/AllPackages/" target="_blank" rel="noopener"><strong>点击</strong></a> 跳转另一篇博客。</p>
<p>另外，从10.2版本之后，不再提供像上面链接中一样的单独的补丁下载，而是做成完整的安装包，例如，截至到这篇博客的时间，最新的版本 10.2.1，10.2.2 这些版本既是如此。这样就可以在空白机器上直接安装最新版本，而不需要像以前一样，先安装旧版本再打补丁，避免重复劳动多次；对于已经安装10.1，10.2的机器，可以直接覆盖安装 10.2.1等新版本，也节省了卸载的时间。</p>
<p>产品的生命周期最可以说明问题，有图有真相：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISSystemRequirment.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS中的影像分类]]></title>
      <url>/2014/09/18/ArcGISImageClassification/</url>
      <content type="html"><![CDATA[<p>影像分类的目的就为了将图像中的像元划分成不同的类别，过程就是根据像元在不同波段的波普亮度、空间结构特征或者其他信息，按照某种规则或算法实现分类。遥感图像分类处理就是是为了提取遥感图像中的目标信息，遥感图像分类主要用于地物类别的区分。</p>
<p>影像分类分为监督分类和非监督分类，很多遥感书籍中都有这两种分类方法的比较。这里我结合ArcGIS软件简单整理一下：</p>
<p><br></p>
<h1 id="监督分类"><a href="#监督分类" class="headerlink" title="监督分类"></a><strong>监督分类</strong></h1><p>监督分类是使用被确认类别的样本像元去识别其他未知类别像元的过程。其中这些已被确认类别的像元就是训练样本。也就是说，在监督分类中，必须事先提取出代表总体特征的训练数据以及事先知道影像中有几种类别。这样就可以学习这些样本类别的先验知识，然后对整体数据进行分类。</p>
<p>在 ArcGIS 中，首先使用 Image Classification 工具条中的训练样本管理器，创建训练样本。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISImageClassification_Training.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISImageClassification_Samples.png" alt=""></p>
<p>在创建样本之后，我们可以评估训练样本，使用直方图、散点图、统计数据。</p>
<p><strong>（1）直方图</strong></p>
<p>打开直方图，每个波段对应一个直方图。不同类的直方图不应重叠。如果发生重叠，则需要删除或合并其中一些类。</p>
<p>直方图按钮仅用于整型影像，不适用于浮点型。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISImageClassification_Histogram.png" alt=""></p>
<p><strong>（2）散点图</strong></p>
<p>散点图是参加分类的影像数据的波段的两两组合，如果有N个波段，就有1 + 2 + … + (N – 1) 个散点图。</p>
<p>对于所有波段组合，散点图和统计数据不应彼此重叠。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISImageClassification_Scatterplots.png" alt=""></p>
<p><strong>（3）统计数据</strong></p>
<p>统计数据包括最小值、最大值、平均值、标准差和协方差矩阵。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISImageClassification_Statistics.png" alt=""></p>
<p>创建训练样本后，可以使用交互式监督分类工具，探索性的直接查看分类结果。这个工具不需要事先创建特征文件，工具后台使用的是最大似然法分类方法。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISImageClassification_interactive.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISImageClassification_Result.png" alt=""></p>
<p>在ArcGIS 中，监督分类的主要GP工具是&nbsp;<strong>最大似然法分类工具（Maximum Likelihood Classification）</strong>。</p>
<p>（1）需要使用&nbsp;<strong>特征文件（Signature File）</strong>，既可以是通过训练样本制作的，也可以是ISO聚类工具求取，*.gsg文件。</p>
<p>（2）可以根据需要设置&nbsp;<strong>剔除分数（Reject Fraction&nbsp;）</strong>，例如0.01。这样表示，正确分类的几率不到 1% 的像元就会成为 NoData。</p>
<p>（3）<strong>先验概率（priori probability）</strong>，工具默认使用 Equal 先验概率，会给像元分配可能性最大的分类。但是，如果某些类出现的可能性大于（或小于）平均值，则应将 FILE 先验选项与输入先验概率文件结合使用。输入先验概率文件必须是包含两列的 ASCII 文件。左列中的值表示类 ID。右列中的值表示相应类的先验概率。类别先验概率的有效值必须大于或等于零。如果指定零作为概率，则类无法显示在输出栅格中。指定先验概率的总和必须小于或等于1。</p>
<p>（4）最大似然法分类工具还可以附带可选生成&nbsp;<strong>置信栅格（confidence raster）</strong>，这样可以了解每个像元的正确分类的概率。</p>
<p><br></p>
<h1 id="非监督分类"><a href="#非监督分类" class="headerlink" title="非监督分类"></a><strong>非监督分类</strong></h1><p>非监督分类不预先确定类别，而是直接对相似的像元进行归类，根据归类的结果来确定类别。也就是在事先没有任何先验知识的情况下对未知类别的样本进行分类。当我们没有训练区，有对研究区不熟悉时，或者对图像中包含的目标物不明确的时候，采用此方法。</p>
<p>在 ArcGIS 中进行非监督分类，主要使用工具&nbsp;<strong>ISO聚类非监督分类工具（Iso Cluster Unsupervised Classification）。</strong></p>
<p>需要指定希望分出来的类别的数量，并且根据需要调整迭代的次数、类的最小尺寸、采样间隔。</p>
<p>ISO 是&nbsp;iterative self-organizing 的缩写，也就是迭代自组织方法。此工具的工作原理从帮助中扒出来，供参考：</p>
<blockquote>
<p>iso 聚类算法是一种迭代过程，用于在将各个候选像元指定给聚类时计算最小欧氏距离。该过程从处理软件指定的任意平均值开始，每个聚类一个任意平均值（您指定聚类数量）。将每个像元指定给最接近的平均值（多维属性空间中的所有平均值）。基于首次迭代后从属于每个聚类的像元的属性距离，重新计算各个聚类的新平均值。重复执行此过程：将各个像元指定给多维属性空间中最接近的平均值，然后基于迭代中像元的成员资格计算各个聚类的新平均值。您可通过迭代次数指定该过程的迭代次数。该值应该足够大，才能确保执行指定次数的迭代后，像元从一个聚类迁移至另一个聚类的次数最少；从而，使所有聚类变为稳定状态。迭代次数应该随着聚类数的增加而增加。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS 构建3D动画方法]]></title>
      <url>/2014/09/16/Building3DAnimation/</url>
      <content type="html"><![CDATA[<h2 id="Ⅰ-以动画表现视图（View）"><a href="#Ⅰ-以动画表现视图（View）" class="headerlink" title="Ⅰ 以动画表现视图（View）"></a><strong>Ⅰ 以动画表现视图（View）</strong></h2><p><strong>1 捕获透视图（Capturing perspective views）</strong></p>
<p>使用“动画”工具条中的“捕获视图”工具 捕获视图 可以捕获照相机视图，这些视图作为关键帧，保存在某个照相机轨迹或地图视图轨迹中。</p>
<p>生成的轨迹将成为关键帧之间的连续插值，从而创建平滑的动画。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_Toolbar.png" alt=""></p>
<p><br></p>
<p><strong>2 录制导航（Recording Navigation）</strong></p>
<p>简单录制功能是通过使用与动画控制对话框中的视频播放器类似的控件来实现的。单击录制按钮录制导航。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_Navi.jpg" alt=""></p>
<p>录制导航时，可使用 ArcScene 或 ArcGlobe 中的飞行工具飞行 来创建照相机轨迹。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_Fly.jpg" alt=""></p>
<p><br></p>
<p><strong>3 创建关键帧（Creat KeyFrames）</strong></p>
<p>这种方法与捕获透视图相似，可以为当前视图进行快照，作为一个关键帧，可以插入到已有的轨迹中。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_KeyFrame.jpg" alt=""></p>
<p>在创建动画关键帧对话框上，使用相同的属性（如相同的照相机位置）创建多个关键帧，然后在动画管理器的“关键帧”选项卡上修改关键帧属性，细化动画创建。</p>
<p>如下例子，中通过创建两个相同的关键帧，控制照相机在某处的停留时间。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_keyframeDemo.jpg" alt=""></p>
<p><br></p>
<p><strong>4 使用书签创建动画（Using Bookmark）</strong></p>
<p>将已经创建的书签作为关键帧也是个很好的方法，如果地图或者场景中以前做过书签，并且想把他们利用起来连贯的展现出来，就可以使用这种方法。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_bookmark.jpg" alt=""></p>
<p><br></p>
<p><strong>5 沿路径移动照相机或视图（Moving the Camera or View along a Path）</strong></p>
<p>我们还可以根据路径创建照相机轨迹或地图视图轨迹。所选线要素或图形可以用来定义路径，这样就将照相机的移动轨迹就约束在这个路径上。</p>
<p>例如下图所示：</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_SelectedPath.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_Flyby.jpg" alt=""></p>
<p>照相机的方向可由观察点和目标点这两个 3D 点定义。使用“根据路径设置照相机飞行路线”对话框上的“路径目标”选项可修改照相机的移动方式。有三个选项可用于沿路径移动照相机：</p>
<p>（1）沿飞行路径同时移动观察点和目标。</p>
<p>（2）保持当前目标沿路径移动观察点。</p>
<p>（3）保持当前观察点沿路径移动目标。</p>
<p><br></p>
<p><br></p>
<h2 id="Ⅱ-以动画形表现图层属性"><a href="#Ⅱ-以动画形表现图层属性" class="headerlink" title="Ⅱ 以动画形表现图层属性"></a><strong>Ⅱ 以动画形表现图层属性</strong></h2><p>创建图层轨迹的几种方式：</p>
<p>（1）图层透明度动画</p>
<p>使某些图层变得透明，以便其他图层能够随着动画的发展而可见；</p>
<p>方法：在创建关键帧的时候，设置图层的透明度百分比。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_3DEffect.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_Transparent.jpg" alt=""></p>
<p>（2）图层可见性动画</p>
<p>关闭图层使之不可见。例如在某个时间，指定图层不需要显示；操作类似上面的，只不过截取关键帧的时候，打开/关闭图层即可，不赘述。</p>
<p>（3）<strong>ArcScene</strong> 中沿路径移动某个图层（例如汽车）</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_AlongLine.png" alt=""></p>
<p>（4）图层组动画</p>
<p>使用现有图层组，按照顺序播放一系列的图层，这个动画效果也比较常用，如果一个组中是相关的主题的一系列数据，通过播放，可以看到图层之间的演进关系。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_GroupLayer.png" alt=""></p>
<p><br></p>
<p><br></p>
<h2 id="Ⅲ-以动画表现场景属性（ArcScene）"><a href="#Ⅲ-以动画表现场景属性（ArcScene）" class="headerlink" title="Ⅲ 以动画表现场景属性（ArcScene）"></a><strong>Ⅲ 以动画表现场景属性（ArcScene）</strong></h2><p>这种动画类型是仅用于 ArcScene 的场景属性配置的。最常用的就是一天从日出到日落不同太阳位置的场景效果的连续播放。</p>
<p>我们要做的仅仅是在每个太阳位置时间点创建关键帧。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_Scene.png" alt=""></p>
<p>场景属性设置：</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_SunPosition.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_dark.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_bright.jpg" alt=""></p>
<p><br></p>
<p><br></p>
<h2 id="Ⅳ-以动画表现时态数据"><a href="#Ⅳ-以动画表现时态数据" class="headerlink" title="Ⅳ 以动画表现时态数据"></a><strong>Ⅳ 以动画表现时态数据</strong></h2><p>如果数据是含有时间字段的，我们还可以进行按照时间序列的播放时态数据的动画。</p>
<p>首先在图层属性中时间选项卡 <strong>激活时态</strong>。 然后创建时间动画。</p>
<p><img src="http://kikitamap.com/images/blogImg/Building3DAnimation_Time.png" alt=""></p>
<p>关于最后一个时间动画不想说很多，ArcGIS 有个关于时态的扩展模块，Tracking Analyst，这个扩展对于时态数据有更多的控制。</p>
<p>配置出的时间图层有更好的展现力，因此，这里就不再多说时间动画了。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[深入路径距离分析（三）]]></title>
      <url>/2014/09/15/DiveinPathDistanceAnalyst3/</url>
      <content type="html"><![CDATA[<p>路径分析不仅可以考虑到水平方向的影响因子，而且可以考虑到垂直方向的影响因子，例如前面开车的例子中，水平方向的影响因子是风向，垂直方向的影响因子就是路面的起伏状况。</p>
<p><strong>垂直系数</strong></p>
<p>垂直系数越大，移动的难度也就越大。确定从一个像元行进到另一个像元时遇到的垂直系数（VF）与确定水平系数（HF）相似。这里需要引入一个概念，垂直相对移动角度（VRMA），垂直相对移动角度（VRMA）是“起始”像元与“目标”像元形成的斜率的角度，斜率=垂直增量/水平增量。VRMA 以度为单位进行指定。VRMA 的值范围为 -90 到 +90 度。</p>
<p>路径距离分析工具中，提供了几种算法，<strong>BINARY、LINEAR、SYM_LINEAR、INVERSE_LINEAR、SYM_INVERSE_LINEAR、COS、SEC、COS_SEC、SEC_COS、TABLE</strong>：</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_VerticalFactor.png" alt=""></p>
<p><br></p>
<p><strong>（1）Binary——二元垂直系数</strong></p>
<p>当 VRMA 大于切削角下限且小于切削角上限时，在两个像元之间移动的 VF 设置为与零系数相关联的值。如果 VRMA 大于切削角上限或者小于<span style="font-family: 'Microsoft YaHei';font-size:14px;">切削角下限</span>，则 VF 设置为无穷大。工具默认的切削角为正负30度。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_Binary.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_BInary2.jpg" alt=""></p>
<p><br></p>
<p><strong>（2）Linear——线性垂直系数</strong></p>
<p>VF 由 VRMA-VF 坐标系中的一条直线确定。这条线在 y 轴上与零系数相关联的值处进行截取。线的斜率可以使用 SLOPE 属性进行指定。如果未确定斜率，则默认值为 1/90（指定为 0.01111）。默认的切削角下限为 -90 度，而默认的切削角上限为 90 度。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_Linear.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_Linear2.jpg" alt=""></p>
<p><br></p>
<p><strong>（3）Inverse Linear——逆线性垂直系数</strong></p>
<p>这个与线性垂直系数类似，VF 由 VRMA-VF 坐标系中的一条直线的逆向值确定。这条线在 y 轴（表示 VF 系数）上与零系数相关联的值处进行截取。线的斜率可以确定（如果使用 SLOPE 修饰属性指定）。如果未确定斜率，则默认值为 -1/45（指定为 0.02222）。默认的切削角下限为 -45 度，而默认的切削角上限为 45 度。</p>
<p><strong>注意：这个算法的图表，在ArcGIS的帮助中绘制错误了，画成了二次曲线的样子，如下是改正后正确图表。</strong>_</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_InverseLinear.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_InverseLinear2.jpg" alt=""></p>
<p><br></p>
<p><strong>（4）Symmetric Linear——对称线性垂直系数</strong></p>
<p>SYM_LINEAR 由两个与 VRMA 相关的线性函数组成，这两个函数关于 VF (y) 轴对称。两条线都在与零系数相关联的 VF 值处截取 y 轴。使用 SLOPE 垂直系数修饰属性相对于正 VRMA 定义线的斜率，然后将针对负 VRMA 生成一个镜像。默认斜率为 1/90（指定为 0.01111）。默认的切削角下限为 -90，而默认的切削角上限为 90。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_SymmetricLinear.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_SymmetricLinear.jpg" alt=""></p>
<p><br></p>
<p><strong>（5）Symmetric Inverse Linear——对称线性垂直系数</strong></p>
<p>顾名思义，SYM_INVERSE_LINEAR 与 SYM_LINEAR 垂直系数关键字正相反。它由两个与 VRMA 相关的线性函数组成，这两个函数关于 VF (y) 轴相对称。两条线都在 VF 值为 1 处截取 y 轴。使用 SLOPE 垂直系数修饰属性相对于与正 VRMA 定义线的斜率，然后将针对负 VRMA 生成一个镜像。默认斜率为 -1/45（指定为 .02222）。默认的切削角下限为 -45，而默认的切削角上限为 45。</p>
<p><strong>注意：这个算法的图表，在ArcGIS的帮助中也绘制错误了，也画成了二次曲线的样子，如下是改正后正确图表。</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_SymInverseLinear.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_SymInverseLinear.jpg" alt=""></p>
<p><br></p>
<p><strong>（6）Cos——余弦垂直系数</strong></p>
<p>VF 由 VRMA 的余弦函数确定。默认的切削角下限为 -90 度，而默认的切削角上限为 90 度。默认的 COSPOWER 为 1.0。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_Cos.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_Cos.jpg" alt=""></p>
<p><br></p>
<p><strong>（7）Sec——正割垂直系数</strong></p>
<p>VF 由 VRMA 的正割函数确定。默认的切削角下限为 -90 度，而默认的切削角上限为 90 度。默认的 SECPOWER 为 1.0。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_Sec.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_Sec2.jpg" alt=""></p>
<p><br></p>
<p><strong>（8）Cos-Sec——余弦正割垂直系数</strong></p>
<p>当 VRMA 度数为负值时，VF 由 VRMA 的余弦函数确定。如 VRMA 度数为正值，VF 则由 VRMA 的正割函数确定。默认的切削角下限为 -90 度，而默认的切削角上限为 90 度。默认的 COSPOWER 和 SECPOWER 均为 1.0。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_CosSec.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_CosSec2.jpg" alt=""></p>
<p><br></p>
<p><strong>（9）Sec-Cos——正割余弦垂直系数</strong></p>
<p>当 VRMA 度数为负值时，VF 由 VRMA 的正割函数确定。如 VRMA 度数为正值，VF 则由 VRMA 的余弦函数确定。默认的切削角下限为 -90 度，而默认的切削角上限为 90 度。默认的 COSPOWER 和 SECPOWER 均为 1.0。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_SecCos.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst3_SecCos.jpg" alt=""></p>
<p><br></p>
<p><strong>（10）Table——自定义表格垂直系数</strong></p>
<p>与 HRMA 图一样，VRMA 图中的字符可由修饰属性进行进一步的控制，从而细化垂直系数。这个就不再赘述了。</p>
<p>好了，到这里路径距离分析就说完了，也就是说，当需要计算最短路径的时候，需要考虑和前进方向有关的水平阻力因子和垂直阻力因子的时候，可以使用 ArcGIS 的路径距离分析工具，可以使用工具中的既定算法模型，通过配置参数达到目的，或者自定义表格自定义细化水平或垂直系数。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[深入路径距离分析（二）]]></title>
      <url>/2014/09/15/DiveinPathDistanceAnalyst2/</url>
      <content type="html"><![CDATA[<p>接着上一篇文章，继续说说水平影响因子：</p>
<p>​    </p>
<h1 id="水平系数"><a href="#水平系数" class="headerlink" title="水平系数"></a><strong>水平系数</strong></h1><p>水平系数 (HF) 从像元移动时所遇到的水平阻力因素的角度出发，确定从一个像元移到另一个像元的成本，或者说是困难。</p>
<p>在路径距离分析中，提供了确定水平方向成本的参数，如下图：<br>​<br><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Horizontalfactor.jpg" alt=""></p>
<p><strong>水平栅格</strong>中存储了各个像元位置指定的水平角度，例如在上面开车的例子中，指的就是风向。</p>
<p>水平方向以度为单位进行定义，0 表示位于待处理像元的上方（或北方），值沿顺时针方向增加，形成一个圆并在 360 度时回到原始位置。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Angle.gif" alt=""></p>
<p>另外引入的一个概念是，水平相对移动角度 (HRMA)，这是水平角度和前进角度的夹角，对于上面的例子，就是汽车的行驶角度和风向的夹角。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_HRMA.png" alt=""></p>
<p>HRMA 值的范围介于 -180 到 180 度之间。但是，在水平系数图中，x 轴上的值介于 0 到 180 之间，也就是工具中使用的是HRMA的绝对值。确定了 HRMA 后，会使用一个图表来确定实际的水平系数。y 轴表示 HF，而 x 轴表示 HRMA。</p>
<p><strong>水平系数关键字</strong>，允许我们通过选择工具中提供的适合的算法，工具中提供了：&nbsp;BINARY、FORWARD、LINEAR、INVERSE_LINEAR、TABLE 五种方法。<br>​    </p>
<p><strong>（1）Binary——二元水平系数：</strong></p>
<p>当 HRMA 小于切削角时，通过像元部分的 HF 设置为与零系数（Zero Factor）相关联的值。如果 HRMA 大于切削角，则此部分的 HF 设置为无穷大。默认切削角（Cut Angle）为 45 度。默认零系数为 1.0。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Binary.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Binary2.jpg" alt=""></p>
<p><strong>（2）Forward——前向水平系数：</strong></p>
<p>如果某段行程的 HRMA 小于 45 度，则 HF 设置为与零系数（Zero Factor）相关联的值。当 HRMA 大于或等于 45 度且小于 90 度时，HF 设置为边值（Side Value）。如果未指定边值，则默认边值为 1。如果 HRMA 大于或等于 90 度，则 HF 设置为无穷大。默认零系数为0 .5。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Forward.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Forward2.jpg" alt=""><br>​    </p>
<p><strong>（3）LINEAR——线性水平系数</strong></p>
<p>HF 由 HRMA-HF 坐标系中的一条直线确定。这条线在 y 轴（表示 HF 系数）上与零系数（Zero Factor）相关联的值处进行截取。线的斜率（Slop）可以使用 SLOPE参数指定。如果未确定斜率，则默认值为 0.5/45 或 1/90（指定为 0.01111）。默认切削角为 181 度，这相当于无切削。默认零系数为 0.5。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Linear.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Linear2.jpg" alt=""></p>
<p>​    </p>
<p><strong>（4）INVERSE_LINEAR——逆线性水平系数</strong></p>
<p>HF 由 HRMA-HF 坐标系中的一条直线的逆向值确定。这条线在 y 轴（表示 HF 系数）上与零系数相关联的值处进行截取。线的斜率可以使用 SLOPE 修饰属性进行指定。如果未确定斜率，则默认值为 -2/180 或 -1/90（指定为 0.01111）。默认切削角为 181 度，这相当于无切削。默认零系数为 2.0。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_InverseLinear.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_InverseLinear2.jpg" alt=""></p>
<p><strong>（5）Table——自定义表格</strong></p>
<p>如果前面四种既定算法不能满足要求，我们还可以自定表格，方法就是，在任意文本编辑器中创建的 ASCII 文件来定义图表。</p>
<p>该文件的每一行有两列值与之对应。第一列值用于识别 HRMA（以度为单位表示），第二列值为 HF。文件中的每行指定图表中的一个点。</p>
<p>两个连续的点定义 HRMA-HF 坐标系中的一条线段。HRMA 角度必须按升序输入。对于所有小于第一个（最低）输入值或大于最后一个（最大）输入值的 HRMA 角度，其 HF 系数将设置为无穷大。</p>
<p>在 ASCII 文件中，无穷大的 HF 表示为 -1。</p>
<p>示例：</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Table.jpg" alt="">    </p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst2_Table2.jpg" alt=""></p>
<p>有关水平影响因子的总结就到这里，下一篇继续整理和讲解垂直因子……</p>
<p>​    </p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[深入路径距离分析（一）]]></title>
      <url>/2014/09/15/DiveinPathDistanceAnalyst1/</url>
      <content type="html"><![CDATA[<p>写这篇之前，整理过空间分析中的距离分析工具箱，今天继续深入的说说路径距离分析。</p>
<p>开始路径距离分析之前，先回忆下最基本的欧式距离分析和成本距离分析。欧氏距离分析遵循的就是我们小学都知道的“两点之间直线最短”的原则，两点之间的最短路径就是两点之间的线段的距离。但是实际情况并不是很完美，有时我们无法完全沿直线前往某个位置，例如遇到河流、陡坡、悬崖等障碍。这时，我们就应该考虑使用成本距离工具获得更现实的结果。</p>
<p>如下图，举个简单的例子说明成本距离分析和欧式距离分析。按照欧式距离在问号位置求得的应该是绿色的路径，表示最近源，但是考虑到成本，黄色的曲线确是成本最低的最优路径。并且“曲线救国”比盲目直行，成本更低。</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst1_Path.png" alt=""></p>
<p>回顾就到这里，继续看更加复杂的路径距离分析：</p>
<p>路径距离工具与成本距离相似，两者都用于确定从源到栅格上各像元位置的最小累积行进成本。但是，路径距离不仅可计算成本表面的累积成本，而且可以考虑到从一个位置到另一个位置的总移动成本的水平和垂直因子补偿。这些工具生成的累积成本表面可用于扩散建模、流向运动和最低成本路径分析。路径距离工具既考虑水平和垂直成本要素，又考虑真实表面距离。</p>
<p>举个简单的例子，了解路径距离分析，假设我们开车从位置A到位置B，路况复杂，还有点起风，这时风向和风速就成了水平影响因子，道路的起伏程度就行了垂直因子。如下图，说明这个问题：</p>
<p>水平影响因子：</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst1_Horizontal.png" alt=""></p>
<p>垂直影响因子：</p>
<p><img src="http://kikitamap.com/images/blogImg/DiveinPathDistanceAnalyst1_Vertical.png" alt=""></p>
<p>理解了路径距离分析工具的用途，在下一篇文章中，我们一起来看看水平系数和垂直系数对路径距离的影响。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[栅格数据中的 Zone 与 Region]]></title>
      <url>/2014/09/01/RasterZoneRegion/</url>
      <content type="html"><![CDATA[<p>Zone 与 Region 在字面上都是区域的意思，但是在做分析与统计的时候二者却是有区别的。</p>
<p><strong>什么是Zone？</strong></p>
<p>简而言之，具有相同值的像元就属于一个Zone。也就是，Zone由栅格中所有具有相同值的像元组成，分区可以由相邻像元和/或不相连像元组成。如下图一目了然：</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterZoneRegion_Zone.gif" alt=""></p>
<p><strong>什么是Region？</strong></p>
<p>一个Zone内的每组相连像元都可视为一个Region。ArcGIS 中提供了从 Zone 获得 Region 的工具 Group Region。</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterZoneRegion_Region.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/RasterZoneRegion_GroupRegion.png" alt=""></p>
<p><strong>工具的工作顺序：</strong> 扫描的第一个区域接收值 1，第二个区域接收值 2，依此类推，直到所有区域都已赋值。扫描将按从左至右、从上至下的顺序进行。赋给输出区域的值，取决于系统在扫描过程中是在什么时候遇到它们的。</p>
<p><strong>与原始Zone的关系：</strong> 默认，生成的数据的属性表中会有 LINK 字段，记录Region从Zone的来源：</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterZoneRegion_table.tiff" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGlobe 缓存管理]]></title>
      <url>/2014/08/05/ArcGlobeCacheManagement/</url>
      <content type="html"><![CDATA[<p><span style="font-family:Microsoft YaHei; font-size:14px">ArcGlobe拥有缓存机制，因此可以应对大量3D数据的可视化，下面就总结下有关缓存的知识点。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:14px"></span></p>
<p></p>
<p><span style="font-family:Microsoft YaHei; font-size:14px">首先，需要了解，ArcGlobe具有两种缓存机制：内存缓存，硬盘缓存。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:14px"></span></p>
<p></p>
<p><span style="font-family:'Microsoft YaHei'"><strong><span style="font-size:24px; color:#cc0000">内存缓存&nbsp;</span></strong><span style="font-size:14px">指的是分配可供 ArcGlobe 使用的物理内存 (RAM) 大小。要获得最佳性能，可设置对每个所使用的数据类型所分配的内存大小。ArcGlobe 通过设置内存缓存来改善 3D 视图的交互性能，可针对每个 ArcGlobe 文档（.3dd 文件）配置特定的内存值。</span></span></p>
<p><span style="font-family:'Microsoft YaHei'"><span style="font-size:14px"><img src="http://img.blog.csdn.net/20140805102306496?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva2lraXRhTW9vbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></span></span></p>
<p></p>
<p><span style="font-family:'Microsoft YaHei'"><span style="font-size:14px"><img src="http://img.blog.csdn.net/20140805110536867?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva2lraXRhTW9vbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></span></span></p>
<p></p>
<p><span style="font-family:'Microsoft YaHei'"><span style="font-size:14px"></span></span></p>
<p></p>
<p><span style="font-family:'Microsoft YaHei'"><span style="font-size:14px"></span></span></p>
<p></p>
<p><span style="font-family:Microsoft YaHei"><strong><span style="font-size:24px; color:#cc0000">磁盘缓存&nbsp;</span></strong><span style="font-size:14px">会为 ArcGlobe 中的每个图层创建临时文件或缓存，从而有助于高效地显示和导航数据。</span></span><span style="font-size:14px; font-family:'Microsoft YaHei'">每个图层，而不是数据源，对应一“套”缓存文件，以文件夹的形式保存。文件夹通常以图层名+GUID命名。例如下图：</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:14px"><img src="http://img.blog.csdn.net/20140805101124635?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva2lraXRhTW9vbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></span></p>
<p></p>
<p><span style="font-family:Microsoft YaHei; font-size:14px"><img src="" alt=""></span></p>
<p></p>
<p><span style="font-size:14px"><span style="font-family:Microsoft YaHei">保存 ArcGlobe 文档（<em>.3dd）或创建图层文件（</em>.lyr）</span><span style="font-family:Microsoft YaHei">可确保不会无意中删除磁盘缓存，以及保留缓存的链接以供以后使用。如果图层的显示发生更改，则会自动删除它的磁盘缓存并重新进行计算。</span></span></p>
<p><span style="font-size:14px"><span style="font-family:Microsoft YaHei"></span></span></p>
<p></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'">默认缓存是按需进行创建，也可以进行手动创建图层的</span><span style="font-family:'Microsoft YaHei'">部分缓存、</span><span style="font-family:'Microsoft YaHei'">全部缓存。</span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"><img src="http://img.blog.csdn.net/20140805110228156?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva2lraXRhTW9vbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></span></span></p>
<p></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"><img src="http://img.blog.csdn.net/20140805110245671?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva2lraXRhTW9vbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></span></span></p>
<p></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"></span></span></p>
<p></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"></span></span></p>
<p></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'">磁盘缓存的格式可以根据需要选择，ArcGlobe 支持两种磁盘缓存格式：JPEG 和 DXT。一般来说，JPEG 磁盘缓存格式占用的磁盘空间较少，而 DXT 缓存可提高渲染速度。</span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"></span></span></p>
<p></p>
<p><span style="font-family:'Microsoft YaHei'; font-size:14px">下面的问题引自帮助，稍加整理，放在这里辅助这两种格式的选择：</span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"></span></span></p>
<p></p>
<p><span style="font-size:18px; color:#ff6666"><span style="font-family:'Microsoft YaHei'; background-color:rgb(204,255,255)"><strong>JPEG 和 DXT 格式的区别是什么？</strong></span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'">在显卡较新的计算机上，DXT 缓存不必在渲染前解压缩。但 JPEG 缓存却需要在渲染前解压缩，因此存在性能开销。</span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'">具有 16 位色彩格式的 JPEG 缓存数据要求每像素占 2 个字节内存，而 DXT 缓存数据则要求每像素仅占 1 个字节内存。这意味着，DXT 数据所占用的图形内存只占 JPEG 16 位色彩数据所占用图形内存的一半。但 DXT 缓存所占用的磁盘空间通常比 JPEG 缓存大 8 到 12 倍。</span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"></span></span></p>
<p></p>
<p><span style="font-size:18px; color:#ff6666"><span style="font-family:'Microsoft YaHei'; background-color:rgb(204,255,255)"><strong>JPEG 与 DXT 分别应于何时使用？</strong></span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"><strong>1）显卡硬件的版本</strong></span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'">如果计算机的显卡版本较低，有可能不支持 DXT 格式。在此类情况下，ArcGlobe 将使用仿真软件代替硬件，使计算机支持 DXT 缓存，但这样的话，使用 DXT 磁盘缓存选项并不会提高性能。</span></span><span style="font-family:'Microsoft YaHei'; font-size:14px">版本较新的计算机则可以实现 DXT 格式的硬件支持，因此适合使用 DXT 缓存选项。如果注重应用程序的性能，则建议使用该格式。</span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"><strong>2）数据范围</strong></span></span></p>
<p><span style="font-family:'Microsoft YaHei'; font-size:14px">决定 JPEG 和 DXT 缓存性能差异的一个关键性因素是数据范围。对于本地区域范围内的图像数据，DXT 缓存的渲染速度比 JPEG 缓存最多可快 40%（以每秒的帧数衡量）。但是，如果数据是全球范围的，则两种格式之间几乎没有差异。</span><span style="font-family:'Microsoft YaHei'; font-size:14px">但是，无论数据范围如何，DXT 磁盘缓存格式与 JPEG 磁盘缓存格式的缓存</span><span style="font-family:'Microsoft YaHei'; font-size:14px">生成时间相同</span><span style="font-family:'Microsoft YaHei'; font-size:14px">。</span></p>
<p><span style="font-family:'Microsoft YaHei'; font-size:14px"><strong>3）物理内存的大小</strong></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'">决定选择哪种格式的另一个关键性因素是计算机的物理内存大小。使用 DXT 缓存而非 JPEG 缓存时，ArcGlobe 将节省 10% 到 30% 的整体内存，从而在渲染大型数据集而计算机内存（RAM 和图形卡纹理内存）却有限的情况下可以提高性能。</span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"><strong>4）磁盘空间</strong></span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'">最后一个值得考虑的因素是磁盘空间。尽管 DXT 缓存的交互性能通常比 JPEG 缓存要好，但是它所占据的磁盘存储空间却会多出很多。根据数据的不同，DXT 缓存所占用的磁盘空间比 JPEG 缓存大 8 到 12 倍。</span></span><span style="font-family:'Microsoft YaHei'; font-size:14px">因此，应考虑是需要更好的性能还是更大的磁盘空间。</span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"></span></span></p>
<p></p>
<p><span style="font-size:18px; color:#ff6666"><span style="font-family:'Microsoft YaHei'; background-color:rgb(204,255,255)"><strong>使用 DXT 缓存时有哪些特殊注意事项？</strong></span></span></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'">能否使用 DXT 取决于 OpenGL 图形卡驱动程序和图形卡硬件。有时，一些 OpenGL 工具可能无法支持或无法正常支持 DXT 压缩。这可能导致 DXT 缓存中产生失真。要解决此类问题，可以更新显卡驱动程序版本或使用其他显卡。</span></span></p>
<p></p>
<p><span style="font-size:14px"><span style="font-family:'Microsoft YaHei'"></span></span></p>
<p></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用矢量面裁剪栅格数据的对齐问题]]></title>
      <url>/2014/07/29/AboutClippingRaster/</url>
      <content type="html"><![CDATA[<p>最近凑巧有几个比较多的栅格裁剪问题，整理如下：</p>
<p>我们只有由于栅格与矢量数据的存储模型不相同，这就导致栅格数据的像元无法与矢量数据的点等同，从而导致裁切后的对齐问题，放大数据我们就能发现，如下图可以说明：（其中黑白色为栅格数据，每个正方形代表一个像元，红色区域为矢量面数据。）</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutClippingRaster_1.jpg" alt=""></p>
<p>我们按照默认设置运行 Raster工具箱中的 Clip 工具，看看结果，蓝色的栅格部分：</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutClippingRaster_2.jpg" alt=""></p>
<p>发现，栅格数据裁剪完，并不是需要的矢量数据范围，而是矢量数据压盖的最小栅格数据范围。</p>
<p>如果我们需要得到的栅格，是矢量数据的范围，该如何做呢？</p>
<p><strong>【旧版本】如果正在使用的是10.1以及更早期的版本：</strong></p>
<ol>
<li>首先将作为裁剪范围的矢量面（Feature）转为图形（Graphic），在ArcMap中，在面图层上右键，使用 Convert &nbsp;Features to Graphics… 菜单，如下图：</li>
</ol>
<p>（Graphic 被选中状态下，周围是有几个小方块的，与 Feature 被选中的亮蓝色不同哦…）</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutClippingRaster_Graphic.jpg" alt=""></p>
<p>2.在 ArcMap 中，使用图层的右键菜单中的Export功能，导出选中Graphic 范围内的数据：</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutClippingRaster_Selected.jpg" alt=""></p>
<p>看看结果，为了清楚，我将Graphic的填充色去掉，栅格数据左边与上边界是与矢量数据一致的，这样就尽最大范围保持了结果栅格与矢量数据范围的最大一致性：</p>
<p><strong>PS：有人会问，为什么下边和右边边界没有完全贴合？ 需要知晓，栅格数据的行列数是矢量数据长度整除像元大小（导出的像元大小默认与源数据相同，也可以根据需要修改）得出的，而通常有余数的存在，因此没有那么严丝合缝，归根结底还是两种数据的存储模型不同导致的。</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/AboutClippingRaster_Format.jpg" alt=""></p>
<p><strong>【新版本】如果正在使用的是10.2以及更新期的版本：</strong></p>
<p>新版本中 Clip 工具提供了额外的参数，可以简单的勾选就完成了上面的需求：</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutClippingRaster_Maintain.jpg" alt=""></p>
<p><strong>PS：一定要注意右边的帮助哇，为了尽可能满足矢量数据边界范围，行列数是通过计算调整，也就是像元大小相比原始数据会变化，像元值会进行重采样获取。</strong></p>
<p>看看结果吧，影线区域是矢量，玫红色区域是生成的栅格：</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutClippingRaster_Maintain2.jpg" alt=""></p>
<p>最后来张全家福，对比下，哪种结果是你想要的，决定对应的选择哪种方法 ，（左侧图层顺序，即为右侧图层显示顺序）。</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutClippingRaster_All.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[吧啦下 Background Geoprocessing]]></title>
      <url>/2014/06/25/BackgroundGeoprocessing/</url>
      <content type="html"><![CDATA[<p>今天和大家说一下后台地理处理（GP），说到后台，自然会想到前台。</p>
<p>其实在 ArcGIS Desktop 9.X 以及更早的年代，ArcToolbox 中的工具运行的模式只有前台模式，也就是大家熟悉的情景：运行某个工具，然后工具运行窗口挡在 ArcMap的前面，窗口中的Log不停的滚动，直至工具运行完毕，ArcMap 才能使用。 并且，由于 ArcMap 和 ArcCatalog 是 32 的程序，单进程使用的系统资源是有限的。</p>
<p>为了解决这些问题，后台地理处理就产生了，从 ArcGIS 10.0 之后的版本，后台地理处理一直存在着。如果我们现在使用的操作系统是64bit的，那还可以安装后台地理处理64位程序包，在安装光盘中可以找到 ArcGIS for Desktop Background Geoprocessing （64bit）。</p>
<p><img src="http://kikitamap.com/images/blogImg/BackgroundGeoprocessing_Setup.jpg" alt=""></p>
<p><br></p>
<p><strong>为什么安装&nbsp;ArcGIS for Desktop Background Geoprocessing（64 位）？</strong></p>
<p>因为，后台执行一个工具时，在后台会启动一个新的进程，我们可以理解成开了一个新的 ArcMap，只是没有界面的ArcMap。安装 ArcGIS for Desktop—Background Geoprocessing（64 位）之后，就替代了原先的常规 32 位后台处理。在 RAM 容量较大的系统中，使用 64 位后台处理，有助于处理在 32 位环境中无法处理的大数据。由于所有执行工作都在原生 64 位空间中完成，因此可使用更多系统资源。</p>
<p>由于新开进程，所以，在打开 ArcMap 之后的第一次执行后台GP，会发现很慢有延迟，之后的几次会很快出现进度条和消息。实际上，后台处理会启动两个进程，两个 RuntimeLocalServer.exe 进程。在工具执行期间不要随便结束这两个进程，否则可能会导致结果异常。</p>
<p><img src="http://kikitamap.com/images/blogImg/BackgroundGeoprocessing_exe.jpg" alt=""></p>
<p><br></p>
<p><strong>如何选择前台与后台GP处理？</strong></p>
<p>实际上，如果我们只是在做一些日常的小测试，做些小数据量的处理，可能除了结果之外，响应速度是我们关心的，那还是完全可以选择前台的，毕竟省去了新开进程的时间。但是如果仅仅因为在某些情况下的不稳定放弃后台运行，不是很明智，毕竟后台执行GP可以完全不耽误你手头的工作，还能更好的利用系统的资源。 后台运行从10.0版本开始产生，早期bug缠身，但是随着版本的更新，日趋稳定，10.2之后也开始支持并行运算，后台处理GP还是个不错的选择。</p>
<p>还是需要注意，什么情况下，后台GP不适用？</p>
<p><br></p>
<p><strong>后台64GP不支持的数据类型</strong> </p>
<ul>
<li>个人地理数据库(.mdb)，Excel表（.xls、.xlsx）     </li>
</ul>
<p><br></p>
<p><strong>不在后台运行的工具包括：</strong> </p>
<ul>
<li>元数据转换工具集（Metadata conversion&nbsp;）中的工具</li>
<li>地理数据库管理工具集（Geodatabase administration）中的工具</li>
<li>所有 Coverage 工具</li>
<li>用于创建包（Packages）的工具</li>
<li>绘图工具（Graphing tools）（仅针对 64 位地理处理；这些工具在传统的 32 位后台处理中运行）</li>
<li>作者禁用后台处理的自定义脚本、模型或功能工具</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装 PythonWin]]></title>
      <url>/2014/05/29/SetupPythonWin/</url>
      <content type="html"><![CDATA[<p><strong>确定已安装Python的版本</strong></p>
<p>在 ArcGIS Desktop 中打开命令行，输入如下命令：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(sys.version)</span></span></span><br></pre></td></tr></table></figure>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonWin_Script.jpg" alt=""></p>
<p><br></p>
<p><strong>PythonWin下载</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonWin_PythonWin.png" alt=""></p>
<p>Python IDE 有很多，采用最常用的 PythonWin。</p>
<p>PythonWin 下载地址：<a href="http://sourceforge.net/projects/pywin32/files/pywin32/" target="_blank" rel="noopener">http://sourceforge.net/projects/pywin32/files/pywin32/</a></p>
<p>在链接中选择最新的 PythonWin 可用版本。</p>
<p><br></p>
<p><strong>ArcGIS for Desktop 和 ArcGIS Engine 产品使用 32 位 Python 可执行文件；</strong> </p>
<p><strong>ArcGIS for Server 和 ArcGIS for Desktop—Background Geoprocessing 产品使用 64 位 Python 可执行文件。</strong></p>
<p><strong>Arcmap Python Window 与 PythonWin 的选择与对比：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/SetupPythonWin_Compare.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[地图投影类型]]></title>
      <url>/2014/03/19/MapProjectionType/</url>
      <content type="html"><![CDATA[<p>投影坐标系在二维平面中进行定义，投影坐标系是基于地理坐标系创建的，也就是在地理坐标系的基础上加上投影算法。</p>
<p>坐标原点位于网格的中心，（x，y）=（0，0）</p>
<p><img src="http://kikitamap.com/images/blogImg/MapProjectionType_CS.gif" alt=""></p>
<h1 id="Ⅰ-变形"><a href="#Ⅰ-变形" class="headerlink" title="Ⅰ 变形"></a>Ⅰ 变形</h1><p>地球表面是一个曲面，从曲面至平面的数学换算即为地图投影的过程，不同投影会引起不同类型的变形，例如，导致数据的形状、面积、距离或方向发生变形。 </p>
<p><strong>等角投影：</strong></p>
<p>等角投影保留局部形状。要保留描述空间关系的各个角，等角投影必须在地图上显示以 90 度角相交的垂直经纬网线。地图投影通过保持所有角不变来加以实现。缺点是由一些弧线围起来的区域将在此过程中发生巨大变形。地图投影无法保留较大区域的形状。</p>
<p><strong>等积投影：</strong></p>
<p>保留所显示要素的面积。为此，形状、角和比例等其他属性将发生变形。在等积投影中，经线和纬线可能不垂直相交。有些情况下，尤其是较小区域的地图，形状不会明显变形，且很难区分等积投影和等角投影，除非加以说明或进行测量。</p>
<p><strong>等距投影：</strong></p>
<p>保留某些点间的距离。任何投影都无法在整幅地图中正确保持比例不变。不过，多数情况下，地图上总会存在一条或多条这样的线：比例沿着这些线将正确地保持不变。多数等距投影都具有一条或多条这样的线：在此类线中，地图上线的长度（按地图比例尺计算）与地球上同一条线的长度相同，无论它是大圆还是小圆，是直线还是曲线。此类距离被视为真实距离。例如，在正弦投影中，赤道和所有纬线就是其真实长度。在其他等距投影中，赤道和所有经线具有真实长度。而其他投影（例如，两点等距离）仍会显示地图上一点或两点与相隔点间的真实比例。请记住，任何投影都不能实现地图上的所有点是等距离的。</p>
<p><br></p>
<h1 id="Ⅱ-投影方法"><a href="#Ⅱ-投影方法" class="headerlink" title="Ⅱ 投影方法"></a>Ⅱ 投影方法</h1><p>地图投影使用数学公式将地球上的球面坐标与平面坐标关联起来。</p>
<p>圆锥投影：</p>
<p><img src="http://kikitamap.com/images/blogImg/MapProjectionType_Cone.gif" alt=""></p>
<p>最简单的圆锥投影是沿一条纬线与地球相切获得的投影。这条纬线称作标准纬线。所有的经线都投影到圆锥面上，并在圆锥的顶点或某一点处相交。纬线在圆锥面上的投影是一个个环。将圆锥沿任意一条经线“剪开”后即可获得最终的圆锥投影，投影中的经线显示为汇聚到一点的直线，而纬线显示为许多的同心圆弧。与剪开线相对的经线成为中央子午线。</p>
<p>通常距标准纬线越远，变形就越严重。因此去掉圆锥的顶部会产生更精确的投影。此过程可以通过不使用极点区域的投影数据来实现。圆锥投影用于沿东西方向延伸的中纬度地区。</p>
<p><img src="http://kikitamap.com/images/blogImg/MapProjectionType_Cone2.gif" alt=""></p>
<p>较复杂的圆锥投影会与地球表面的两处位置相接触。这类投影被称作割投影，并带有两条标准纬线。也可以使用一条标准纬线和一个比例尺因子来定义割投影。在割投影中，标准纬线之间与标准纬线之外的部分变形模式是不同的。通常，割线投影的整体变形程度小于切线投影。在更复杂的圆锥投影中，圆锥的轴并不与地球的极轴重合。此类投影称作斜轴投影。</p>
<p>地理要素的制图表达取决于纬线的间距。等间距排列纬线时，投影在南北方向是等距的，但不是等角或等积的。此类投影的一个示例是等距圆锥投影。对于小面积区域，整体变形是最小的。在兰勃特等角圆锥投影中，中央的纬线比靠近边缘的纬线排列得更紧密，在小比例尺和大比例尺地图中都可以保持小地理区域的形状。在阿尔伯斯等积圆锥投影中，靠近北部和南部边缘的纬线比中间的纬线更加紧密，且投影的面积不变。</p>
<p><strong>圆柱投影：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MapProjectionType_Cylinder.gif" alt=""></p>
<p>与圆锥投影类似，圆柱投影也存在相切或相割两种情况。</p>
<p>墨卡托投影是最常用的圆柱投影之一，并且通常以赤道为切线。经线以几何方式投影到圆柱面上，而纬线以数学方式进行投影。这种投影方式产生成 90 度的经纬网格。将圆柱沿任意一条经线“剪开”可以获得最终的圆柱投影。经线等间距排列，而纬线间的间距越靠近极点越大。此投影是等角投影，并沿直线显示真实的方向。在墨卡托投影中，恒向线、等方位角线是直线，但大多数的大圆都不是直线。</p>
<p>对于更复杂的圆柱投影，圆柱发生了旋转，因此切线和割线的位置发生了变化。横轴圆柱投影，例如横轴墨卡托投影，使用经线作为相切的接触线，或使用平行于经线的线作为割线。这样标准线即为南北方向的线，且其上的比例是真实的。斜轴圆柱是围绕赤道和经线间的任意大圆线旋转而成的圆柱。在此类更加复杂的投影中，大多数经线和纬线都不再是直线。</p>
<p>在所有的圆柱投影中，切线和割线都不发生变形，因此它们是等距离线。其他的地理属性因具体的投影方式而异。</p>
<p><strong>平面投影：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/MapProjectionType_Plane.gif" alt=""></p>
<p>平面投影将地图数据投影到与地球接触的平面。平面投影也称为方位投影或天顶投影。</p>
<p>此类型的投影通常在一点与地球相切，但也可能相割。接触点可以是北极、南极、赤道上的某点或者赤道与两极之间的任意点。此点会指定投影中心，并将作为投影的焦点。焦点由中央经度和中央纬度标识。可能的投影方法包括极方位投影、赤道投影和斜轴投影。<br>极方位投影是最简单的形式。纬线是以极点为中心的同心圆，经线是在极点处与其真实的方向角相交的直线。在其他投影方法中，平面投影在焦点处将具有 90 度的经纬网格角度。由焦点确定的方向是精确的。</p>
<p>穿过焦点的大圆由直线表示；因此从中心到地图上其他任意点的最短距离是直线。面积和形状变形后的图案是以焦点为中心的圆。由于这个原因，方位投影更适合圆形区域，而不太适合矩形区域。平面投影最常用于绘制两极地区的地图。</p>
<p>某些平面投影会在空间中从特定点来观测表面数据。观测点将确定球面数据如何投影到平面。在不同的方位投影中，用于观测所有位置的透视图也有所不同。透视点可以是地球的中心、与焦点正对的表面点或者地球外部的某点，就如同从卫星或其他星球上遥看一样。</p>
<p>有部分方位投影是按焦点和透视点（如果适用）分类的。球心投影从地心来观测表面数据，而立体投影是在两极之间进行观测。正射投影从无穷远点（如同从外太空）观察地球。注意观察透视图之间的差异如何决定与赤道相对的变形程度。</p>
<p>详情参见：<a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//003r0000000p000000" target="_blank" rel="noopener">http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//003r0000000p000000</a></p>
<p><br></p>
<p><strong>ArcGIS 支持的全部投影的列表：</strong></p>
<p><a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#/na/003r00000017000000/" target="_blank" rel="noopener">http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#/na/003r00000017000000/</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Landset 8 与 ArcGIS]]></title>
      <url>/2014/03/03/Landset8_ArcGIS/</url>
      <content type="html"><![CDATA[<p>如果现在使用的 ArcGIS 10.2 版本，如果需要向镶嵌数据集中添加 Landset 8 的数据，需要安装一个补丁：<strong>ArcGIS 10.2 for (Desktop, Engine, Server) Landsat 8 Patch</strong>。</p>
<p><strong>下载地址</strong>：<a href="http://support.esri.com/en/downloads/patches-servicepacks/view/productid/66/metaid/2012" target="_blank" rel="noopener">http://support.esri.com/en/downloads/patches-servicepacks/view/productid/66/metaid/2012</a></p>
<p>如果使用的是，ArcGIS 10.2.1，无需任何补丁，可以直接向镶嵌数据集中添加 Landset 8 的数据。</p>
<p><img src="http://kikitamap.com/images/blogImg/Landset8_ArcGIS_AddRaster.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/Landset8_ArcGIS_Meta.jpg" alt=""></p>
<p><br></p>
<p><br></p>
<p><strong>Landsset 8 常用的波段合成应用：</strong><br>| 应用                               | 波段    |<br>| ——————————– | —– |<br>| Natural Color                    | 4 3 2 |<br>| False Color (urban)              | 7 6 4 |<br>| Color Infrared (vegetation)      | 5 4 3 |<br>| Agriculture                      | 6 5 2 |<br>| Atmospheric Penetration          | 7 6 5 |<br>| Healthy Vegetation               | 5 6 2 |<br>| Land/Water                       | 5 6 4 |<br>| Natural With Atmospheric Removal | 7 5 3 |<br>| Shortwave Infrared               | 7 5 4 |<br>| Vegetation Analysis              | 6 5 4 |</p>
<p><br></p>
<p><strong>Landset 7 与 landset 8 对比新增波段：</strong></p>
<table>
<thead>
<tr>
<th><strong>Landsat 7</strong></th>
<th></th>
<th></th>
<th>Landsat 8</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Band Name</td>
<td>Bandwidth (µm)</td>
<td>Resolution (m)</td>
<td><strong>Band Name</strong></td>
<td><strong>Bandwidth (µm)</strong></td>
<td><strong>Resolution (m)</strong></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td><strong>Band 1 Coastal</strong></td>
<td><strong>0.43 – 0.45</strong></td>
<td><strong>30</strong></td>
</tr>
<tr>
<td>Band 1 Blue</td>
<td>0.45 – 0.52</td>
<td>30</td>
<td><strong>Band 2 Blue</strong></td>
<td><strong>0.45 – 0.51</strong></td>
<td><strong>30</strong></td>
</tr>
<tr>
<td>Band 2 Green</td>
<td>0.52 – 0.60</td>
<td>30</td>
<td><strong>Band 3 Green</strong></td>
<td><strong>0.53 – 0.59</strong></td>
<td><strong>30</strong></td>
</tr>
<tr>
<td>Band 3 Red</td>
<td>0.63 – 0.69</td>
<td>30</td>
<td><strong>Band 4 Red</strong></td>
<td><strong>0.64 – 0.67</strong></td>
<td><strong>30</strong></td>
</tr>
<tr>
<td>Band 4 NIR</td>
<td>0.77 – 0.90</td>
<td>30</td>
<td><strong>Band 5 NIR</strong></td>
<td><strong>0.85 – 0.88</strong></td>
<td><strong>30</strong></td>
</tr>
<tr>
<td>Band 5 SWIR 1</td>
<td>1.55 – 1.75</td>
<td>30</td>
<td><strong>Band 6 SWIR 1</strong></td>
<td><strong>1.57 – 1.65</strong></td>
<td><strong>30</strong></td>
</tr>
<tr>
<td>Band 7 SWIR 2</td>
<td>2.09 – 2.35</td>
<td>30</td>
<td><strong>Band 7 SWIR 2</strong></td>
<td><strong>2.11 – 2.29</strong></td>
<td><strong>30</strong></td>
</tr>
<tr>
<td>Band 8 Pan</td>
<td>0.52 – 0.90</td>
<td>15</td>
<td><strong>Band 8 Pan</strong></td>
<td><strong>0.50 – 0.68</strong></td>
<td><strong>15</strong></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td><strong>Band 9 Cirrus</strong></td>
<td><strong>1.36 – 1.38</strong></td>
<td><strong>30</strong></td>
</tr>
<tr>
<td>Band 6 TIR</td>
<td>10.40 – 12.50</td>
<td>30/60</td>
<td><strong>Band 10 TIRS 1</strong></td>
<td><strong>10.6 – 11.19</strong></td>
<td><strong>100</strong></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td><strong>Band 11 TIRS 2</strong></td>
<td><strong>11.5 – 12.51</strong></td>
<td><strong>100</strong></td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Raster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Shapefile 的局限性]]></title>
      <url>/2014/02/27/LimitsofShapefile/</url>
      <content type="html"><![CDATA[<p>Shapefile 是一种开放的非拓扑的简单几何数据类型，深受数据处理人员的喜爱。 Shapefile 利用 dBASE 文件格式（.dbf 文件）来存储属性，dBase这种上世纪80年代的数据格式，现在基本淡出舞台。 虽然Shapefile有万般好，但是，今天还是要来说说shapefile的局限性，也就是使用限制有什么，以便合理的选择使用Shapefile数据。</p>
<h1 id="1-文件容量限制："><a href="#1-文件容量限制：" class="headerlink" title="1. 文件容量限制："></a><strong>1. 文件容量限制：</strong></h1><p>Shapefile 每个子文件都有大小最大不能超过 2 GB ，以点要素为例，最多约能存储 7000 万个。</p>
<h1 id="2-不支持高级对象："><a href="#2-不支持高级对象：" class="headerlink" title="2. 不支持高级对象："></a><strong>2. 不支持高级对象：</strong></h1><p>Shapefile不支持注记要素类、关系类、拓扑关系、属性域和子类、坐标精度和分辨率等。</p>
<p>不支持通过参数定义的曲线（也称为圆弧曲线）。</p>
<h1 id="3-字段存储限制："><a href="#3-字段存储限制：" class="headerlink" title="3. 字段存储限制："></a><strong>3. 字段存储限制：</strong></h1><p>Shapefile无法存储：空值，无法向上舍入数字，对 Unicode 字符串的支持不足，字段名称最长只能为 10 个字符，且在同一字段中无法同时存储日期和时间。</p>
<p>Shapefile支持的最大字段数为 255。若超出此上限，当转换为 shapefile 时只会转换前 255 个字段。</p>
<p>dBASE 文件不支持类型 blob、guid、全局 ID、坐标 ID 或栅格字段类型。</p>
<p><br></p>
<table>
<thead>
<tr>
<th>包含空值的数据类型</th>
<th style="text-align:left">空值替换</th>
</tr>
</thead>
<tbody>
<tr>
<td>数字 - 当工具需要输出“空”、无穷大或 NaN（非数字）时</td>
<td style="text-align:left">-1.7976931348623158e+308（最大负值的 IEEE 标准）</td>
</tr>
<tr>
<td>数字（所有其他地理处理工具）</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td>文本</td>
<td style="text-align:left">“ ”（空白 - 无空格）</td>
</tr>
<tr>
<td>Date</td>
<td style="text-align:left">存储为零，但显示为“&lt;空&gt;”</td>
</tr>
</tbody>
</table>
<h1 id="4-字段宽度限制："><a href="#4-字段宽度限制：" class="headerlink" title="4. 字段宽度限制："></a>4. 字段宽度限制：</h1><table>
<thead>
<tr>
<th>地理数据库数据类型</th>
<th style="text-align:left">dBASE 字段类型</th>
<th style="text-align:center">dBASE 字段宽度（字符数）</th>
</tr>
</thead>
<tbody>
<tr>
<td>对象 ID</td>
<td style="text-align:left">数值</td>
<td style="text-align:center">9</td>
</tr>
<tr>
<td>短整型</td>
<td style="text-align:left">数值</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td>长整型</td>
<td style="text-align:left">数值</td>
<td style="text-align:center">9</td>
</tr>
<tr>
<td>浮点型</td>
<td style="text-align:left">浮点型</td>
<td style="text-align:center">13</td>
</tr>
<tr>
<td>双精度</td>
<td style="text-align:left">浮点型</td>
<td style="text-align:center">13</td>
</tr>
<tr>
<td>文本</td>
<td style="text-align:left">字符</td>
<td style="text-align:center">254</td>
</tr>
<tr>
<td>Date</td>
<td style="text-align:left">Date</td>
<td style="text-align:center">8</td>
</tr>
</tbody>
</table>
<h1 id="5-性能限制-nbsp"><a href="#5-性能限制-nbsp" class="headerlink" title="5. 性能限制&nbsp;"></a><strong>5. 性能限制&nbsp;</strong></h1><p>由于形状压缩方法的不同，shapefile 所占用的空间可能为文件地理数据库或 SDE 的三到五倍。</p>
<p>Shapefile 的空间索引效率较数据库低。这就意味着，同地理数据库要素类相比，空间查询耗时更长。当处理大量要素时，效率低。</p>
<p>dBASE 文件不支持 WHERE 子句，也不支持 SQL。</p>
<p>当保存所做编辑时属性索引会被删除，因此必须重新创建属性索引。</p>
<h1 id="6-多面体存储限制"><a href="#6-多面体存储限制" class="headerlink" title="6. 多面体存储限制"></a><strong>6. 多面体存储限制</strong></h1><p>Shapefiles 支持多面体，但不支持以下多面体的高级功能：纹理坐标、纹理及部分色带、光线法向量。</p>
<p>详情参考：<a href="http://resources.arcgis.com/en/help/main/10.2/index.html#/Geoprocessing_considerations_for_shapefile_output/005600000013000000/" target="_blank" rel="noopener">http://resources.arcgis.com/en/help/main/10.2/index.html#/Geoprocessing_considerations_for_shapefile_output/005600000013000000/</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[shapefile与字符集编码设置]]></title>
      <url>/2014/02/13/shapefileCodePage/</url>
      <content type="html"><![CDATA[<p>在 ArcGIS Desktop&nbsp;(ArcMap, ArcCatalog, and ArcToolbox)中，有编码页转换功能（CODE PAGE CONVERSION），可以读写多种字符编码的 shapefile 和 dBASE 表。 在系统注册表中，编码页转换功能（CODE PAGE CONVERSION）命名为 ‘dbfDefault’，可以修改这个值。 </p>
<p>在&nbsp;ArcGIS 10.2.1 之前，可以直接按照 ‘dbfDefault’ 设置方法 到注册表中修改。 </p>
<p>在&nbsp;ArcGIS Desktop 10.2.1 以及以后的版本，shapefile (.DBF) 的编码页的默认设置为&nbsp;UTF-8 (UNICODE) 。</p>
<p><br></p>
<hr>
<p>更新内容（2014.8.1）</p>
<p>ArcGIS Desktop 10.2.1 和 10.2.2 版本下需要修改编码行为，先打补丁，然后再按照 <strong>‘dbfDefault’ 设置方法</strong> 到注册表中修改。**</p>
<p><strong>10.2.1</strong>：  <a href="http://support.esri.com/en/downloads/patches-servicepacks/view/productid/160/metaid/2090" target="_blank" rel="noopener">http://support.esri.com/en/downloads/patches-servicepacks/view/productid/160/metaid/2090</a> </p>
<p><strong>10.2.2</strong>：  <a href="http://support.esri.com/en/downloads/patches-servicepacks/view/productid/67/metaid/2089" target="_blank" rel="noopener">http://support.esri.com/en/downloads/patches-servicepacks/view/productid/67/metaid/2089</a></p>
<hr>
<p><br></p>
<h1 id="‘dbfDefault’-的作用"><a href="#‘dbfDefault’-的作用" class="headerlink" title="‘dbfDefault’ 的作用"></a>‘dbfDefault’ 的作用</h1><p>使用 ArcGIS for Desktop 打开 dBase 表文件时，程序先去读头文件中的 &nbsp;Language Driver ID (LDID) 或者是同名 *.CPG文件。前面二者都是用来在读文件之前，决定用什么编码类型来正确读出文件。如果有必要， ArcGIS for Desktop 会进行编码转换来显示字符串。</p>
<p>如果文件缺失&nbsp;LDID 或者 &nbsp;.CPG 文件，编码就会被假定为 Windows (ANSI/Multi-byte)。也是因为这个原因，<span style="font-size:12px">如果文件是 OEM 编码的，并且没有写入 LDID 或者 .CPG，字符就会出现乱码。 也就说 ArcGIS 把 OEM 文件当成 ANSI 文件来处理了。</span></p>
<p>多数情况下， shapefiles 和 dBASE 文件都会存储编码页信息。 但是有些程序的 OEM 文件没有包含编码页信息，例如 Microsoft Access 2000 and Excel 2000，所以这些文件读取时，就会乱码。为了避免这个问题，用户可以给没有编码页信息的文件设置<br><strong>dbfDefault</strong>。</p>
<p><strong>写</strong></p>
<p>在注册表中设置 ‘dbfDefault’ ，可以决定导出的 shapefile 和 dBASE 的编码类型。例如，把 ‘dbfDefault’ 设置为 OEM ，那么用 ArcMap, ArcCatalog, ArcToolbox 生成出来的 shapefile 和 dBASE 文件就是以 OEM编码的，设置成 ANSI ，那 shapefile 和 dBASE 文件就是 ANSI 编码的。 </p>
<p><strong>读</strong></p>
<p>读 shapefile 和 dBASE 文件的逻辑与写是相同的，如果缺失编码信息，ArcGIS 读取文件的编码类型由 <strong>dbfDefault</strong>决定。</p>
<p><br></p>
<h1 id="不适用’dbfDefault’-的情况"><a href="#不适用’dbfDefault’-的情况" class="headerlink" title="不适用’dbfDefault’ 的情况"></a>不适用’dbfDefault’ 的情况</h1><p>‘dbfDefault’ 这项设置仅对 ArcGIS Desktop 生效，对于一些很老版本的ArcGIS 产品不适用；仅对 shapefile 生效，Personal GDB等不生效。</p>
<p><br></p>
<p><strong>无视 ‘dbfDefault’ 设置的包括：</strong></p>
<p><em>In ArcInfo Workstation:</em></p>
<ul>
<li><p>ARCSHAPE with &amp;CODEPAGE OEM creates a shapefile in OEM&nbsp;</p>
</li>
<li><p>ARCSHAPE with &amp;CODEPAGE ANSI creates a shapefile in ANSI&nbsp;</p>
</li>
<li><p>INFODBASE with &amp;CODEPAGE OEM creates a dBASE file in OEM&nbsp;</p>
</li>
<li><p>INFODBASE with &amp;CODEPAGE ANSI creates a dBASE file in ANSI&nbsp;</p>
</li>
</ul>
<p><em>In ArcView 3.x,&nbsp;</em></p>
<ul>
<li>Shapefile and dBASE files are saved in the ANSI code page.&nbsp;</li>
</ul>
<p><em>In ArcGIS for Desktop (regardless of the dbfDefault setting),&nbsp;</em></p>
<ul>
<li><p>Personal geodatabases are saved in Unicode&nbsp;</p>
</li>
<li><p>Personal geodatabase tables are saved in Unicode&nbsp;</p>
</li>
<li><p>Coverages are saved in the ISO code page&nbsp;</p>
</li>
<li><p>INFO files are saved in the ISO code page&nbsp;</p>
</li>
<li><p>Interchange files are saved in the ANSI code page&nbsp;</p>
</li>
<li><p>Text files are saved in the ANSI code page</p>
</li>
</ul>
<p><br></p>
<h1 id="‘dbfDefault’-设置方法"><a href="#‘dbfDefault’-设置方法" class="headerlink" title="‘dbfDefault’ 设置方法"></a>‘dbfDefault’ 设置方法</h1><ol>
<li><p>开始 – 运行，输入”Regedit“，打开&nbsp;<strong>注册表</strong>。</p>
</li>
<li><p>如是用的是 10.x 版本 ArcGIS Desktop，定位到 <strong><code>My Computer\HKEY_CURRENT_USER\Software\ESRI\Desktop 10.x</code></strong>. 如果是9.3.1之前的版本，定位到 <strong><code>&#39;My Computer\HKEY_CURRENT_USER\Software\ESRI&#39;</code></strong>。 </p>
</li>
<li><p>创建项 <strong><code>Common</code></strong>， 接着在其下创建 <strong><code>CodePage</code></strong> 项， 添加 <strong><code>字符串</code></strong> ，名称： <strong><code>dbfDefault</code></strong> ，健值： <strong><code>oem</code> （或者<code>936</code>）</strong>。</p>
</li>
</ol>
<p><img src="http://kikitamap.com/images/blogImg/shapefileCodePage.jpg" alt=""></p>
<p><br></p>
<p>如下为支持的编码值：</p>
<p><strong>OEM</strong> Code Page Values:</p>
<p>OEM, 437, 708, 720, 737, 775, 850, 852, 855, 857, 860, 861, 862, 863, 864, 865, 866, 869, 932, 936, 950</p>
<p><strong>ANSI</strong> Code Page Values:</p>
<p>ANSI, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, Big5, SJIS&nbsp;</p>
<p><strong>ISO</strong> Code Page Values:</p>
<p>ISO, 88591, 88592, 88593, 88594, 88595, 88596, 88597, 88598, 88599, 885910, 885913, 885915, EUC</p>
<p><strong>Unicode</strong> Values:</p>
<p>UTF-8</p>
<p><br></p>
<p>现在，Shapefiles 可以以 UTF-8 存储，但是，只有在 ArcGIS Desktop 中才能被识别。</p>
<p>相关技术文章：</p>
<p><a href="http://support.esri.com/en/knowledgebase/techarticles/detail/21106" target="_blank" rel="noopener">http://support.esri.com/en/knowledgebase/techarticles/detail/21106</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[3D分析之可见性分析工具]]></title>
      <url>/2014/02/11/3DVisibility/</url>
      <content type="html"><![CDATA[<p><img src="http://kikitamap.com/images/blogImg/3DVisibility_Toolset.png" alt=""></p>
<p>ArcGIS 通过分析功能面的视域来确定不同区域中的可见性。</p>
<p>视域的计算：如果仅有一个观测点，则为可从观测点看到的单元赋值 1，为无法从观测点看到的所有单元赋值 0。</p>
<p><br></p>
<h2 id="Construct-Sight-Lines（构造视线）"><a href="#Construct-Sight-Lines（构造视线）" class="headerlink" title="Construct Sight Lines（构造视线）"></a><strong>Construct Sight Lines（构造视线）</strong></h2><p>创建表示视线（从一个或多个视点到目标要素类的要素）的线要素。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DVisibility_SightLine.png" alt=""></p>
<p>注意，关于高度字段的认定：</p>
<p>观察点和目标要素的高度源默认为以下列表中遇到的第一个字段名称：</p>
<ul>
<li>Shape.Z（只对启用 Z 值的要素可用）</li>
<li>Spot</li>
<li>Z</li>
<li>Z_Value</li>
<li>Height</li>
<li>Elev</li>
<li>Elevation</li>
<li>Contour</li>
</ul>
<p>使用连接字段为给定观察点指定一个或多个目标。如果未使用连接字段，则将所有点连接到所有目标。</p>
<p><br></p>
<h2 id="Line-of-Sight（通视分析）"><a href="#Line-of-Sight（通视分析）" class="headerlink" title="Line of Sight（通视分析）"></a><strong>Line of Sight（通视分析）</strong></h2><p>确定由多面体、栅格、TIN、terrain 或 LAS 数据集定义的表面上视线的可见性。</p>
<p>理想的视线应是简单的直线，包括两个折点，分别代表用于确定可见性的观测点和目标位置。</p>
<p>视线可以用前面的构造视线工具生成。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DVisibility_LineofSight.png" alt=""></p>
<p>可以可选生成，阻挡每个线的目标可见性的第一个障碍物的位置。</p>
<p>输出线要素的属性表包含以下字段：</p>
<ul>
<li>SourceOID - 用于计算可见性的线要素的唯一 ID。</li>
<li>VisCode - 沿线的可见性。值为 1 表示可见，值为 2 表示不可见。该字段仅在输出几何是线的情况下存在。</li>
<li>TarIsVis - 沿线的目标可见性。值为 1 表示可见，值为 0 表示不可见。该字段仅在输出几何是线的情况下存在。</li>
<li>OBSTR_MPID - 阻碍通视线的多面体的唯一 OID。如果不存在阻碍通视线的多面体，则该字段含有一个为 -1 或 -9999 的值。如果目标被表面所阻碍，则该值为 -1。如果目标可见，则值为 -9999。</li>
</ul>
<p><br></p>
<h2 id="Observer-Points（视点分析）"><a href="#Observer-Points（视点分析）" class="headerlink" title="Observer Points（视点分析）"></a><strong>Observer Points（视点分析）</strong></h2><p>识别从各栅格表面位置进行观察时可见的观察点。</p>
<p>确定观察点是信息密集型处理。处理时间取决于分辨率。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DVisibility_ObserverPoint.png" alt=""></p>
<p><br></p>
<h2 id="Skyline（天际线）"><a href="#Skyline（天际线）" class="headerlink" title="Skyline（天际线）"></a><strong>Skyline（天际线）</strong></h2><p>生成一个包含天际线轮廓分析结果的线要素类或多面体要素类。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DVisibility_Skyline.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[LAS Dataset 概览]]></title>
      <url>/2014/02/11/LASDatasetOverview/</url>
      <content type="html"><![CDATA[<h1 id="一、了解激光雷达"><a href="#一、了解激光雷达" class="headerlink" title="一、了解激光雷达"></a><strong>一、了解激光雷达</strong></h1><p>Lidar(Light Detection And Ranging)：激光探测及测距，是一种光学遥感技术，使用激光对地球表面的密集采样，产生高精度X、Y、Z测量值。</p>
<p>激光雷达系统的主要硬件组成部分包括一组车辆（飞机、直升机、车辆以及三脚架）、激光扫描系统、GPS（全球定位系统）和 INS（惯性导航系统）。INS 系统测量激光雷达系统的滚动角、俯仰角与前进方向。</p>
<p>激光雷达是一个主动光学传感器，它在沿着特定的测量路径移动时向一个目标发射激光束。激光雷达传感器中的接收器会对从目标反射回来的激光进行检测和分析。这些接收器会记录激光脉冲从离开系统到返回系统的精确时间，以此计算传感器与目标之间的范围距离。这些距离测量值会与位置信息（GPS 和 INS）一起转换为对象空间中反射目标实际三维点的测量值。完成激光雷达数据采集测量之后，将通过分析激光的时间范围、激光的扫描角度、GPS 位置和 INS 信息将点数据后处理成高度精确的地理配准 x,y,z 坐标。</p>
<p>采集到的激光雷达点的附加信息与 x、y 和 z 位置值存储在一起。为每个记录的激光脉冲保留以下激光雷达点属性：强度、回波编号、回波数、点分类值、在飞行航线边缘的点、RGB（红、绿和蓝）值、GPS 时间、扫描角度和扫描方向。</p>
<p><br></p>
<h1 id="二、激光雷达的类型："><a href="#二、激光雷达的类型：" class="headerlink" title="二、激光雷达的类型："></a><strong>二、激光雷达的类型：</strong></h1><p><strong>i &nbsp; 机载激光雷达（Airborne）</strong></p>
<p>A）地形探测激光雷达（Topographic lidar）</p>
<p>应用如如林业、水文、地貌、城市计划、景观生态、海岸工程、调查评估和体积计算等。</p>
<p>B）深海探测激光雷达（Bathymetric lidar）</p>
<p><br></p>
<h2 id="ii-nbsp-陆地激光雷达（Terrestrial-lidar）"><a href="#ii-nbsp-陆地激光雷达（Terrestrial-lidar）" class="headerlink" title="ii &nbsp;陆地激光雷达（Terrestrial lidar）"></a><strong>ii &nbsp;陆地激光雷达（Terrestrial lidar）</strong></h2><p>A）移动（Mobile）： 可安装在车辆、火车甚至轮船上。</p>
<p>B） 固定（Static）： 三脚架等。</p>
<p><br></p>
<h2 id="三、激光雷达的存储："><a href="#三、激光雷达的存储：" class="headerlink" title="三、激光雷达的存储："></a><strong>三、激光雷达的存储：</strong></h2><p>LAS 是美国摄影测量与遥感协会 (ASPRS) 所创建和维护的行业格式。每个 LAS 文件都在页眉块中包含激光雷达测量的元数据，然后是所记录的每个激光雷达脉冲的所有记录。每个 LAS 文件的页眉部分都保留有激光雷达测量本身的属性信息：数据范围、飞行日期、飞行时间、点记录数、返回的点数、使用的所有数据偏移以及使用的所有比例因子。为 LAS 文件的每个激光雷达脉冲保留以下激光雷达点属性：x,y,z 位置信息、GPS 时间戳、强度、回波编号、回波数目、点分类值、扫描角度、附加 RGB 值、扫描方向、飞行航线的边缘、用户数据、点源 ID 和波形信息。</p>
<p>最初，激光雷达数据以 ASCII 格式交付。由于激光雷达数据集合非常庞大，所以不久之后，开始采用一种称为 LAS 的二进制格式来管理和标准化激光雷达数据的组织和传播方式。现在，以 LAS 表示的激光雷达数据十分常见。LAS 是一种可接受性更强的文件格式，因为 LAS 文件包含的信息更多，而且由于采用二进制，所以导入程序可以更高效地读取。</p>
<p>ArcGIS 支持以 ASCII 或 LAS 文件格式提供的激光雷达数据。ArcGIS支持LAS版本1.0，1.1，1.2和1.3。使用 LAS 版本 1.3 时可用的波形信息不受支持。此外，支持与 1.3 版兼容的 1.4 版 LAS 文件，包含 0-5 的点记录格式。不支持包含 6-10 点记录格式的 1.4 版 LAS 文件。</p>
<p><br></p>
<h1 id="四、激光雷达点分类："><a href="#四、激光雷达点分类：" class="headerlink" title="四、激光雷达点分类："></a><strong>四、激光雷达点分类：</strong></h1><p>每个激光雷达点都可分配一种分类，用于定义反射激光雷达脉冲的对象的类型。可将激光雷达点分成很多个类别，包括地面、裸露地表、冠层顶部和水域。使用 LAS 文件中数字整数代码可定义不同的类。对于 LAS 格式 1.1、1.2 或 1.3，分类代码由美国摄影测量与遥感协会 (ASPRS) 定义。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Desktop 与 Excel]]></title>
      <url>/2014/02/11/ArcGISDesktopVSExcel/</url>
      <content type="html"><![CDATA[<p>微软 OFFICE 产品中，Excel是很强大，并且平民化的表格制作工具。ArcGIS 用户会经常需要在两种软件中做交互，今天就来说一说&nbsp;ArcGIS Desktop 与 Excel。</p>
<h2 id="ArcGIS-Desktop-中访问-Excel-数据"><a href="#ArcGIS-Desktop-中访问-Excel-数据" class="headerlink" title="ArcGIS Desktop 中访问 Excel 数据"></a>ArcGIS Desktop 中访问 Excel 数据</h2><p>Excel 表可直接在 ArcGIS 中打开，使用方法与其他表格数据源类似。例如，可以向 ArcMap 中添加这种表、在 ArcCatalog 中预览这种表，并可将这种表作为地理处理工具的输入数据。</p>
<p>通过 ArcGIS 进行访问Excel表时，每个工作表在 ArcGIS 中都是一个单独的表，名称末尾带有美元符号 $ 标识，但是这个$并不是表名的一部分。如果工作表的表名中包含空格，那表名称周围会括有单引号。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDesktopVSExcel_Excel.jpg" alt=""></p>
<h2 id="对于ArcGIS-Desktop-对-office-版本的支持情况"><a href="#对于ArcGIS-Desktop-对-office-版本的支持情况" class="headerlink" title="对于ArcGIS Desktop 对 office 版本的支持情况"></a>对于ArcGIS Desktop 对 office 版本的支持情况</h2><p>ArcGIS 支持 ：</p>
<ul>
<li>Excel 2003 以及更早版本的 .xls 文件；</li>
<li>Excel 2007 的 .xlsx 文件。</li>
</ul>
<p>为什么要分开说呢？</p>
<p>*.xls 文件可以直接在ArcGIS中以只读的形式打开，例如直接在ArcMap中添加数据、在ArcMap中添加XY数据显示为点、在ArcCatalog中进行查看等等。</p>
<p>而 <em>.xlsx 文件打开时，需要有一个数据驱动。如果我们遇到这个错误：“ <em>*Failed to connect to ddatabase. An underlying database error occured. 没有注册类</em></em>”，那就是缺少驱动的结果。</p>
<p>一般如果我们安装了 MS Office 2010 或者 2013，或者根本就没有安装 Office，这个错误必然会遇到了。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDesktopVSExcel_Error.jpg" alt=""></p>
<p><br></p>
<p>需要安装 &nbsp;2007 Office System 驱动程序（AccessDatabaseEngine.exe），下载英文版点<a href="http://www.microsoft.com/en-us/download/details.aspx?displaylang=en&amp;id=23734" target="_blank" rel="noopener">这里</a>，中文版点<a href="http://www.microsoft.com/zh-cn/download/details.aspx?id=23734" target="_blank" rel="noopener">这里</a>，这个包的官方说明如下：</p>
<p>这个程序安装之后，上述错误即可解决。</p>
<h2 id="ArcGIS访问Excel表时，字段类型的确定"><a href="#ArcGIS访问Excel表时，字段类型的确定" class="headerlink" title="ArcGIS访问Excel表时，字段类型的确定"></a>ArcGIS访问Excel表时，字段类型的确定</h2><p>ArcGIS 访问 Excel 时，字段名称从工作表各列的首行中获取。</p>
<p>在 Excel 中指定的字段类型对 ArcGIS 中显示的字段类型不起任何决定作用。ArcGIS 中的字段类型是由该字段的头八行值扫描决定的。</p>
<p>如果在单个字段中扫描到混合数据类型，则该字段将以字符串字段的形式返回，并且其中的值将被转换为字符串。</p>
<p>在 ArcGIS 中，数值字段将被转换为双精度数据类型。</p>
<h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><ol>
<li><p>如果不想安装前面的驱动，最快的办法使得ArcGIS能够访问2007以后版本的表格文档，那就另存为97-2003版本的 *.xls了。</p>
</li>
<li><p>想把要素类的属性表导出来以供Excel使用，那就将属性表导出为 *.dbf 格式，然后打开方式使用 Excel 即可。</p>
</li>
<li><p>使用工具 Export to Excel 也可以将表导出为 Excel 表。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[DEM渲染洼地淹没图]]></title>
      <url>/2014/01/23/DEMRendering/</url>
      <content type="html"><![CDATA[<p>首先要准备基础数据，一张DEM栅格图。</p>
<p><img src="http://kikitamap.com/images/blogImg/DEMRendering_DEM.jpg" alt=""></p>
<p>然后将掩膜水位以下的数据提取出来以备后用。这里我提取了高程1000以下的像元。</p>
<p><img src="http://kikitamap.com/images/blogImg/DEMRendering_Extract.jpg" alt=""></p>
<p>对这个图层设置分类渲染，并设置半透明：</p>
<p><img src="http://kikitamap.com/images/blogImg/DEMRendering_Transparent.jpg" alt=""></p>
<p>效果：</p>
<p><img src="http://kikitamap.com/images/blogImg/DEMRendering_Effect.jpg" alt=""></p>
<p>生成DEM山影图，使用空间分析工具箱中的 Hillshade</p>
<p><img src="http://kikitamap.com/images/blogImg/DEMRendering_Hillshade.jpg" alt=""></p>
<p>叠在一起就很漂亮了，可以表示，某个高度下水淹没的情况。</p>
<p><img src="http://kikitamap.com/images/blogImg/DEMRendering_FInal.jpg" alt=""></p>
<p>3D效果：</p>
<p><img src="http://kikitamap.com/images/blogImg/DEMRendering_3DScene.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS中的地理坐标系转换方法参数（二）]]></title>
      <url>/2014/01/19/GeographicTransformation2/</url>
      <content type="html"><![CDATA[<p> 上篇博客说的是 Project 工具中 Geographic Transformation 参数什么情况下是必填的。</p>
<p> 另外，Project 是矢量数据的坐标系变换工具，如果数据源是栅格数据，需要使用 Project Rater 工具。</p>
<p>&nbsp;这篇博客主要写一下，有关自定义地理变换方法。</p>
<p>ArcGIS 中提供地理变换方法主要有这几种：Geocentric_Translation、Molodensky、Molodensky_Abridged、Position_Vector、Coordinate_Frame、Molodensky_Badekas、NADCON、HARN、NTV2、Longitude_Rotation、Unit_Change 和 Geographic_2D_Offset。可使用“创建自定义地理变换（Create Custom Geographic Transformation）”工具来创建转换方法。地理坐标系包含了基于椭圆体的基准面，因此地理变换会更改基础椭圆体。在基准面间进行变换的方法很多，这些方法具有不同的精度和范围。</p>
<p>地理变换是针对地理坐标系的，也就是经纬度坐标进行转换，如果输入数据的坐标系中还包含了平面坐标系（投影），在使用 Project 工具的过程中会自动做相应的投影变换，转到地理坐标系，地理变换后，如果需要再转为相应的投影坐标系。</p>
<p><img src="http://kikitamap.com/images/blogImg/GeographicTransformation2_Method.png" alt=""></p>
<p><strong>PS：</strong></p>
<p>所有的自定义地理变换文件都将存储为扩展名为 .gtf 的文件，并存储在用户 Application Data 文件夹下的 <code>ESRI\&amp;lt;ArcGIS product&amp;gt;\ArcToolbox\CustomTransformations</code> 文件夹中。自定义变换文件不能进行编辑。它们为二进制文件，用来储存版本和字符串长度信息，如果在ArcGIS之外进行自行编辑，可能会被损坏。</p>
<p>下面我们来看看常用的转换方法吧，帮助中有介绍，我下面来个精简整理版的：</p>
<p><strong>1）Geocentric_Translation</strong></p>
<p>地心变换，也就是我们常说的<strong>三参数变换</strong>，是最简单的基准面变换方法。地心变换在 XYZ 或 3D 直角坐标系中对两个基准面间的差异情况进行建模。定义一个基准面使其中心为 0,0,0。相距一定距离定义另一个基准面（dx,dy,dz 或 ΔX,ΔY,ΔZ，单位为米）。</p>
<p>图示:  <img src="http://kikitamap.com/images/blogImg/GeographicTransformation2_Graphic.gif" alt=""></p>
<p>方程：<img src="http://kikitamap.com/images/blogImg/GeographicTransformation2_Function.gif" alt=""></p>
<p><strong>2）Coordinate Frame，Position Vector</strong></p>
<p>这两种方法是我们常说的七参数变换，或者布尔沙模型。通过对三参数变换再增加四个参数可实现更复杂和精确的基准面变换。七个参数是指三个线性平移量 (dx,dy,dz)、绕各轴的三个角度旋转值 (rx,ry,rz) 和一个比例尺因子。旋转值以十进制秒为单位给定，而比例尺因子采用百万分率 (ppm)。</p>
<p>图示：<img src="http://kikitamap.com/images/blogImg/GeographicTransformation2_Frame.gif" alt="">&nbsp; &nbsp;</p>
<p>方程：<img src="http://kikitamap.com/images/blogImg/GeographicTransformation2_FrameFunction.gif" alt=""></p>
<p>为什么七参数有上面两种方法？其实可以认为是一种模型，只是不同的国家对旋转量的正负号定义标准不同而已。</p>
<ul>
<li>坐标框架旋转变换（coordinate frame），美国和澳大利亚的定义，逆时针旋转为正；</li>
<li>位置矢量变换（position vector），欧洲的定义，逆时针旋转为负。</li>
</ul>
<p>另外，<strong>莫洛金斯基–巴德卡斯（Molodensky_Badekas）</strong> 方法是七参数方法的变型。它具有三个附加参数，用于定义旋转点的 XYZ 原点。</p>
<p><strong>3）Molodensky，Molodensky_Abridged</strong></p>
<p>莫洛金斯基方法直接在两种地理坐标系之间转换，实际上无需转换到 XYZ 系统。莫洛金斯基方法需要三个平移量 (dx,dy,dz) 以及两个旋转椭球体的长半轴 (Δa) 和扁率 (Δf) 的差。</p>
<p>这种方法，相对用的少，方程我就不粘了，详见帮助：<a href="http://resources.arcgis.com/en/help/main/10.2/index.html#/na/003r00000012000000/" target="_blank" rel="noopener">http://resources.arcgis.com/en/help/main/10.2/index.html#/na/003r00000012000000/</a></p>
<p>OK，今天就到这里了~</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS中的地理坐标系转换方法参数（一）]]></title>
      <url>/2014/01/17/GeographicTransformation1/</url>
      <content type="html"><![CDATA[<p>地理坐标系变换是数据处理过程中常遇到的问题，今天就说下这方面的问题。</p>
<p>如果遇到这种情景：两份数据有不同的坐标系，想叠加在一起显示，作图或显示精度要求不高。</p>
<p>这种情况使用 ArcMap 的动态投影即可，ArcMap 的内部动投影机制会解决地理坐标系变换的问题。数据在显示的过程中，会实时的被转换，但不改变数据本身。</p>
<p>如果我们需要进行地理坐标系转换，我们知道 ArcGIS Desktop 中提供了 Project 工具。</p>
<p>此工具界面上有个至关重要的参数：<strong>Geographic Transformation</strong>。我们发现它的后面赫然写着。依照使用其他工具的经验，这种打了 Optional 标志的参数，不就是可填可不填的意思吗？</p>
<p>但是，它真的让你随便的可填可不填吗？ Naive！ 图样图森破！ 这个参数的填写与否，完全是受前面两个参数决定的，主要三种情景吧。</p>
<p><br></p>
<h2 id="情景1："><a href="#情景1：" class="headerlink" title="情景1："></a>情景1：</h2><p>不涉及到地理坐标系变换的坐标变换，这个参数完全不需要，而不是 optional 哦。</p>
<p>例如：从 GCS_Xian_1980 进行投影变换，转换为 Xian_1980_3_Degree_GK_CM_120E 投影坐标系。</p>
<p>整过转换中，仅使用了高斯克吕格投影变换，没有涉及到地理坐标变换。</p>
<p><img src="http://kikitamap.com/images/blogImg/GeographicTransformation1_Project.jpg" alt=""></p>
<p><br></p>
<h2 id="情景2："><a href="#情景2：" class="headerlink" title="情景2："></a>情景2：</h2><p>涉及到地理坐标系变换的坐标变换，并且ArcGIS 已知二者之间的变换方法，这个参数是必须的，在已知列表中做选择或者自定义。（自定义见：情景3）</p>
<p>例如：从&nbsp;GCS_Beijing_1954，转换为&nbsp;GCS_WGS_1984坐标系。</p>
<p>转换过程中涉及到地理坐标系变换，也就是进行了椭球体变换。</p>
<p>ArcGIS 中提供了6种已知转换方法，可以根据适用范围选择之。其中如何选择，此文不做介绍，请查看我的另一篇<a href="http://kikitamap.com/2013/10/21/Beijing1954ToWGS1984/" target="_blank" rel="noopener">博客</a>：</p>
<p><img src="http://kikitamap.com/images/blogImg/GeographicTransformation1_Project2.jpg" alt=""></p>
<p><br></p>
<h2 id="情景3："><a href="#情景3：" class="headerlink" title="情景3："></a>情景3：</h2><p>涉及到地理坐标系变换的坐标变换，并且ArcGIS 未知二者之间的变换方法，也就是ArcGIS没有提供转换方法，但是这个参数是必须的，需要自定义，这个参数前会亮绿灯，告诉用户，必须要填写。另外，上面情景2中，ArcGIS给出的方法，如果都不是自己需要的，也需要自定义。</p>
<p>例如：从&nbsp;GCS_Beijing_1954，转换为&nbsp;GCS_Xian_1980坐标系。</p>
<p><img src="http://kikitamap.com/images/blogImg/GeographicTransformation1_Project3.jpg" alt=""></p>
<p>需要使用工具 Create Custom Geographic transformation，创建一种转换方法，辅助 Project 工具。</p>
<p>这个工具的帮助如下，就不赘述了。</p>
<p><a target="_blank" href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//001700000076000000">http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//001700000076000000</a><br></p>
<p>补充：</p>
<p>讲到这里全部的情形都涵盖了。有的同学会问，为什么会这样呢？ArcGIS为啥就不能都知道转换方法呢？为啥偏要我们自定义呢？好麻烦的耶%￥#@……</p>
<p>有些坐标系转换的参数是不公开的，属于涉密的内容，所以ArcGIS是没有权利知道变换方法的。例如与 Xian 80 有关的变换。原文：<em>Some geographic coordinate systems do not have any publicly known transformations because that information is considered to have strategic importance to a government or company.</em></p>
<p>好了，至此，大致就知道这个参数什么时候不需要，什么时候需要，如果没有如何得到，这几个问题。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CityEngine支持多少种栅格数据？]]></title>
      <url>/2014/01/06/RasterSupportinCityEngine/</url>
      <content type="html"><![CDATA[<p>&nbsp; &nbsp; 许多用户会问 CityEinge 到底支持多少种栅格数据作为底图数据？</p>
<p>&nbsp; &nbsp; CityEngine目前的帮助文档略显单薄，作为工具书查看是很好的，但是作为知识类资料就不如ArcGIS Desktop的帮助文档完整饱满。因此像“栅格数据支持列表”这种归纳性的文档当然现在还是没有……</p>
<p>&nbsp; &nbsp; 只能从软件界面自身去寻找了，就把这页贴出来，方便大家参考。从以下这个长长的下列表中可以了解CityEngine支持的类型：</p>
<p>（png，jpg，tif，jpeg，img，data，ico，xpm，dds，tga，psp，tiff，vbs，sid，mpeg，jsl，xbm，sit，bmp，mpg，dat，com，hqx，cur，dll，bin，emf，exe，gif，xyz，sgi）</p>
<p><img src="http://kikitamap.com/images/blogImg/RasterSupportinCityEngine.jpg" alt=""></p>
<p>&nbsp; &nbsp;CityEngine在显示栅格数据时，对数据有一定的要求，不满足要求时可能会出现不显示等情况。</p>
<p>&nbsp; &nbsp;CityEngine使用了OpenGL技术用于3D模型/场景的显示，当显示模型的时候，会将所有的texture数据输入到显存（不是内存哦！）显存的大小在机器中通常是不大的（256M~1.5G，或者更大一点吧），因此CE对输入的栅格数据是要求的。</p>
<p>&nbsp; &nbsp; 为了获取最佳的效果，如下几点要注意哦~</p>
<p>（1）显卡驱动一定要安装至最新版本！</p>
<p>（2）Texture图层尽量选择 8-bit 的，terrain 图层中的Heightmap也可以是32-bit的。</p>
<p>（3）栅格数据的行列数会影响显示，过多的行列数会导致显示失败，这个具体的数目与硬件也是相关的。通常如果发现不能正常显示时，可以考虑通过ArcGIS Desktop 中的重采样将数据的降低分辨率。</p>
<p>附上esri美国论坛上工程师发的一个帖子：</p>
<p><a href="http://forums.arcgis.com/threads/54072-textures-raster-files-concepts-in-CityEngine-ArcGIS" target="_blank" rel="noopener">http://forums.arcgis.com/threads/54072-textures-raster-files-concepts-in-CityEngine-ArcGIS</a></p>
<p>以及，添加 Terrain 图层的帮助文档：</p>
<p><a href="http://cehelp.esri.com/help/index.jsp" target="_blank" rel="noopener">http://cehelp.esri.com/help/index.jsp</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[shapefile与GDB中不能允许存在的几何错误]]></title>
      <url>/2013/12/05/GeometryErrorinshapefileGDB/</url>
      <content type="html"><![CDATA[<p>每种软件都有自己的数据规范，ArcGIS也不例外，当数据不满足ArcGIS的规范时，就会遇到各种无响应和崩溃。</p>
<p>有关数据几何错误总是问题相对较多的部分。其中，shapefile作为一种开放的格式，除了ArcGIS程序可以读写，也可以按照数据规范在非ArcGIS环境中生产。后者生产的数据通常包含这样那样的问题，这些问题都是几何错误的范畴。</p>
<p>帮助原文说的精辟：</p>
<blockquote>
<p>The shapefile is an open format to which many software packages write. Unfortunately, some of these software packages—sometimes due to bugs, sometimes due to lack of knowledge—do not follow the documented specification of the shapefile format.</p>
</blockquote>
<p>简单罗列下ArcGIS中不能允许的几何错误类型：</p>
<ul>
<li><strong>短线段/Short segment</strong><br>Some segments are shorter than allowed by the system units of the spatial reference associated with the geometry.</li>
<li><p><strong>空几何/Null geometry</strong><br>The feature has no geometry or nothing in the SHAPE field.</p>
</li>
<li><p><strong>不正确的环顺序/Incorrect ring ordering</strong><br>The polygon is topologically simple, but its rings may not be oriented correctly (outer rings—clockwise, inner rings—counterclockwise).</p>
</li>
<li><p><strong>不正确的线段方向/Incorrect segment orientation</strong><br>Individual segments are not consistently oriented. The “to” point of seg i should be incident on the “from” point of seg i+1.</p>
</li>
<li><p><strong>自相交/Self intersections</strong><br>A polygon must not intersect itself.</p>
</li>
<li><p><strong>非封闭环/Unclosed rings</strong><br>The last segment in a ring must have its “to” point incident on the “from” point of the first segment.</p>
</li>
<li><p><strong>空部分/Empty parts</strong><br>The geometry has multiple parts and one of them is empty (has no geometry).</p>
</li>
<li><p><strong>重复折点/Duplicate vertex</strong><br>The geometry has two or more vertices with identical coordinates.</p>
</li>
<li><p><strong>属性不匹配/Mismatched attributes</strong><br>The Z or M coordinate of a line segment’s endpoint does not match the Z or M coordinate of the coincident endpoint on the next segment.</p>
</li>
<li><p><strong>不连续部分/Discontinuous parts</strong><br>One of the geometry’s part is made up of disconnected or discontinuous parts.</p>
</li>
<li><p><strong>空Z值/Empty Z values</strong><br>The geometry has one or more vertex with empty Z value (NaN, for example).</p>
</li>
</ul>
<p>以上的错误，可以用使用工具 Check Geometry 进行检查，工具会生成有关几何错误的报表。使用 Repaired Geometry 工具进行修复。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sans Serif 和 Serif 字体]]></title>
      <url>/2013/12/02/SansSerifVSSerif/</url>
      <content type="html"><![CDATA[<p>在西方国家罗马字母阵营中，字体分为两大种类：Sans Serif和Serif，打字机体虽然也属于Sans Serif，但由于是等宽字体，所以另外独立出 Monospace 这一种类，例如在Web中，表示代码时常常要使用等宽字体。</p>
<p>Serif的意思是，在字的笔画开始及結束的地方有额外的装饰，而且笔画的粗细会因直橫的不同而有不同。相反的，Sans Serif则沒有这些额外的装饰，笔画粗细大致差不多。如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SansSerifVSSerif.gif" alt=""></p>
<p>可以看出，我们平时所用的Georgia、Times New Roman等就属于Serif字体，而Arial、Tahoma、Verdana等则属于Sans Serif字体。对中文而言，同样存在这两大种类，很明显，宋体、细明体（繁体中常用）等就属于Serif，而黑体、幼圆等则属于Sans Serif。</p>
<p><br></p>
<p><strong>Serif 和 Sans Serif 的一般比较：</strong></p>
<ul>
<li><p>Serif的字体容易辨认，因此易读性较高。反之Sans Serif 则较醒目，但在行文阅读的情況下，Sans Serif 容易造成字母辨认的困扰，常会有来回重读及上下行错乱的情形。</p>
</li>
<li><p>Serif 强调了字母笔画的开始及结束，因此较易前后连续性的辨识。</p>
</li>
<li><p>Serif 强调一个word，而非单一的字母，反之Sans Serif则强调个别字母。</p>
</li>
<li><p>在小字体的场合，通常 Sans Serif 比 Serif 更清晰。</p>
</li>
</ul>
<p><br></p>
<p><strong>适用用途</strong>：</p>
<ul>
<li><p>通常文章的內文、正文使用的是易读性较佳的 Serif 字体，这可增加易读性，而且长时间阅读下因为会以word为单位来阅读，较不容易疲倦。而标题、表格內用字则采用较醒目的Sans Serif字体，它需要显著、醒目，但不必长时间盯著这些字来阅读。</p>
</li>
<li><p>像宣传品、海报类，为求醒目，它的短篇的段落也会采用Sans Serif字体。但在书籍、报刊杂志，正文有相当篇幅的情形下，则应采用Serif字体来减轻读者阅读上的负担。在Web设计及浏览器设置中也应遵循此原则为是。</p>
</li>
</ul>
<p>相关链接：</p>
<p><a href="http://www.w3.org/TR/CSS21/fonts.html#propdef-font-family" target="_blank" rel="noopener">http://www.w3.org/TR/CSS21/fonts.html#propdef-font-family</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Beijing_1954_To_WGS_1984]]></title>
      <url>/2013/10/21/Beijing1954ToWGS1984/</url>
      <content type="html"><![CDATA[<p><em>Table 1: Geographic (datum) transformations: well-known IDs, accuracies and areas of use</em><br><img src="http://kikitamap.com/images/blogImg/Beijing1954ToWGS1984_1.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/Beijing1954ToWGS1984_2.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/Beijing1954ToWGS1984_3.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CityEngine Web Viewer IIS 部署]]></title>
      <url>/2013/09/11/CityEngineWebViewerIIS/</url>
      <content type="html"><![CDATA[<p>中文原文链接：</p>
<p><a href="http://blog.csdn.net/arcgis_all/article/details/8363728" target="_blank" rel="noopener">http://blog.csdn.net/arcgis_all/article/details/8363728</a></p>
<p>esri原文链接：</p>
<p><a href="http://www.arcgis.com/home/item.html?id=38fede3935a440e49cf316dcae6aae47" target="_blank" rel="noopener">http://www.arcgis.com/home/item.html?id=38fede3935a440e49cf316dcae6aae47</a></p>
<p><br></p>
<p>重点提出来，方便配置：</p>
<p>（1）先找到 webviewer 文件夹，在CE工作空间下ce.lib 文件夹下；</p>
<p>（2）将 webviewer 文件夹丢到 wwwroot 文件夹下；</p>
<p>（3）计算机管理中，webviewer目录中，双击打开右边的窗口中选中MIME类型，添加类型，如下图：</p>
<p><br></p>
<ul>
<li><p>参数项：</p>
<ul>
<li>文件扩展名： .3ws </li>
<li>MIME类型：application/octet-stream</li>
</ul>
</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/CityEngineWebViewerIIS.png" alt="">    </p>
<p>访问地址：<a href="http://localhost/webviewer/ceviewer_offline.html" target="_blank" rel="noopener">http://localhost/webviewer/ceviewer_offline.html</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS License Manager 静默授权命令摘录]]></title>
      <url>/2013/08/06/ArcGISLMSilentAuthorization/</url>
      <content type="html"><![CDATA[<p>在命令行中，将目录更改为许可管理器安装位置。Windows 上的默认位置是 <code>C:\Program Files (x86)\ArcGIS\License10.1\bin</code>。</p>
<p>在命令的末尾添加 <code>-verbose</code>，可以在命令窗口中显示进度和错误消息。</p>
<p><br></p>
<p><strong>以静默方式授权：</strong></p>
<p><code>softwareauthorizationls.exe -s -lif -ver10.1 &quot;c:\temp\&lt;*.prvs&gt;&quot;</code></p>
<p>当离线授权时，此命令还可以与 <strong>*.resps</strong> 文件结合使用。当授权单机版 Desktop 或 Engine 许可时，可使用 <em>.prvc 和 </em>.respc。</p>
<p>为离线授权创建一个 <strong>.txt</strong> 授权文件：</p>
<p><code>softwareauthorizationls.exe -s -lif -ver 10.1 &quot;C:\Temp\&lt;.prvs&gt;&quot; -out &quot;C:\Temp\authorize.txt&quot;</code></p>
<p><br></p>
<p><strong>以静默方式取消授权：</strong></p>
<p>要从机器中取消所有许可的授权，请运行 <code>softwareauthorizationls.exe -s -return all</code>。</p>
<p>要从机器中取消特定许可的授权，您需要输入要取消授权的具体授权码。运行 <code>softwareauthorizationls.exe -s -return EFLxxxxxxxxx,EFLxxxxxxxxx</code>。</p>
<p><br></p>
<p><strong>以静默方式升级许可：</strong></p>
<p>要在机器中升级所有许可，请运行 <code>softwareauthorization.exe -s -upgrade all</code>。</p>
<p>要在机器中升级特定许可，您需要输入具体的授权码。运行 <code>softwareauthorization.exe -s -upgrade EFLxxxxxxxxx,EFLxxxxxxxxx</code>。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> License </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[将度-分-秒值转换为十进制度]]></title>
      <url>/2013/07/22/ConvertDMS/</url>
      <content type="html"><![CDATA[<p>在ArcMap中，在表中新建一个字段，用于存储新的十进制度值，使用字段计算器和 VB 脚本实现。</p>
<p>如下示例，其中，假设 Latitude 是表中存储 DMS 纬度值字段的名称，经纬度数据中的度分秒三个数据是以空格分隔。</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Dim Degrees</span><br><span class="line">Dim Minutes</span><br><span class="line">Dim Seconds</span><br><span class="line">Dim DMS</span><br><span class="line">Dim DD</span><br><span class="line"></span><br><span class="line">DMS = Split([Latitude])</span><br><span class="line">Degrees = CDbl(<span class="name">DMS</span>(<span class="number">0</span>))</span><br><span class="line">Minutes = CDbl(<span class="name">DMS</span>(<span class="number">1</span>))</span><br><span class="line">Seconds = CDbl(<span class="name">DMS</span>(<span class="number">2</span>))</span><br><span class="line">If Degrees &lt; <span class="number">0</span> Then</span><br><span class="line">   DD = -(<span class="name">Seconds/3600</span>) - (<span class="name">Minutes/60</span>) + Degrees</span><br><span class="line">Else</span><br><span class="line">   DD = (<span class="name">Seconds/3600</span>) + (<span class="name">Minutes/60</span>) + Degrees</span><br><span class="line">End If</span><br></pre></td></tr></table></figure>
<p>PS：使用到的VBScript 函数：</p>
<p>（1）<strong>Split</strong>：</p>
<pre><code>Split(expression[,delimiter[,count[,compare]]])
</code></pre><p>（2）<strong>CDbl</strong>：</p>
<p>CDbl 函数可把表达式转换为双精度（Double）类型。</p>
<p>结果示例：</p>
<p><img src="http://kikitamap.com/images/blogImg/ConvertDMS.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[聚焦等值面的创建]]></title>
      <url>/2013/07/12/BuildingCountor/</url>
      <content type="html"><![CDATA[<p>&nbsp; &nbsp; 日常我们会碰到有很多根据已知采样点生成等值面、等值线的需求，。由散点采样值估算相应区域，我们一般会想到插值，这样就获得了这个区域的连续表面。</p>
<p>&nbsp; &nbsp; 在ArcGIS中，插值的方法较多，主要有两个扩展模块的功能可以选用。一般情况下可以选择 Spatial Analyst 工具箱中，IDW，Kriging等方法进行插值。如果有更加复杂的参数设置和更加专业深入的插值分析，可以使用 Geostatistical Analyst，这里暂不赘述。</p>
<p>&nbsp; &nbsp;&nbsp;<img src="http://kikitamap.com/images/blogImg/BuildingCountor_Toolset.jpg" alt="">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img src="http://kikitamap.com/images/blogImg/BuildingCountor_Toolset2.jpg" alt=""></p>
<p>&nbsp; &nbsp; 这里以IDW插值为例，简述等值面、等值线的生成。</p>
<p><br></p>
<h1 id="一、采样点插值"><a href="#一、采样点插值" class="headerlink" title="一、采样点插值"></a>一、采样点插值</h1><p>例如获取了如下一组点的臭氧浓度的采样值：</p>
<p><img src="http://kikitamap.com/images/blogImg/BuildingCountor_Points.jpg" alt=""></p>
<p>使用 IDW 工具，设置输入数据，插值使用的字段，搜索半径等参数，获得栅格表面。</p>
<p><img src="http://kikitamap.com/images/blogImg/BuildingCountor_IDW.jpg" alt=""></p>
<p><br></p>
<h1 id="二、等值线的获取"><a href="#二、等值线的获取" class="headerlink" title="二、等值线的获取"></a>二、等值线的获取</h1><p>Spatial Analyst 中提供了从栅格表面提取等值线的工具，Contour，设置等值线间隔，以及选择设置起算线。</p>
<p>&nbsp;&nbsp;<img src="http://kikitamap.com/images/blogImg/BuildingCountor_Contour.jpg" alt=""></p>
<p>得到结果：</p>
<p>&nbsp; &nbsp; &nbsp;&nbsp;<img src="http://kikitamap.com/images/blogImg/BuildingCountor_result.jpg" alt=""></p>
<p><br></p>
<h1 id="三、等值面提取"><a href="#三、等值面提取" class="headerlink" title="三、等值面提取"></a>三、等值面提取</h1><p>在做等值面之前，我们需要思考下，等值面是指什么？等值面是否是两条等值线之间的闭合区域？等值面的划分依据是什么？</p>
<p>先说一种比较常用的场景，得到等值线后，为了美化制图，等值线之间的间隔也需要用渐变色予以填充，通常想到的方案是使用工具 Feature to Polygon。这样就得到了与等值线无缝贴合的等值面。如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/BuildingCountor_polygon.png" alt=""></p>
<p>从而获得等值面，这个类似于等间距分类或者等值面的方法。</p>
<p><br></p>
<p><br></p>
<p><strong>如果抛开等值线而言，比较准确的获取等值面的方法是什么呢？</strong></p>
<p><br></p>
<p>答案是对栅格表面进行重分类，用一定的数学算法将数据进行数值的重新划分与赋予。</p>
<p>下面来总结一下方案：</p>
<p><strong>（1）使用工具 Reclassify 进行栅格数据重分类：</strong></p>
<p>如下是一个由高程采样点获得的DEM，然后进行重分类，分类方法是等间距法：</p>
<p>PS：分类是有很多方法可以选择的，具体在分类面板中可以设置：</p>
<p><img src="http://kikitamap.com/images/blogImg/BuildingCountor_Relassify.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/BuildingCountor_ReclassifyResult.png" alt=""></p>
<p><strong>（2）然后将栅格数据转为矢量面:</strong></p>
<p>使用转换工具， Raster to Polygon，得到矢量等值面：</p>
<p><img src="http://kikitamap.com/images/blogImg/BuildingCountor_toFeature.jpg" alt=""></p>
<p><strong>（3）等值面，等值线的后期平滑处理</strong></p>
<p>由栅格数据得到的矢量数据，通常边界会出现很多方格子或者锯齿，后面要做的工作就是对面进行平滑和美化，当然这步是选做工作了。</p>
<p>前两步是数据的真实提取，这一步就是对地图画个妆，把最佳的效果展示出来。</p>
<p>为了防止直接平滑面出现边界不重合的问题，建议对面转线（Feature to line），平滑线后再转回面。做了个模型，把这个思路完整的展现出来，如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/BuildingCountor_Model.png" alt=""></p>
<p>这样就会得到相对漂亮平滑的等值线和等值面。</p>
<p>细节对比图：</p>
<p><img src="http://kikitamap.com/images/blogImg/BuildingCountor_smooth.png" alt=""></p>
<p><br></p>
<p>以上就是制作等值面的方法。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在ArcGIS Desktop 中导入 Arcpy]]></title>
      <url>/2013/07/02/ImportArcpy/</url>
      <content type="html"><![CDATA[<p>在导入 ArcPy 之后，可以运行随 ArcGIS 安装的标准工具箱中的所有地理处理工具。</p>
<p><code>import arcpy</code></p>
<p><br></p>
<h1 id="1-导入整个模块"><a href="#1-导入整个模块" class="headerlink" title="1.导入整个模块"></a>1.导入整个模块</h1><p>模块通常是一个包含函数和类的 Python 文件。</p>
<p>ArcPy 包括数据访问模块 (arcpy.da)、制图模块 (arcpy.mapping)、ArcGIS Spatial Analyst 扩展模块模块 (arcpy.sa) 和 ArcGIS Network Analyst 扩展模块模块 (arcpy.na)。</p>
<figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> arcpy.mapping</span><br></pre></td></tr></table></figure>
<p>Python 的核心 os 和 sys 模块，也可使用此命令。例如：</p>
<figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br></pre></td></tr></table></figure>
<p><br></p>
<h1 id="2-导入模块的一部分"><a href="#2-导入模块的一部分" class="headerlink" title="2.导入模块的一部分"></a>2.导入模块的一部分</h1><p>如果只导入某一模块的一部分，可以使用 from-import 语句。</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> arcpy import <span class="keyword">env</span></span><br><span class="line"><span class="keyword">env</span>.workspace = <span class="string">"c:/data"</span></span><br></pre></td></tr></table></figure>
<p>使用from-import-as 的形式，为其制定名称。</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> arcpy import <span class="keyword">env</span> as <span class="keyword">ENV</span></span><br><span class="line"><span class="keyword">ENV</span>.workspace = <span class="string">"c:/data"</span></span><br></pre></td></tr></table></figure>
<p>再来个例子：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> arcpy <span class="keyword">import</span> mapping <span class="keyword">as</span> MAP</span><br><span class="line">mxd = MAP.MapDocument(<span class="string">"C:/maps/basemap.mxd"</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<h1 id="3-导入模块全部内容"><a href="#3-导入模块全部内容" class="headerlink" title="3. 导入模块全部内容"></a>3. 导入模块全部内容</h1><p>模块的内容将被直接导入到命名空间中，随后无需添加前缀。在某些情况下，from-import-* 可以简化代码。</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Import arcpy and the sa module as *</span></span><br><span class="line"></span><br><span class="line">import arcpy</span><br><span class="line">from arcpy.sa import *</span><br><span class="line">arcpy.CheckOutExtension(<span class="string">"spatial"</span>)</span><br><span class="line"><span class="comment"># Get input parameters</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">inRaster1 = arcpy.GetParameterAsText(0)</span><br><span class="line">inRaster2 = arcpy.GetParameterAsText(1)</span><br><span class="line">inRaster3 = arcpy.GetParameterAsText(2)</span><br><span class="line">outRaster = (Raster(inRaster1) + (Raster(inRaster2) - Raster(inRaster3)))</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Data Driven Page]]></title>
      <url>/2013/06/26/ArcGISDataDrivenPage/</url>
      <content type="html"><![CDATA[<p>通过 “Data Driven Page” 可以基于单个地图文档，快速创建一系列布局页面。按照图层中的各个索引要素，将地图分割为多个部分，分别生成相应的地图。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_workflow.png" alt=""></p>
<p>可见，索引要素是决定地图出图的重要部分，常见的索引方式，例如：网格索引，带状索引等等。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_Index.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_indexLine.png" alt=""></p>
<p>Data Driven Page 工具条上的设置，主要也是来配置索引图层，那索引图层如何制作？</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_Toolbar.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_Setup.jpg" alt="">&nbsp;</p>
<p>ArcGIS 提供了一系列制作和准备 Data Driven Page 的 GP工具。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_Toolset.jpg" alt=""></p>
<p>此工具可以创建可用作索引的矩形格网面，如下图所示，其中格网的标注表示了PageName：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_GridIndex.jpg" alt=""></p>
<p>索引网格面的属性表：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_Table.png" alt=""></p>
<p>格网索引在于给有数据的位置创建期望网格大小的矩形要素，不仅适用于面要素，点，线也同样的，如下：</p>
<p>&nbsp;&nbsp;<img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_PointIndex.png" alt=""></p>
<p>&nbsp;&nbsp;<img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_SelectedLineIndex.jpg" alt=""></p>
<h1 id="2-Strip-Map-Index-Feature"><a href="#2-Strip-Map-Index-Feature" class="headerlink" title="2. Strip Map Index Feature"></a>2. Strip Map Index Feature</h1><p>该工具可根据单个线状要素或一组线状要素，创建一系列矩形面索引要素。用于根据线状要素定义一幅带状地图或一组地图中的页面。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_Strip.jpg" alt=""></p>
<p>对应生成的索引数据中，属性表中很好的记录了各幅地图的对应关系，Angle 记录了数据框需要旋转的角度，如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_StripTable.jpg" alt=""></p>
<h1 id="3-Calculate-Adjacent-Fields"><a href="#3-Calculate-Adjacent-Fields" class="headerlink" title="3. Calculate Adjacent Fields"></a>3. Calculate Adjacent Fields</h1><p>此工具最常用于填充地图册中相邻页面的标注字段。此工具将向输入要素类追加八个新字段（每个字段表示八个罗盘点中的一个：北、东北、东、东南、南、西南、西和西北）。</p>
<p>例如 Field Name 选择为“PageName”，创建的新字段名：</p>
<p>“PageName_N”、“PageName_NE”、“PageName_E”、“PageName_SE”、“PageName_S”、“PageName_SW”、“PageName_W”和“PageName_NW”。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_Adjacent.png" alt=""></p>
<p><br></p>
<h1 id="4-Calculate-Central-Meridian-and-Parallel"><a href="#4-Calculate-Central-Meridian-and-Parallel" class="headerlink" title="4. Calculate Central Meridian and Parallel"></a>4. Calculate Central Meridian and Parallel</h1><p>此工具基于要素范围的中心点计算中央经线和标准纬线。这个工具又几个注意事项：</p>
<p>（1）直接对没有投影的要素类运行此工具将会产生错误。要素类必须进行<strong>投影</strong>。</p>
<p>（2）<strong>坐标系字段</strong>必须是文本字段，并且字段长度应大于或等于 600 个字符。</p>
<p>在新字段中添加了文本坐标信息，格式类似如下：</p>
<figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">PROJCS</span>[<span class="string">"World_Mercator"</span>,<span class="symbol">GEOGCS</span>[<span class="string">"GCS_WGS_1984"</span>,<span class="symbol">DATUM</span>[<span class="string">"D_WGS_1984"</span>,<span class="symbol">SPHEROID</span>[<span class="string">"WGS_1984"</span>,<span class="number">6378137.0</span>,<span class="number">298.257223563</span>]],<span class="symbol">PRIMEM</span>[<span class="string">"Greenwich"</span>,<span class="number">0.0</span>],<span class="symbol">UNIT</span>[<span class="string">"Degree"</span>,<span class="number">0.0174532925199433</span>]],<span class="symbol">PROJECTION</span>[<span class="string">"Mercator"</span>],<span class="symbol">PARAMETER</span>[<span class="string">"False_Easting"</span>,<span class="number">0.0</span>],<span class="symbol">PARAMETER</span>[<span class="string">"False_Northing"</span>,<span class="number">0.0</span>],<span class="symbol">PARAMETER</span>[<span class="string">"Central_Meridian"</span>,<span class="number">-118.525225741025</span>],<span class="symbol">PARAMETER</span>[<span class="string">"Standard_Parallel_1"</span>,<span class="number">46.76032322895251</span>],<span class="symbol">UNIT</span>[<span class="string">"Meter"</span>,<span class="number">1.0</span>],<span class="symbol">AUTHORITY</span>[<span class="string">"ESRI"</span>,<span class="number">54004</span>]]</span><br></pre></td></tr></table></figure>
<p><br></p>
<h1 id="5-Calculate-nbsp-Grid-Convergence-Angle"><a href="#5-Calculate-nbsp-Grid-Convergence-Angle" class="headerlink" title="5. Calculate&nbsp;Grid Convergence Angle"></a>5. Calculate&nbsp;Grid Convergence Angle</h1><p>此工具根据要素类中各要素的中心点计算偏离正北方向的旋转角度（网格收敛角），并将所得值填充到指定字段中。这样就方便了，将地图旋转到正北方向。</p>
<p>此工具替代了&nbsp;Calculate Geodesic Angle（计算大地线角度）。输入数据需要指定有效的投影坐标系。</p>
<p>计算角度的算法提供了三种：</p>
<ul>
<li>GEOGRAPHIC — 以正北方向作为起点，顺时针旋转的角度。这是默认设置。</li>
<li>ARITHMETIC — 以正东方向作为起点，逆时针旋转的角度。</li>
<li>GRAPHIC — 以正北方向作为起点，逆时针旋转的角度。</li>
</ul>
<p>了解网格收敛角，放图一张：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISDataDrivenPage_Convergence.jpg" alt=""></p>
<p><br></p>
<h1 id="6-Calculate-UTM-Zone"><a href="#6-Calculate-UTM-Zone" class="headerlink" title="6. Calculate UTM Zone"></a>6. Calculate UTM Zone</h1><p>根据中心点计算每个要素的 UTM 带，并在指定字段中存储该空间参考字符串。</p>
<p>（1）需要一个足够长（&gt; 600 个字符）的新的文本字段。</p>
<p>（2）为了得到最佳结果，输入要素的基准面应与数据框使用的基准面相同。</p>
<p>（3）该工具不执行任何地理变换。</p>
<p>在新字段中的复制内容，类似如下：</p>
<figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">PROJCS</span>[<span class="string">"GCS Beijing 1954 UTM Zone 51R (Calculated)"</span>,<span class="symbol">GEOGCS</span>[<span class="string">"GCS_Beijing_1954"</span>,<span class="symbol">DATUM</span>[<span class="string">"D_Beijing_1954"</span>,<span class="symbol">SPHEROID</span>[<span class="string">"Krasovsky_1940"</span>,<span class="number">6378245.0</span>,<span class="number">298.3</span>]],<span class="symbol">PRIMEM</span>[<span class="string">"Greenwich"</span>,<span class="number">0.0</span>],<span class="symbol">UNIT</span>[<span class="string">"Degree"</span>,<span class="number">0.0174532925199433</span>]],<span class="symbol">PROJECTION</span>[<span class="string">"Transverse_Mercator"</span>],<span class="symbol">PARAMETER</span>[<span class="string">"False_Easting"</span>,<span class="number">500000.0</span>],<span class="symbol">PARAMETER</span>[<span class="string">"False_Northing"</span>,<span class="number">0.0</span>],<span class="symbol">PARAMETER</span>[<span class="string">"Central_Meridian"</span>,<span class="number">123.0</span>],<span class="symbol">PARAMETER</span>[<span class="string">"Scale_Factor"</span>,<span class="number">0.9996</span>],<span class="symbol">PARAMETER</span>[<span class="string">"Latitude_Of_Origin"</span>,<span class="number">0.0</span>],<span class="symbol">UNIT</span>[<span class="string">"Meter"</span>,<span class="number">1.0</span>]]</span><br></pre></td></tr></table></figure>
<p>关于数据驱动制图就说这么多了，主要是整理了帮助中的关键点，配以了实例截图做说明，帮助理解。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[sketchup 与 ArcGIS 10 的交互]]></title>
      <url>/2013/06/06/sketchupVSArcGIS10/</url>
      <content type="html"><![CDATA[<p>许多用户在 ArcGIS 9.2 时代习惯于使用 Sketchup 插件，但是，9.2版本已经结束了他的使命，进入了退休列表，已往的交互方法不再推荐。</p>
<p>在 ArcGIS 10 之后不再使用这个插件，而且给了其他的思路。</p>
<p>如下是官方说明中的原文：</p>
<hr>
<p><strong>What is the recommended workflow between SketchUp and ArcGIS?</strong></p>
<p>The ArcGIS SketchUp plug-in is no longer supported at ArcGIS 10. The recommended workflow is now as follows:</p>
<ol>
<li>Digitize in your polygon.</li>
<li>Extrude it by an attribute in 3D.</li>
<li>Convert it to a multipatch using Layer 3D to Feature Class.</li>
<li>Export it to COLLADA using MPatch to COLLADA.</li>
<li>Import/Edit in SketchUp (e.g., textures, pitched roof, etc.).</li>
<li>Then use the edit environment to replace the mpatch feature with the new SKP model.</li>
</ol>
<p>链接：<a href="http://www.esri.com/software/arcgis/extensions/3danalyst/technical-information/common-questions" target="_blank" rel="noopener">http://www.esri.com/software/arcgis/extensions/3danalyst/technical-information/common-questions</a></p>
<hr>
<p><br></p>
<p>翻译整理下，也就是说，先在ArcGIS Desktop（ArcScene 或 ArcGlobe） 环境中，将2D数据经过拉伸。</p>
<ul>
<li>拉伸在图层属性中进行设置，可以根据固定值拉伸，也可以根据某一属性字段进行拉伸。</li>
<li>主要在于拉伸表达式的写法。</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/sketchupVSArcGIS10_2DData.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/sketchupVSArcGIS10_Extrude.jpg" alt=""></p>
<p>使用工具 Layer 3D to Feature Class 转出，转到 GBD 中，以 Multipatch 的形式存储。</p>
<p><img src="http://kikitamap.com/images/blogImg/sketchupVSArcGIS10_Tool.jpg" alt=""></p>
<p>结果从外观看起来是没有区别的，但是数据由内存中的图层，转为了数据库中的数据。</p>
<p>为了与Sketchup交互，将其转为 COLLADA 格式，一种开放式的3D标准数据。<a href="http://baike.baidu.com.cn/view/1580133.htm" target="_blank" rel="noopener">点这里了解COLLADA</a>，<a href="https://collada.org/" target="_blank" rel="noopener">点这里是官网</a>。</p>
<p><img src="http://kikitamap.com/images/blogImg/sketchupVSArcGIS10_Collada.jpg" alt=""></p>
<p>然后将这些数据，在Sketchup中导入，进行后面的编辑。Sketchup中的操作和建模方法请参阅它的帮助文档。</p>
<p>将来做好的模型，ArcGIS 仍然可以再用，使用 导入工具即可。</p>
<p><img src="http://kikitamap.com/images/blogImg/sketchupVSArcGIS10_Import3D.jpg" alt=""></p>
<p>以上就是一个大致的流程。</p>
<p>如果还是习惯于老产品的用户，也仍然可以参阅已往老版本的资料，但是提醒 9.2 版本已经不支持在 Windows 7上安装了，意味着Windows也要降级。</p>
<p>并且使用9.2及之前的版本，在 Esri 是得不到技术支持的。强烈建议迁移到新版本。</p>
<ul>
<li><a href="http:/kikitamap.com/attaches/SketchUpGIS_Workflow.pdf" target="_blank" rel="noopener">ArcGIS for SketchUp 6 (beta) 安装指南</a></li>
<li><a href="http:/kikitamap.com/attaches/SketchUpPro6_GISPluginInstall.pdf" target="_blank" rel="noopener">工作流程</a></li>
</ul>
<ul>
<li><a href="http://sketchup.google.de/intl/en/download/plugins.html" target="_blank" rel="noopener">官方说明</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[查看端口号占用情况]]></title>
      <url>/2013/06/03/ViewPortNo/</url>
      <content type="html"><![CDATA[<h1 id="1-查看端口占用情况"><a href="#1-查看端口占用情况" class="headerlink" title="1.查看端口占用情况"></a><strong>1.查看端口占用情况</strong></h1><p>使用命令 <strong>netstat -ano</strong> ，检查所有在使用的端口。</p>
<p><img src="http://kikitamap.com/images/blogImg/ViewPortNo_Netstat.png" alt=""></p>
<p>如果查询指定端口，使用：<strong>netstat -aon|findstr &quot;Port No.&quot;</strong>，如下：</p>
<p>例如，查看49506端口号对应的进程，进程号976：</p>
<p><img src="http://kikitamap.com/images/blogImg/ViewPortNo_Find.jpg" alt=""></p>
<h1 id="2-查看PID-对应的程序"><a href="#2-查看PID-对应的程序" class="headerlink" title="2. 查看PID 对应的程序"></a><strong>2. 查看PID 对应的程序</strong></h1><p>查看具体哪个程序在占用某个端口，使用命令：</p>
<p><code>netstat -aon|findstr &quot;Port No.&quot;</code></p>
<p>接着上面的例子，976对应的程序。</p>
<p><img src="http://kikitamap.com/images/blogImg/ViewPortNo_Process.jpg" alt=""></p>
<p>好了，找到他了，可以换端口号，可以杀掉当前进程，随你……</p>
<p><br></p>
<p><strong>PS：</strong></p>
<p>在输命令时，可能会遇到报错：“nestat -ano不是内部或外部命令……blabla……”</p>
<p>需要查看下&nbsp;C:\Windows\System32 下是否有 <strong>netstat.exe</strong>。</p>
<p>如果有，再检查下环境变量中<strong>Path</strong>项中有没有这项：<strong><code>C:\Windows\System32</code></strong> ,没有的话就添加上。</p>
<p><img src="http://kikitamap.com/images/blogImg/ViewPortNo_Path.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> License </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Desktop 各版本产品补丁荟萃]]></title>
      <url>/2013/05/29/AllPackages/</url>
      <content type="html"><![CDATA[<p>ArcGIS 的补丁都是可以覆盖安装的，并且可以直接打最新补丁，最新补丁中修复了同版本前面所有补丁修复的问题。</p>
<p><br></p>
<h1 id="ArcGIS-10-1"><a href="#ArcGIS-10-1" class="headerlink" title="ArcGIS 10.1"></a>ArcGIS 10.1</h1><p>最新补丁： SP1</p>
<p><strong>中文</strong><br><a href="http://downloads.esri.com/support/downloads/other_/Install101_SP1_Chinese_OSC.htm" target="_blank" rel="noopener">http://downloads.esri.com/support/downloads/other_/Install101_SP1_Chinese_OSC.htm</a></p>
<p><strong>英文</strong><br><a href="http://support.esri.com/en/downloads/patches-servicepacks/view/productid/189/metaid/1913" target="_blank" rel="noopener">http://support.esri.com/en/downloads/patches-servicepacks/view/productid/189/metaid/1913</a></p>
<p><br></p>
<h1 id="ArcGIS-10-0"><a href="#ArcGIS-10-0" class="headerlink" title="ArcGIS 10.0"></a>ArcGIS 10.0</h1><p>最新补丁： SP5</p>
<p><strong>英文</strong></p>
<p><a href="http://support.esri.com/zh-cn/downloads/patches-servicepacks/view/productid/160/metaid/1876" target="_blank" rel="noopener">http://support.esri.com/zh-cn/downloads/patches-servicepacks/view/productid/160/metaid/1876</a></p>
<p><br></p>
<h1 id="ArcGIS-9-3-1"><a href="#ArcGIS-9-3-1" class="headerlink" title="ArcGIS 9.3.1"></a>ArcGIS 9.3.1</h1><p>最新补丁： SP2</p>
<p><a href="http://support.esri.com/en/downloads/patches-servicepacks/view/productid/43/metaid/1620" target="_blank" rel="noopener">http://support.esri.com/en/downloads/patches-servicepacks/view/productid/43/metaid/1620</a></p>
<p><br></p>
<h1 id="ArcGIS-9-3"><a href="#ArcGIS-9-3" class="headerlink" title="ArcGIS 9.3"></a>ArcGIS 9.3</h1><p>最新补丁： SP1</p>
<p><a href="http://resources.arcgis.com/zh-cn/content/patches-and-service-packs?fa=viewPatch&amp;PID=43&amp;MetaID=1457" target="_blank" rel="noopener">http://resources.arcgis.com/zh-cn/content/patches-and-service-packs?fa=viewPatch&amp;PID=43&amp;MetaID=1457</a></p>
<p>ArcGIS 9.2<br>最新补丁：SP6<br><a href="http://resources.arcgis.com/zh-cn/content/patches-and-service-packs?fa=viewPatch&amp;PID=43&amp;MetaID=1409" target="_blank" rel="noopener">http://resources.arcgis.com/zh-cn/content/patches-and-service-packs?fa=viewPatch&amp;PID=43&amp;MetaID=1409</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何从 ArcView 3.3 版本的工程迁移到 ArcGIS Desktop 10 ？]]></title>
      <url>/2013/05/24/TransferArcView33to10/</url>
      <content type="html"><![CDATA[<p>ArcGIS大家族中还有很多老古董，例如 ArcView 3.3，如果需要直接跳跃式的迁移到 ArcGIS Desktop 10，需要怎样做呢？</p>
<p>1 找到这个功能：<strong>菜单栏 –&gt; Customize–&gt; Customize  Mode， Commands选项卡，搜索【ArcView】</strong></p>
<p> <img src="http://kikitamap.com/images/blogImg/TransferArcView33to10_Customize.png" alt=""></p>
<p> <img src="http://kikitamap.com/images/blogImg/TransferArcView33to10_COmmands.jpg" alt=""></p>
<p>2 将菜单 Import from ArcView Project… 拖拽到菜单栏任意位置。</p>
<p> <img src="http://kikitamap.com/images/blogImg/TransferArcView33to10_Import.jpg" alt=""></p>
<p>3 点击这个新菜单 ， Import from ArcView Project… ，弹出窗口，按照提示选择 apr 工程文件即可。</p>
<p><img src="http://kikitamap.com/images/blogImg/TransferArcView33to10_Import2.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[要素外接矩形的四个角点坐标、长度、宽度、面积如何计算到要素属性表中?]]></title>
      <url>/2013/05/21/FeatureEnvelopPython/</url>
      <content type="html"><![CDATA[<p>title: 要素外接矩形的四个角点坐标、长度、宽度、面积如何计算到要素属性表中？</p>
<p>使用工具 <strong>Calculate Field</strong>。</p>
<p><img src="http://kikitamap.com/images/blogImg/FeatureEnvelopPython_Tool.jpg" alt=""></p>
<p>9.3以上版本可按下图的方法分别求出envelope的x、y坐标的最大、最小值，由此可得出你要的那些值，需注意的的是求长度、面积等要在投影坐标系下进行。</p>
<ul>
<li><p><strong>X的最大值：<code>!shape.extent.XMax!</code></strong></p>
</li>
<li><p><strong>X的最小值：<code>!shape.extent.XMin!</code></strong></p>
</li>
<li><p><strong>Y的最大值：<code>!shape.extent.YMax!</code></strong></p>
</li>
<li><p><strong>Y的最大值：<code>!shape.extent.YMin!</code></strong></p>
</li>
<li><p><strong>面积：<code>!shape.area!</code></strong></p>
</li>
<li><p><strong>周长：<code>!shape.length!</code></strong></p>
</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/FeatureEnvelopPython_Expression.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CityEngine 中的 Annotation]]></title>
      <url>/2013/05/13/CityEgnineAnnotation/</url>
      <content type="html"><![CDATA[<p>CityEngine中的 Annotation 可以给规则和属性添加额外的信息，Annotation不会影响到规则本身的语法以及模型的产生，它主要影响的是用户界面的显示，例如：在Inspector 上，如何显示属性和规则。</p>
<p><strong>@StartRule:</strong></p>
<p>在起始规则选择器中标记起始规则，通常会变成粗体。</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@StartRule</span></span><br><span class="line">Start--&gt;NIL</span><br></pre></td></tr></table></figure>
<p><strong>@Hidden:</strong></p>
<p>标记一个属性或者规则隐藏，在 Inspector 中或者起始规则选择器中不显示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Hidden</span></span><br><span class="line">attr hide_me = <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><strong>@Group(“level_1-group”, …, “level_n-group”):</strong></p>
<p>设置属性的在 Inspector 中的分组显示。</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Group(<span class="meta-string">"First"</span>, <span class="meta-string">"Second"</span>)</span></span><br><span class="line">attr grouped = <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><strong>@Range(min, max):</strong></p>
<p>设置某个属性的最大、最小值，控制属性的范围。</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Range(<span class="number">5</span>, <span class="number">50</span>)</span><br><span class="line">attr height = <span class="number">20</span></span><br></pre></td></tr></table></figure>
<p><strong>@Range(item_1 = value, …, item_n = value):</strong></p>
<p>设置某个属性的指定选择项，值可以是数值型或者文本型。</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Range</span>(Low=<span class="number">0</span>, Mid=<span class="number">1</span>, High=<span class="number">2</span>)</span><br><span class="line">attr lod = <span class="number">0</span></span><br><span class="line"><span class="variable">@Range</span>(Red=<span class="string">"#ff0000"</span>, Green=<span class="string">"#00ff00"</span>, Blue=<span class="string">"#0000ff"</span>)</span><br><span class="line">attr color = <span class="string">"#000000"</span></span><br></pre></td></tr></table></figure>
<p><strong>@Color:</strong></p>
<p>在 Inspector 中显示某个色彩属性使用色彩选择器。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Color</span></span><br><span class="line">attr userColor = <span class="string">"#000000"</span></span><br></pre></td></tr></table></figure>
<p><strong>@File:</strong></p>
<p>将某个属性标记为一个文件名，在 Inspector 中以文件选择器显示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@File</span></span><br><span class="line">attr asset = <span class="string">"myfile.obj"</span></span><br></pre></td></tr></table></figure>
<p><strong>@File(“ext_1”, … , “ext_n”):</strong> </p>
<p>将某个属性标记为一个文件名，在 Inspector 中以文件选择器显示，规定指定的扩展名(“ext_1”, … , “ext_n”)。</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@File(<span class="meta-string">"tif"</span>, <span class="meta-string">"tiff"</span>)</span></span><br><span class="line">attr texture = <span class="string">"tex0.tiff"</span></span><br></pre></td></tr></table></figure>
<p><strong>@Directory:</strong> </p>
<p>将一个属性标记为路径名，在 inspector 中，会显示路径选择器。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Directory</span></span><br><span class="line">attr assets = <span class="string">"/assets/lod"</span> + lod</span><br></pre></td></tr></table></figure>
<p><strong>@Location(x, y):</strong> </p>
<p>为可视化 CGA 编辑器设置某个属性或者规则 2D 位置。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">Location</span>(<span class="keyword">0</span>, <span class="number">0</span>)</span><br><span class="line">Init--&gt;NIL</span><br></pre></td></tr></table></figure>
<p><strong>@Order(order):</strong></p>
<p>设置在 Inspector 中属性的显示顺序。</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Order</span>(<span class="number">1</span>)</span><br><span class="line">attr i_m_1st = <span class="number">0</span></span><br><span class="line"><span class="variable">@Order</span>(<span class="number">2</span>)</span><br><span class="line">attr i_m_2nd = <span class="number">0</span></span><br><span class="line"><span class="variable">@Order</span>(<span class="number">3</span>)</span><br><span class="line">attr i_m_3rd = <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><strong>@Description(“description”):</strong></p>
<p>为某个属性或者规则添加描述，这些描述会在 Inspector 中产生工具提示，或者在起始规则选择器中，或者样式管理器中作为描述显示。</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Description(<span class="meta-string">"The building width"</span>)</span></span><br><span class="line">attr width = <span class="number">40</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CityEngine与ArcGIS对栅格数据的要求情况]]></title>
      <url>/2013/05/13/CityEngineRasterReqirement/</url>
      <content type="html"><![CDATA[<p>在论坛上看到一篇很好的讲述如题主题的文章，很有价值，可以为CityEngine选择合适的栅格数据或者纹理，提供一些帮助，原文如下：</p>
<hr>
<p><strong>textures / raster files : concepts in CityEngine / ArcGIS</strong></p>
<p>Hi,</p>
<p>Quite a few new customers and people evaluating CityEngine who are working in the field of GIS ask about how CityEngine handles ‘raster files’ or ‘basemaps’ and what the best practices are concerning file resolutions.</p>
<p>Since CityEngine works ( from a technology-POV ) very similar as many other pure 3d applications (CityEngine is a 3d Modelling Application), I wanted to point out a few differences between CityEngine and ArcGIS :</p>
<p><strong>ArcGIS-users call bitmap files ‘raster files’ due to their grid-based nature. People usually working with 3d applications call them ‘textures’. It’s the same thing.</strong></p>
<p>ArcGIS has technologies embedded which ‘dynamically’ load only the part of a dataset which is currently visible on screen. Thus, with this technology HUGE raster datasets (&gt; 1GB) can easily be displayed.<br>CityEngine does NOT have such a streaming service, thus raster files / textures should be prepared with some basic knowledge how they shall be used in a CityEngine project.</p>
<p>Important things to know :</p>
<p>1] Arc GIS’ basemaps can not directly be loaded in CityEngine as a layer. The user must export the specific ‘area of interest’ (extent) as a texture to be used within CityEngine.<br>2] To be able to work with textures, all the textures must reside within the opened project, usually in the ‘assets’ folder general textures, respectively the ‘maps’ folder for map-/basemap - textures (or a subdirectory).<br>3] CityEngine is a 3d application which uses a technology called ‘OpenGL’ to display the 3d models (and the scene). Displaying 3d graphics this way uses the computer’s graphics card . For this, all textures are fully loaded in thatgraphics card’s memory. [Please note that the computer has ‘main memory’, which is usually called RAM. A graphics card has it’s own RAM, often called ‘Video RAM’. ]<br>4] Since the amount of memory on graphics cards is usually quite small (~ 256 MegaBytes - 1.5 GigaBytes), one can imagine that the resources should be handled carefully !<br>5] Please note that when importing raster files from ArcGIS (e.g. GeoTIF), the file’s projection MUST MATCH the CityEngine scene’s Scene Coordinate System. CityEngine can not (yet) reproject raster files when importing into the scene (as opposed to Shapes and Graph Segments !).</p>
<p>Since the amount of memory used per texture is directly linked to it’s resolution (e.g. 500x500 pixels) plus the bit-depth of the file, we recommend to work with as efficient files as possible :</p>
<ul>
<li>use graphics card drivers which are UP TO DATE !</li>
<li>use 8 bit textures whenever possible (except the terrain’s ‘heightmap’ which usually just is 32 bit)</li>
<li>use texture resolutions &lt;= 1024 x 1024 px (does not need a square ratio)</li>
<li>terrains may be higher in resolution, I’d say &lt;= 2048 x 2048 px.</li>
<li>higher resolution textures may be downsampled automatically by CityEngine ( for viewport display only ! ).</li>
<li>if a texture has too large a resolution (e.g. 13’000 x 13’000 px), it will not be displayed at all.</li>
</ul>
<hr>
<p>原文链接：</p>
<p><a href="http://forums.arcgis.com/threads/54072-textures-raster-files-concepts-in-CityEngine-ArcGIS" target="_blank" rel="noopener">http://forums.arcgis.com/threads/54072-textures-raster-files-concepts-in-CityEngine-ArcGIS</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Raster </tag>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Desktop 10.1 的系统自带的 prj 文件的去哪了?]]></title>
      <url>/2013/04/22/WhereArethePRJs/</url>
      <content type="html"><![CDATA[<p>在过去的版本，例如 9.31，10.0 我们在安装目录中可以找到存放系统 prj 的地址，例如 C:\Program Files (x86)\ArcGIS\Desktop10.0\Coordinate Systems\Projected Coordinate Systems。但是10.0之后，我们发现，这个文件夹消失了，那要得到其中的Prj文件怎么做呢？ </p>
<p>现在的 Coordinate Systems 文件变成的虚拟的结构，prj 文件都存储在 projection engine library (pe.dll)。从安装包中去掉了4000+的 prj 文件，会提升安装的性能。</p>
<p>如果是自定义的 prj 文件， 可以将文件复制到 ArcMap Favorites 文件夹。 如果需要得到 prj 文件，可以将其添加到收藏，或者另存为副本。</p>
<p><strong>收藏夹的位置：</strong></p>
<p><code>Win7 ：c:\Users\[login]\[Roaming | Local | etc]\AppData\ESRI\Desktop10.1\ArcMap\Coordinate Systems</code></p>
<p><code>WinXP： C:\Documents and Settings\[login]\Application Data\ESRI\Desktop10.1\ArcMap\Coordinate Systems</code></p>
<p>文件夹中支持子文件夹进行分类。 </p>
<p><img src="http://kikitamap.com/images/blogImg/WhereArethePRJs.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[File geodatabase size and name limits]]></title>
      <url>/2013/04/18/FileGDBlimits/</url>
      <content type="html"><![CDATA[<p>很多用户会关心FileGDB的参数，扒出来方便参考：</p>
<p>File geodatabase size and name limits are as follows:</p>
<ul>
<li>File geodatabase size: No limit</li>
<li>Table or feature class size： 1 TB (default), 4 GB or 256 TB with keyword</li>
<li>Number of feature classes and tables: 2,147,483,647</li>
<li>Number of fields in a feature class or table: 65,534</li>
<li>Number of rows in a feature class or table: 2,147,483,647</li>
<li><p>Geodatabase name length: Number of characters the operating system allows in a folder name</p>
<ul>
<li>Feature class or table name length: 160 characters</li>
<li>Field name length: 64 characters</li>
<li>Text field width: 2,147,483,647</li>
</ul>
</li>
</ul>
<p>链接：<br><a href="http://resources.arcgis.com/en/help/main/10.1/index.html#//018s00000002000000" target="_blank" rel="noopener">http://resources.arcgis.com/en/help/main/10.1/index.html#//018s00000002000000</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在街道两侧放置路灯、行树?]]></title>
      <url>/2013/04/17/CityEnginePlantTree/</url>
      <content type="html"><![CDATA[<p>使用CGA代码将对象（路灯、树木等）放置到路边。这里用到的主要方法就是Split 函数去做分割。</p>
<p>思路是，现将shape按照较短的轴向进行最初的分割剥离，得到路的两边sidewalk，然后将这些分割出来的形状进行再次分割，也就是沿着长的轴的方向分割成多个重复的小的形状，最后，用实际的模型（如路灯或树等）替换这些小块。</p>
<p><br></p>
<p>下面是示例代码，参考下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Sidewalk --&gt;  </span><br><span class="line">    SidewalkGeometry.  </span><br><span class="line">    SidewalkObjects     # 复制shape!  </span><br><span class="line">  </span><br><span class="line"># 思路：沿着道路的方向纵向切割道路，得到两边的人行道。  </span><br><span class="line"># 在剩下的shape“dot”中，插入树木、路灯等静态模型对象。  </span><br><span class="line">      </span><br><span class="line">attr placementWidth = <span class="number">0.05</span>  </span><br><span class="line">  </span><br><span class="line">attr streetDist = <span class="number">0.2</span>  </span><br><span class="line">attr objectDist = <span class="number">5</span>  </span><br><span class="line">  </span><br><span class="line">attr objectSize = <span class="number">0.1</span>  </span><br><span class="line">attr objectHeigt = <span class="number">2</span>  </span><br><span class="line">  </span><br><span class="line">SidewalkObjects --&gt;  </span><br><span class="line">    # 沿道路纵向分割两边的人行道。  </span><br><span class="line">    split(v,unitSpace,<span class="number">0</span>) &#123; streetDist : NIL | placementWidth : PlacementStrip | ~<span class="number">1</span> : NIL  &#125;  </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">PlacementStrip --&gt;  </span><br><span class="line">    # 沿着人行道分割横向切割，切成小段。  </span><br><span class="line">    split(u,unitSpace,<span class="number">0</span>) &#123;objectDist: NIL | placementWidth : PlacementPoint &#125;*  </span><br><span class="line">  </span><br><span class="line">PlacementPoint --&gt;  </span><br><span class="line">    alignScopeToGeometry(yUp, 0) # align the shape to the current point shape, thus the street direction!  </span><br><span class="line">    # r(0,90,0) # 旋转90度，视情况使用，例如路灯模型。  </span><br><span class="line">    s(objectSize*<span class="number">2</span>, objectHeigt, objectSize)  </span><br><span class="line">    i(<span class="string">"builtin:cube"</span>)  </span><br><span class="line">    center(xz)</span><br></pre></td></tr></table></figure>
<p>效果示例：</p>
<p><img src="http://kikitamap.com/images/blogImg/CityEnginePlantTree.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[单独打开CityEngine本地帮助]]></title>
      <url>/2013/03/22/DeployCityEngineLocalHelp/</url>
      <content type="html"><![CDATA[<p>CityEngine软件的自带帮助中有大量的信息可供查找学习，但是自带的 Help Content，正常是在启动CE后，再去打开才可以，这与 eclips 的帮助是一个道理。</p>
<p>有时仅仅为了看看帮助，而启动着庞大的CE，有点喧宾夺主喽。在老王的帮助指导下，找到了单独运行CE帮助的方法，磨刀不误砍柴工~ 在这里总结下。<br>​    </p>
<p><br></p>
<h1 id="一、设置系统环境变量"><a href="#一、设置系统环境变量" class="headerlink" title="一、设置系统环境变量"></a>一、设置系统环境变量</h1><ol>
<li><p>在“<strong>系统变量</strong>“”中，设置3项属性，<strong>JAVA_HOME</strong>, <strong>PATH</strong>, <strong>CLASSPATH</strong> （大小写无所谓)）, 若已存在则编辑，不存在则新建；    </p>
<ul>
<li><strong>JAVA_HOME</strong>：例如：<strong><code>C:\Program Files\Esri\CityEngine</code></strong>（CE的安装目录即可，下面有 bin 和 jre 文件夹）</li>
<li><strong>PATH</strong>：<strong><code>%JAVA_HOME%/bin;%JAVA_HOME%/jre/bin</code></strong></li>
<li><strong>CLASSPATH</strong>：  <strong><code>.;%JAVA_HOME%/lib/dt.jar;%JAVA_HOME%/lib/tools.jar</code></strong>（要加.表示当前路径）</li>
</ul>
</li>
</ol>
<p>PS：<code>%JAVA_HOME%</code> 就是引用前面指定的<code>JAVA_HOME</code>；<br>​<br>关于配置环境变量的详情，可参阅：<a href="http://blog.csdn.net/huanghm88/article/details/3965218" target="_blank" rel="noopener">http://blog.csdn.net/huanghm88/article/details/3965218</a><br>​<br><img src="http://kikitamap.com/images/blogImg/DeployCityEngineLocalHelp_EnvPara.jpg" alt=""></p>
<p>2.键入命令 java，出现画面，说明环境变量配置成功；</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployCityEngineLocalHelp_Java.jpg" alt=""></p>
<p><br></p>
<h1 id="二、单独运行帮助"><a href="#二、单独运行帮助" class="headerlink" title="二、单独运行帮助"></a>二、单独运行帮助</h1><p>制作个启动脚本–bat文件。</p>
<p>内容如下：</p>
<hr>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">C</span>:\<span class="selector-tag">Program</span> <span class="selector-tag">Files</span>\<span class="selector-tag">Esri</span>\<span class="selector-tag">CityEngine</span></span><br><span class="line"><span class="selector-tag">cd</span> %<span class="selector-tag">ehome</span>%</span><br><span class="line"><span class="selector-tag">C</span>:</span><br><span class="line"><span class="selector-tag">java</span> <span class="selector-tag">-classpath</span> <span class="selector-tag">plugins</span>\<span class="selector-tag">org</span><span class="selector-class">.eclipse</span><span class="selector-class">.help</span><span class="selector-class">.base_3</span><span class="selector-class">.5</span><span class="selector-class">.2</span><span class="selector-class">.v201009090800</span><span class="selector-class">.jar</span> <span class="selector-tag">org</span><span class="selector-class">.eclipse</span><span class="selector-class">.help</span><span class="selector-class">.standalone</span><span class="selector-class">.Help</span> <span class="selector-tag">-command</span> <span class="selector-tag">displayHelp</span></span><br><span class="line"><span class="selector-tag">pause</span></span><br></pre></td></tr></table></figure>
<hr>
<p>PS：蓝色部分仍然是 CE 的安装目录，下面包含 jre，bin 等目录。</p>
<p>关于单独使用eclipse帮助的详情：<a href="http://hi.baidu.com/caichaowei/item/4ab4ccb8e8304cd385dd7917" target="_blank" rel="noopener">http://hi.baidu.com/caichaowei/item/4ab4ccb8e8304cd385dd7917</a></p>
<p><br></p>
<h1 id="三、更改CE程序文件名"><a href="#三、更改CE程序文件名" class="headerlink" title="三、更改CE程序文件名"></a>三、更改CE程序文件名</h1><p>上面的脚本运行之后，也许会报错，找不到 eclipse.exe。</p>
<p>可以将CityEngine.exe，做个副本，重命名之，变成一位伪eclipse.exe。</p>
<p><img src="http://kikitamap.com/images/blogImg/DeployCityEngineLocalHelp_rename.jpg" alt=""><br>然后运行上一步中的 bat 脚本，单独的CE帮助就跳出来了~</p>
<p><br></p>
<p>CE进入esri怀抱已久，相信风格会越来越接近 ArcGIS 核心产品，现有的WebHelp链接如下：</p>
<p><a href="http://cehelp.esri.com/help/index.jsp?topic=/com.procedural.cityengine.help/html/toc.html" target="_blank" rel="noopener">http://cehelp.esri.com/help/index.jsp?topic=/com.procedural.cityengine.help/html/toc.html</a>    </p>
<p><br></p>
<p><strong>郑重鸣谢：~ ~ <a href="http://blog.newnaw.com/" target="_blank" rel="noopener">菩提老王</a> ~ ~</strong></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在CityEngine中的圆柱体建模]]></title>
      <url>/2013/03/12/CurveinCityEngine/</url>
      <content type="html"><![CDATA[<p>CityEngine中不支持弧段的存储，各种面都是折线面，也就是ArcGIS中的Polygon。</p>
<p>当遇到圆柱体的建筑物或实体时，如何为其建模呢？</p>
<p><img src="http://kikitamap.com/images/blogImg/CurveinCityEngine_Demo.jpg" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/CurveinCityEngine_Demo2.jpg" alt=""></p>
<p>考虑到ArcGIS与CityEngine的数据是可以互操作的，那就在ArcGIS中来构建圆形或者弧段，然后将之处理成近似弧段的多边形，然后导入CityEngine来作为模型的底面基础。按照这个思路，来动手做一下。</p>
<p><br></p>
<h1 id="1-准备带弧的数据"><a href="#1-准备带弧的数据" class="headerlink" title="1. 准备带弧的数据"></a>1. 准备带弧的数据</h1><p>在ArcGIS Desktop 中准备数据，创建 File GDB，用于存储弧段。可以从空白开始，也可以在现有数据中编辑。</p>
<p>创建圆、椭圆、贝塞尔曲线、圆弧构成的面等等：</p>
<p><img src="http://kikitamap.com/images/blogImg/CurveinCityEngine_Curve.png" alt=""></p>
<p>以上图形都处于节点编辑状态，从节点数目我们可以发现，都是以复杂对象存储的。然而这些是CE不能读取的，那么下一步就是转折线了。</p>
<p><br></p>
<h1 id="2-弧转折线"><a href="#2-弧转折线" class="headerlink" title="2. 弧转折线"></a>2. 弧转折线</h1><p>使用 ArcToolbox中的工具 Densify 工具来对弧段加密，从而将高级的函数要素对象转为简单的点线面几何。</p>
<p><img src="http://kikitamap.com/images/blogImg/CurveinCityEngine_Density.png" alt=""><br>​<br>根据需要设置间距或者偏移等参数，从而控制加密点的生成位置，这里的需要主要是指将来模型的详细程度。</p>
<p>如果需要比较逼真，距离可以相对小一些，这样的节点会更密集些，但是在CE中建模时可能会更耗时，更加占用资源；</p>
<p>如果相对可以粗略些，距离可以设置大些，这样的节点会稀疏些，建立模型会更加快速，但是边界相对不会很平滑。</p>
<p><img src="http://kikitamap.com/images/blogImg/CurveinCityEngine_DensifyResult.png" alt=""></p>
<h1 id="3-导入CE，进一步加工"><a href="#3-导入CE，进一步加工" class="headerlink" title="3.导入CE，进一步加工"></a>3.导入CE，进一步加工</h1><p>经过简单的拉拔，可以做出简单的类似弧段建筑物。</p>
<p><img src="http://kikitamap.com/images/blogImg/CurveinCityEngine_Model.png" alt=""></p>
<p>到这里，这些类弧段的楼房骨架就有了。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何检测显卡类型和OpenGL版本?]]></title>
      <url>/2013/03/04/checkOpenGLVersion/</url>
      <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a><strong>摘要</strong></h1><p>OpenGL是一个行业标准的3D图像API。运行 CityEngine 需要 OpenGL 2.x 或更高版本。OpenGL 驱动通常与显卡驱动和支持的软件（例如：DirectX）一同安装。</p>
<p><br></p>
<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a><strong>过程</strong></h1><h2 id="1-检测显卡类型（Windows）："><a href="#1-检测显卡类型（Windows）：" class="headerlink" title="1.检测显卡类型（Windows）："></a>1.检测显卡类型（Windows）：</h2><p>1） 打开 “<strong>运行</strong>” 窗口。</p>
<p>2）输入&nbsp;<strong><code>dxdiag</code></strong>&nbsp;进入 DirectX诊断工具，即列出显卡信息。</p>
<p><img src="http://kikitamap.com/images/blogImg/checkOpenGLVersion_dxdiag.jpg" alt=""></p>
<h2 id="2-检测-OpenGL版本（Windows，Mac，移动设备）"><a href="#2-检测-OpenGL版本（Windows，Mac，移动设备）" class="headerlink" title="2.检测 OpenGL版本（Windows，Mac，移动设备）"></a>2.检测 OpenGL版本（Windows，Mac，移动设备）</h2><p>需要安装个第三方小软件。。名字叫：OpenGL Extension Viewer.</p>
<p>下载并安装 OpenGL Extension Viewer </p>
<p><strong>Mac、移动设备</strong>：在 OpenGL Extension Viewer 网页中，对应的选择从 Mac App Store、iTunes Store、Android Market下载即可。</p>
<p><img src="http://kikitamap.com/images/blogImg/checkOpenGLVersion_download.png" alt=""></p>
<p><br></p>
<p>OpenGL Extension Viewer是个免费的应用程序，由 Realtech VR 开发。此工具可以显示当前安装的 OpenGL 版本，并且可以检测和升级显卡驱动。</p>
<p><img src="http://kikitamap.com/images/blogImg/checkOpenGLVersion_Viewer.jpg" alt=""></p>
<p><br></p>
<p>本文内容来源于 ArcGIS Resource Center 技术文件，编号：<a href="http://support.esri.com/en/knowledgebase/techarticles/detail/39476" target="_blank" rel="noopener">39476</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS支持3D视图吗？]]></title>
      <url>/2013/03/04/ArcGIS3DView/</url>
      <content type="html"><![CDATA[<p>ArcGIS Desktop 中的 ArcScene 组件支持 3D 视图。</p>
<p>在ArcScene中的 View 菜单下，有 View Setting 菜单。</p>
<p><br></p>
<p>默认是“透视图（perspective）”，也就是我们打开ArcScene的缺省设置显示方法：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGIS3DView_Perspective.jpg" alt=""></p>
<p><br></p>
<p>我们可以切换到“立体视图（stereo）”，方法可以选择例如常用的红蓝眼镜类型，如下图所示：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGIS3DView_Stereo.jpg" alt=""></p>
<p><br></p>
<p>另外还有一种视图，称为“正射视图（orthographic）”，也就2D显示效果。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGIS3DView_orthographic.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[3D数据互操作之认识Collada]]></title>
      <url>/2013/03/04/OverviewCollada/</url>
      <content type="html"><![CDATA[<p>Collada的名称来自于COLLAborative Design Activity（协同设计活动），是用于存储 3D 模型的开放式标准 XML 格式，最早是由 Sony Computer Entertainment（SCEA）发起。</p>
<p>以下介绍来自网络：</p>
<p><em>COLLADA™ 是面向交互式 3D 应用程序的基于 XML 的数字资产交换方案，使 3D 创作应用程序可以自由地交换数字资产而不损失信息 - 使多种DCC和3D处理软件包可以组合成强大的工具链管道。独特的交互模式提供了广泛全面的视觉编译。COLLADA FX支持使用 OpenGL ES 着色语言创作和封装着色器，以使一流的 3D 创作工具可以有效协作创建 OpenGL / OpenGL ES 应用程序和资产。<br> COLLADA是一个开放的标准，最初用于3D软件数据交换，由SCEA发起，现在则被许多著名厂家支持如Autodesk、XSI等。COLLADA不仅仅可以用于建模工具之间交换数据之用，也可以作为场景描述语言用于小规模的实时渲染。因为COLLADA DOM拥有丰富的内容用于表现场景中的各种元素，从多边形几何体到摄像机无所不包。我们可以通过COLLADA DOM库来进行场景文件的读取与处理操作。COLLADA DOM的编程方式类似COM。</em></p>
<p>总之，我们可以将Collada理解成一个开放的3D数据资源的交换方案。COLLADA 文件的扩展名是 .dae，此类文件中还可能引用一些附加的图像文件，这些文件被用作 3D 对象上覆盖的纹理。<br>了解更多资源，点击：<a href="http://collada.org/mediawiki/index.php/COLLADA" target="_blank" rel="noopener">http://collada.org/mediawiki/index.php/COLLADA</a></p>
<p><br></p>
<p>ArGIS Desktop 中如何转化呢？</p>
<p>从ArcGIS 10.0之后，ArcToolbox中就增加了 Multipath to Collada，可以将ArcGIS的多面体矢量格式转换为3D的解决方案。从而也便利了与 SkecthUp，3DS Max 等第三方软件的交互。</p>
<p>将多面体要素导出到 COLLADA 会创建若干文件 - 一个包含 3D 对象的 XML 表示的 .dae 文件以及一个或多个包含纹理的图像文件（例如 .jpg 或 .png 文件）。</p>
<p>每一个multipatch会对应的生成一个Collada文件，他们之间的关联是通过指定字段维护的，如果没有特殊指定，就使用ObjectID。</p>
<p><img src="http://kikitamap.com/images/blogImg/OverviewCollada.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[有关shapefile存储时间字段的问题]]></title>
      <url>/2013/03/04/shapefileDataField/</url>
      <content type="html"><![CDATA[<p>很多ArcGIS的用户会很疑惑，为什么excel或者其他数据库中的时间数据数据，例如15:40:30等这样的数据，转成shapefile数据后，这个日期字段中的值会变成12:00:00 ？</p>
<p>我们知道shapefile是基于dbase来存储的，通过dbf文件来存储属性字段，dbf支持的日期时间字段，实际上不是真正意义上的DateTime型，而是只能存储8位的日期型字段，也就是：YYYYMMDD。</p>
<p>所以，强烈建议用户，如果需要使用日期时间型字段时，请选用GDB数据类型。如果出于特定原因一定需要使用shapefile的。可以考虑新加字段，单独来存储时间，两种常用的方案：</p>
<ul>
<li>（1）将时间换算成秒，由某个数值型字段来存储。</li>
<li><p>（2）分别使用三个字段来存储，时分秒数值。</p>
<p><br></p>
</li>
</ul>
<p>顺便提一嘴。GDB存储时间日期的格式为：yyyy-mm-dd hh:mm:ss AM or PM。至于ArcMap中日期的显示的样式，是由windows系统来控制的。例如：M/d/yy, MM/dd/yy, yy/MM/dd等样式。</p>
<p>关于shape文件的详细描述，请查看如下两个连接中的任何一个：</p>
<p><a href="http://www.digitalpreservation.gov/formats/fdd/fdd000280.shtml" target="_blank" rel="noopener">http://www.digitalpreservation.gov/formats/fdd/fdd000280.shtml</a></p>
<p><a href="http://www.gdal.org/ogr/drv_shapefile.html" target="_blank" rel="noopener">http://www.gdal.org/ogr/drv_shapefile.html</a></p>
<p>从中都会获得有用的数据描述。</p>
<p>在资源库中也上传了esri有关shapefile的描述文档。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CityEngine 2012_1 与 ArcGIS 10_0 一同安装的注意事项]]></title>
      <url>/2013/03/04/TipsCityEngine20121ArcGIS100/</url>
      <content type="html"><![CDATA[<p>CityEngine 2012.1 与 ArcGIS 10.1 是同期发布的产品，ArcGIS Lisence Manager 10.1 是可以统一管理这两个产品的许可。比起CityEngine 2011的版本，许可方面的确便利了许多。</p>
<p>但是如果想使用 ArcGIS 10.0怎么办呢？</p>
<p>Esri 为了解决这个问题，提供了一个Patch，Esri CityEngine 2012.1 Software Authorization Patch，下载地址：</p>
<p><a href="http://support.esri.com/en/downloads/patches-servicepacks/view/productid/186/metaid/1929" target="_blank" rel="noopener">http://support.esri.com/en/downloads/patches-servicepacks/view/productid/186/metaid/1929</a></p>
<p>如果您ArcGIS Desktop当前处于中文版界面，打开 ArcGIS Administrator 配置许可的时候，没准会遇到这个问题：“试图执行不支持的程序”。</p>
<p>将ArcGIS Desktop语言切回英文即可解决。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[将ArcMap中的符号样式导出的供ArcPad使用]]></title>
      <url>/2013/01/15/ExportStyletoArcpad/</url>
      <content type="html"><![CDATA[<ol>
<li>在安装有ArcGIS Desktop的机器上，安装ArcPad。这里采用了各个产品的最新版本，分别是ArcGIS Desktop 10.1 和 ArcPad 10.0.4。</li>
</ol>
<p><img src="http://kikitamap.com/images/blogImg/ExportStyletoArcpad_version.png" alt=""></p>
<ol>
<li>激活ArcMap中的对应扩展：</li>
</ol>
<p><img src="http://kikitamap.com/images/blogImg/ExportStyletoArcpad_Extension.png" alt=""></p>
<ol>
<li>打开ArcPad 工具条，将当前地图的样式导出。</li>
</ol>
<p><img src="http://kikitamap.com/images/blogImg/ExportStyletoArcpad_ExportTool.gif" alt=""></p>
<p>默认是保存在安装目录下的Style文件夹。将将要生成的aps最好放置到这个位置， <strong>\Users\Public\Documents\ArcPad\Styles</strong> 。</p>
<p>为什么么呢？后面会说到~</p>
<p>无论保存在哪，最后会提示保存成功。</p>
<p><img src="http://kikitamap.com/images/blogImg/ExportStyletoArcpad_Success.gif" alt=""></p>
<ol>
<li>使用ArcPad样式文件。</li>
</ol>
<p>ArcPad读取并使用这些样式，对路径是有要求的，只要下述路径才能直接使用。因此其他路径是需要重新拷贝的。</p>
<ul>
<li><p><strong>PC Windows：\Users\Public\Documents\ArcPad\Styles</strong></p>
</li>
<li><p><strong>移动设备 WM： \Program Files\ArcPad\Styles</strong></p>
</li>
</ul>
<p>最后，在ArcPad的图层属性中就可以看到ArcMap导出的自定义的Style文件。</p>
<p><img src="http://kikitamap.com/images/blogImg/ExportStyletoArcpad_Customized.png" alt=""></p>
<p>哦啦，就到这里~</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ArcPad </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[City Engine 的学习资源]]></title>
      <url>/2012/12/20/CityEngineResources/</url>
      <content type="html"><![CDATA[<blockquote>
<p>原文链接：<a href="http://forums.arcgis.com/threads/52242-Learning-CityEngine-Tutorials-and-other-Training" target="_blank" rel="noopener">http://forums.arcgis.com/threads/52242-Learning-CityEngine-Tutorials-and-other-Training</a></p>
</blockquote>
<p><br></p>
<p>Dear all,</p>
<p>We’re getting a lot of inquiries concerning training materials, tutorials and other resources, to learn the CityEngine most efficiently.</p>
<p>Here’s the list of resources I usually recommend :</p>
<p>I highly recommend to browse through all the mentioned resources since they contain all the basic information to get started on a professional level CityEngine project.</p>
<h1 id="1-Resource-Center-Videos"><a href="#1-Resource-Center-Videos" class="headerlink" title="1] Resource Center : Videos"></a>1] Resource Center : Videos</h1><p><a href="http://video.arcgis.com/series/62/cityengine/date/desc" target="_blank" rel="noopener">http://video.arcgis.com/series/62/cityengine/date/desc</a></p>
<p>Recommended are all videos which were recorded on version 2012.1, as indicated in each description. [ Some of the videos are older, though we decided to keep them on the web. ]<br>These give a good overview over how the CityEngine works in it’s basics and what the common workflows are.</p>
<p>I recommend to go through all of them and try to follow the concepts, even though the user interface may have changed slightly between the versions.</p>
<p>Find the current list of Tutorial videos and 2012 Features here:<br><a href="http://forums.arcgis.com/threads/648...URCES-FAQ-HELP" target="_blank" rel="noopener">http://forums.arcgis.com/threads/648...URCES-FAQ-HELP</a></p>
<h1 id="2-Quick-Start-Guide"><a href="#2-Quick-Start-Guide" class="headerlink" title="2] Quick Start Guide"></a>2] Quick Start Guide</h1><p>Go to Help &gt; Help Contents &gt; Quick Start Guide</p>
<h1 id="3-Manual"><a href="#3-Manual" class="headerlink" title="3] Manual"></a>3] Manual</h1><p>There’s a detailed manual inside the CityEngine. Go to Help &gt; Help Contents</p>
<h1 id="4-Example-Cities"><a href="#4-Example-Cities" class="headerlink" title="4] Example Cities"></a>4] Example Cities</h1><p>Have a look at the downloadable Example Cities. Download them via Help &gt; Download Tutorials and Examples<br>Or via the Resource Center:<br><a href="http://resources.arcgis.com/en/commu...-ce-version:10" target="_blank" rel="noopener">http://resources.arcgis.com/en/commu...-ce-version:10</a></p>
<h1 id="5-Written-Tutorials"><a href="#5-Written-Tutorials" class="headerlink" title="5] Written Tutorials"></a>5] Written Tutorials</h1><p>The written Tutorials (PDFs) are located within the downloadable tutorial project’s ‘scenes’ folder. </p>
<h1 id="6-CityEngine-Workflows"><a href="#6-CityEngine-Workflows" class="headerlink" title="6] CityEngine Workflows"></a>6] CityEngine Workflows</h1><p><a href="http://resources.arcgis.com/en/commu...ype:0000010000" target="_blank" rel="noopener">http://resources.arcgis.com/en/commu...ype:0000010000</a></p>
<h1 id="7-Dedicated-Forums"><a href="#7-Dedicated-Forums" class="headerlink" title="7] Dedicated Forums"></a>7] Dedicated Forums</h1><p><a href="http://forums.arcgis.com/forums/45-Solutions" target="_blank" rel="noopener">http://forums.arcgis.com/forums/45-Solutions</a></p>
<p>These 5 dedicated forums already have a great traction and are a valuable resource for basic and advanced questions. I’m here a lot and answer most questions personally.</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CityEngine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[E7210005 操作系统策略不允许该操作 解决]]></title>
      <url>/2012/12/20/E7210005FingerPrint/</url>
      <content type="html"><![CDATA[<p>本文用于解决windows7系统不能使用内部administrator用户注册指纹的问题，已测试通过，绝对原创！</p>
<p> <br></p>
<p>电脑型号：Thinkpad X220<br>系统：windows7 64位</p>
<p> <br></p>
<p>1、计算机上点右键，选择 管理–本地用户和组–用户，在Administrator用户上点右键，选择重命名，重命名为Administrator1</p>
<p>2、新建一个Administrator账号，密码与Administrator1一样，注销后用Administrator登录，录入指纹，导出指纹配置</p>
<p>3、注销后用Administrator1用户登录，删除Administrator用户，重命名Administrator1为Administrator</p>
<p>4、注销后用Administrator用户登录，导入指纹文件</p>
<p><strong>方法二：</strong></p>
<p>上述方法虽然有一个问题，就是用指纹开机后，在进入系统进还要再刷一次指纹，经过测试，找到了一个可以彻底解决这个问题的方法：</p>
<p>一、本人先装了XP 32位，安装后在 管理–本地用户和组–用户 中启用administrator用户，将装系统时创建的用户禁用，用administrator注册指纹，然后导出指纹数据</p>
<p>二、安装win7 64位，安装后在 管理–本地用户和组–用户 中启用administrator用户，将装系统时创建的用户禁用，重启系统，用administrator登录，导入第一步的指纹数据，即可完美破解win7注册指纹的问题</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS Terrain Dataset]]></title>
      <url>/2012/12/13/ArcGIS-Terrain-Dataset/</url>
      <content type="html"><![CDATA[<h1 id="1-了解-Terrain-Dataset"><a href="#1-了解-Terrain-Dataset" class="headerlink" title="1 了解 Terrain Dataset"></a><strong>1 了解 Terrain Dataset</strong></h1><p>Terrain Dataset 是多分辨率的基于 TIN 的表面数据结构，支持 ArcSDE、个人以及文件地理数据库，存储在ArcGIS&nbsp; Geodatabase 的 Feature Dataset 中，Feature Dataset 中需要包含构建 TIN 的要素类。</p>
<p>Terrain Dataset&nbsp;引用原始要素类，对数据重新组织重建索引，动态生成 TIN 表面，并没有实际创建栅格或 TIN 数据。</p>
<p>在数据组织过程中，会创建金字塔，用于决定数据细节层次。&nbsp;terrain 数据集是多分辨率 TIN。它具有一系列 TIN，其中每一个 TIN 都在特定的地图比例尺范围内使用。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGIS-Terrain-Dataset_Demo.gif" alt=""></p>
<p>Terrain Dataset 可由不同类型的数据组成。支持的几何类型包括点、多点、线和多边形。每一种几何类型的数据都可以具有不同的表面要素类型（SFType），这与前面一篇博客中构建TIN时选择表面类型作用是相同的。</p>
<p>帮助中的下表很好的将常见数据类型的应用做了总结：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGIS-Terrain-Dataset_type.png" alt=""></p>
<p><br></p>
<h1 id="2-Terrain-Dataset-的属性"><a href="#2-Terrain-Dataset-的属性" class="headerlink" title="2 Terrain Dataset 的属性"></a><strong>2 Terrain Dataset 的属性</strong></h1><h2 id="基本属性设置："><a href="#基本属性设置：" class="headerlink" title="基本属性设置："></a><strong>基本属性设置：</strong></h2><p><strong>1） 平均点间距（Approximate Point Spacing）</strong></p>
<p>创建地形数据集时，需要指定输入测量值的平均点间距。平均点间距的作用是对点进行归类或分组，从而构造出虚拟分块系统。</p>
<p>平均点距的获得：查看元数据、向数据提供商或数据维护人员寻求帮助。实在无法获取，只能用量距工具估算了。</p>
<p>这个参数能够决定 Tile Size，查看Terrain数据集属性可以看到。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGIS-Terrain-Dataset_Pointspace.png" alt=""></p>
<p><strong>2） 高度源（Height Source）</strong></p>
<p>向地形添加要素类时，需要指明该要素类是否具有 z 值；如果具有 z 值，则还需要指明这些值的来源。</p>
<p><strong>3） 表面要素类型（SFType）</strong></p>
<p>定义在对地形数据集表面进行定义时该要素类所发挥的作用。存在离散多点、断裂线以及若干种多边形类型。上面图表中有说明。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGIS-Terrain-Dataset_SFtype.png" alt=""></p>
<p><strong>4）地形金字塔（Terrain Pyramid）</strong></p>
<p>地形金字塔等级采用的依据是对精确度的要求随比例的减小而降低。金字塔等级在概念和用途上均类似于栅格金字塔，但二者的实现方法不同。 Terrain Pyramid 通过点抽稀实现。也就是下一级金字塔使用的点数少于上一级，但是采用的点都是原始的点值。 金字塔不使用任何重采样、平均化或派生的数据。</p>
<p>有两种金字塔类型：z 容差和窗口大小。<br><img src="http://kikitamap.com/images/blogImg/ArcGIS-Terrain-Dataset_Pyramid.png" alt=""></p>
<p>在窗口大小的选项中，可以设置二次抽稀。</p>
<h2 id="高级属性设置"><a href="#高级属性设置" class="headerlink" title="高级属性设置"></a><strong>高级属性设置</strong></h2><p><img src="http://kikitamap.com/images/blogImg/ArcGIS-Terrain-Dataset_Advanced.png" alt=""></p>
<p><strong>5）概貌地形（Overview Terrain）</strong></p>
<p>概貌地形是地形数据集最粗略表示，专门用于小比例尺下的快速绘制。如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGIS-Terrain-Dataset_Overview.png" alt=""></p>
<p><strong>6）定位点（Anchor Point）</strong></p>
<p>定位点在地形数据集的所有金字塔等级中保持不变。这些点不会被过滤，也不会被细化掉。这将确保无论使用何种分辨率金字塔等级，定位点都会存在于地形表面中。对于显示和分析操作都是这样。支持定位点的目的是使用户始终能在地形中保留一个相对较小的重要测量值集合，如控制点、水准点和最佳水深。</p>
<p><strong>7）组（Group）</strong></p>
<p>组用于为线要素和多边形要素定义多种详细程度。将相同的组 ID 指定给每个多边形要素类，向地形告知它们属于同一主题（例如，研究区域边界）。</p>
<p><strong>8）嵌入式要素类（Embedded feature classes）</strong></p>
<p>terrain 金字塔的大小约相当于参与 terrain 的要素类中所包含几何的大小，需要较大的存储空间。对于较大的点集合（通常由激光雷达或声纳表示），开销可能相当大，可以将较大的多点要素类嵌入 terrain 数据集中，以节省存储空间。构建 terrain 后，它将成为点的容器，而不再引用源要素类。可以将这些要素类删除，以恢复其存储空间。</p>
<h2 id="性能的提示"><a href="#性能的提示" class="headerlink" title="性能的提示"></a><strong>性能的提示</strong></h2><p>1） 最好将所有硬断线都放置在一个要素类中。</p>
<p>2） 定义 terrain 时，使用的要素类越少越好。</p>
<p>3） 不同数据库的数据量的选择：</p>
<ul>
<li>个人地理数据库的容量最小，应限制为包含 2,000 万或更少点数的地形。</li>
<li>文件地理数据库可用于包含数十亿个点的地形。</li>
<li>ArcSDE 的容量最大，适合点集可能会增长到数十亿的地形。</li>
</ul>
<p>4） 金字塔类型的选择：</p>
<p>有两种方式可供选择： Z Tolerance 和 Windows Size。区别和使用情况如下：</p>
<ul>
<li>Z Tolerance：对地表裸露激光雷达最有效。金字塔过滤器速度较慢，但在某些分析中，控制垂直精度很重要，要细化此类分析中使用的数据，Z 容差金字塔过滤器更适合一些。</li>
<li>Windows Size：对所有数据、第一回波激光雷达点最有效。窗口大小过滤器速度较快，适合于较常规的用途，它以水平采样密度为基础。Windows Size 金字塔过滤器是基于窗口大小以及用户指定的窗口统计数据来确定的。指定的窗口统计数据可以是最小点高度、最大点高度、平均点高度，或者是同时指定最小和最大点高度。</li>
</ul>
<p>5） 有关构建Terrain的建议和最佳方法：</p>
<p><a href="http://resources.arcgis.com/zh-cn/help/main/10.1/index.html#/na/005v0000001r000000/" target="_blank" rel="noopener">http://resources.arcgis.com/zh-cn/help/main/10.1/index.html#/na/005v0000001r000000/</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[不规则三角网（TIN）]]></title>
      <url>/2012/12/06/AboutTIN/</url>
      <content type="html"><![CDATA[<h1 id="数字高程模型（DEM）"><a href="#数字高程模型（DEM）" class="headerlink" title="数字高程模型（DEM）"></a>数字高程模型（DEM）</h1><p>地球表面高低起伏，呈现一种连续变化的曲面，这种曲面无法用平面地图来确切表示。于是我们就利用一种全新的数字地球表面的方法——&nbsp;<strong>数字高程模型&nbsp;</strong>的方法，这种方法已被普遍广泛采用。数字高程模型即<strong>DEM（Digital Elevation Model）</strong>，是以数字形式按一定结构组织在一起，表示实际地形特征空间分布的模型，也是地形形状大小和起伏的数字描述。</p>
<p>DEM有三种主要的表示模型：<strong>规则格网模型，等高线模型和不规则三角网</strong>。</p>
<p>格网（即GRID）DEM在地形平坦的地方，存在大量的数据冗余，在不改变格网大小情况下，难以表达复杂地形的突变现象，在某些计算，如通视问题，过分强调网格的轴方向。不规则三角网（简称TIN，即Triangulated Irregular Network）是另外一种表示数字高程模型的的方法（Peuker等，1978），它既减少了规则格网带来的数据冗余，同时在计算（如坡度）效率方面又优于纯粹基于等高线的方法。不规则三角网能随地形起伏变化的复杂性而改变采样点的密度和决定采样点的位置，因而它能够避免地形起伏平坦时的数据冗余，又能按地形特征点如山脊，山谷线，地形变化线等表示数字高程特征。</p>
<p><br></p>
<h1 id="TIN的基本知识"><a href="#TIN的基本知识" class="headerlink" title="TIN的基本知识"></a>TIN的基本知识</h1><p>在TIN中，满足最佳三角形的条件为：尽可能的保证三角形的三个角都是锐角，三角形的三条边近似相等，最小角最大化。</p>
<p>TIN 是基于矢量的数字地理数据的一种形式，通过将一系列折点（点）组成三角形来构建。形成这些三角形的插值方法有很多种，例如 Delaunay 三角测量法或距离排序法。ArcGIS 支持 Delaunay 三角测量方法。</p>
<p>TIN 的单位是英尺或米等长度单位，而不是度分秒。当使用地理坐标系的角度坐标进行构建时，Delaunay 三角测量无效。创建&nbsp;TIN 时，应使用<strong>投影坐标系（PCS）</strong>。</p>
<p>TIN 模型的适用范围不及栅格表面模型那么广泛，且构建和处理所需的开销更大。获得优良源数据的成本可能会很高，并且，由于数据结构非常复杂，处理 TIN 的效率要比处理栅格数据低。</p>
<p>TIN 通常用于较小区域的高精度建模（如在工程应用中），此时 TIN 非常有用，因为它们允许计算平面面积、表面积和体积。</p>
<p><br></p>
<h1 id="Ⅲ-TIN在ArcGIS中的存储"><a href="#Ⅲ-TIN在ArcGIS中的存储" class="headerlink" title="Ⅲ TIN在ArcGIS中的存储"></a>Ⅲ TIN在ArcGIS中的存储</h1><p>TIN 表面数据模型由<strong>结点（Node）、边（Edge）、三角形（Triangle）、包面（Hull）</strong>和<strong>拓扑（Topology）</strong>组成。</p>
<p>与 coverage 类似，TIN 以文件目录形式存储。但TIN没有关联的 INFO 文件。TIN 目录由七个包含 TIN 表面信息的文件组成。这些文件以二进制格式编码，因此无法通过标准文本显示或编辑程序读取。</p>
<p>TIN 的最大允许大小视连续可用内存资源而定。对于 Win32 系统而言，正常操作条件下，可达到的最大大小为 1000 到 1500 万个结点。出于可用性和性能的考虑，强烈建议始终将此大小限制在几百万。如果超出这一大小，则最好使用 terrain 数据集来表示。</p>
<p>ArcGIS 10 中采用了约束性&nbsp;Delaunay 三角测量，也就是除了沿隔断线的位置，其他地方都遵守Delaunay准则。</p>
<p><br></p>
<h1 id="Ⅳ-如何创建TIN"><a href="#Ⅳ-如何创建TIN" class="headerlink" title="Ⅳ 如何创建TIN"></a>Ⅳ 如何创建TIN</h1><p>在ArcGIS中，TIN 主要是通过矢量数据、栅格数据、Terrain数据集来创建。</p>
<h2 id="1-从矢量数据创建"><a href="#1-从矢量数据创建" class="headerlink" title="1. 从矢量数据创建"></a>1. 从矢量数据创建</h2><p>这是最常用的一种方法。可以通过点、线、面来构建TIN，不同的几何类型可以提供不同的表面要素类型（SF_Type），我们一起来了解下不同的 SF_Type。</p>
<p><strong>（1） 离散多点（Mass Point）</strong></p>
<p>离散多点是 TIN 中的主要输入要素，由它们来决定表面的总体形状。</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutTIN_Points.png" alt=""><img src="http://kikitamap.com/images/blogImg/AboutTIN_Points2.png" alt=""></p>
<p><strong>(2) 隔断线（Breakline）</strong></p>
<p>隔断线通常用于呈现自然要素（如山脊线或河流）或建筑要素（如道路）。隔断线有以下两种：硬隔断线与软隔断线。</p>
<p>隔断线可以有高程信息，也可以没有高程信息。</p>
<p>硬隔断线：硬隔断线用于表示表面坡度的不连续性。河流和道路断面可作为硬隔断线包括在 TIN 中。硬隔断线能够捕获表面的突变并能改进 TIN 的显示和分析质量。</p>
<p>软隔断线：软隔断线是不会改变表面局部坡度的线状要素，例如表示研究区范围边界的线等。</p>
<p><strong>(3) 多边形（Polygon）</strong></p>
<p>裁剪多边形：用于定义 TIN 表面的边界。位于裁剪多边形之外的输入数据将从插值和分析操作（例如，等值线或体积计算）中排除。</p>
<p>擦除多边形：位于擦除多边形之内的输入数据，将从插值和分析操作（例如，等值线或体积计算）中排除。</p>
<p>替换多边形：用于将边界及所有内部高度设置为相同的值。可用于对湖泊或者坡度挖掘到水平面以下的区域进行建模。</p>
<p>填充多边形：用于将一个整数属性值分配给位于此填充多边形内部的所有三角形。表面高度不受影响，并且不发生裁剪或擦除操作。</p>
<p>以上多边形也有软硬之分，类似于软硬隔断线用法。</p>
<p>创建 TIN 使用的的工具是<strong>Creat TIN</strong>，在输入要素列表中，可以为每种要素的角色进行指定。</p>
<p>如果是更新、修改TIN，可以使用工具<strong>Edit TIN</strong>工具。</p>
<h2 id="2-从栅格数据创建"><a href="#2-从栅格数据创建" class="headerlink" title="2. 从栅格数据创建"></a>2. 从栅格数据创建</h2><p>栅格数据可以转换为 TIN，并且可以用于简化地表模型。在ArcGIS中主要是通过 Raster to TIN 工具进行显示。</p>
<p>栅格转 TIN 工作过程：首先根据足量的输入栅格点（像元中心）生成候选 TIN，以便完全覆盖栅格表面的边缘。然后，该工具会逐步改进 TIN 表面，直到符合指定的 Z 容差。这个工具的使用主要有两个参数需要注意：Z Tolerance，Max point。</p>
<p><strong>Z Tolerance</strong> ：输入栅格与输出 TIN 之间所允许的最大高度差（z 单位）。默认情况下，z 容差是输入栅格 z 范围的 1/10。</p>
<p><strong>Max point</strong>：用于控制将在处理过程终止前添加到 TIN 的最大点数。默认情况下，该过程将一直持续到所有点被添加完。</p>
<p>对比如下设置了默认 Z 容差和 500 的Z容差的TIN 效果：</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutTIN_Tolerance.png" alt=""></p>
<h2 id="3-从其他数据创建"><a href="#3-从其他数据创建" class="headerlink" title="3. 从其他数据创建"></a>3. 从其他数据创建</h2><p>（1）将 ArcGIS terrain dataset 数据转成 TIN。使用工具 terrain to TIN。</p>
<p>可使用 terrain 金字塔等级的 z 容差或窗口大小分辨率来决定TIN的精细程度。默认值为 0（z 容差），或全分辨率（窗口大小）。</p>
<p>（2）将 LAS Dataset 转成 TIN，使用工具 LAS Dataset to TIN。可通过一定得细化类型和细化方法生成TIN。</p>
<p>（3）使用工具&nbsp;LandXML to TIN，将 LandXML 数据转为TIN。什么是 LandXML？在网上找了个连接：<a href="http://www.profsurv.com/magazine/article.aspx?i=70923" target="_blank" rel="noopener">点击</a>。</p>
<p>有关 LAS Dataset 和 Terrain Dataset 后面会再整理总结。</p>
<p><br></p>
<h1 id="Ⅴ-编辑已有TIN"><a href="#Ⅴ-编辑已有TIN" class="headerlink" title="Ⅴ 编辑已有TIN"></a>Ⅴ 编辑已有TIN</h1><p>如果使用矢量数据批量编辑TIN，可以使用工具 Edit TIN，位于ArcToolbox中的3D分析工具箱。</p>
<p>如果需要进行交互式的TIN编辑，可以使用ArcMap中提供的 TIN Editing 工具条。</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutTIN_TINEditor.png" alt=""></p>
<p>如果调出TIN Editing工具条后，工具都是灰色的，那是因为没有设置编辑对象。</p>
<p>要编辑的 TIN 必须是 3D Analyst 工具条的下拉菜单中的选定图层。</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutTIN_3DAnalyst.png" alt=""></p>
<p>可见，TIN编辑的功能是依赖于3D分析扩展许可的。</p>
<p>交互式的TIN编辑中有个GP工具没有的功能：</p>
<p><strong>从中心线分级（Grade from centralline ……）</strong>，可用于向 TIN 表面添加道路、堤坝和类似护堤的要素。需要事先选中某一矢量线要素。</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutTIN_Grade.png" alt=""></p>
<p><br></p>
<h1 id="Ⅵ-从TIN中输出几何信息"><a href="#Ⅵ-从TIN中输出几何信息" class="headerlink" title="Ⅵ 从TIN中输出几何信息"></a><strong>Ⅵ 从TIN中输出几何信息</strong></h1><p>使用ArcToolbox中的工具可以将TIN中的信息提取为矢量要素。位于3D分析工具箱中的转换工具集下：</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutTIN_FromTIN.png" alt=""></p>
<p>1) <strong>TIN Domain</strong>：获得TIN的范围，可以选择生成线或者面。</p>
<p>2) <strong>TIN Edge</strong>：生成表示 TIN 边的矢量线要素。0 — A regular edge；1 — A soft edge；2 — A hard edge</p>
<p>3) <strong>TIN line</strong>： 生成TIN的隔断线。1—Soft breakline&nbsp;2— Hard breakline</p>
<p>4) <strong>TIN Node</strong>： 将TIN的节点导出成点要素类，2D、3D要素可选。</p>
<p>5) <strong>TIN Polygon Tag</strong>：&nbsp;使用 TIN 中的标签值创建面要素。标签是指：分配给三角形的简单形式的整数属性值。其边界在三角测量中将强化为隔断线。标签以有符号长整型数据形式存储。</p>
<p>6) <strong>TIN Triangle</strong>： 生成构成TIN的三角形面。并为每个三角形提供山体阴影的坡度、坡向和可选属性以及标签值。</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutTIN_Triangle.png" alt=""></p>
<p>7) <strong>TIN to Raster</strong>： 将TIN生成栅格数据。可选插值方法、数据类型、数据格式等。</p>
<p><br></p>
<h1 id="Ⅶ-其他仅适用于TIN的工具"><a href="#Ⅶ-其他仅适用于TIN的工具" class="headerlink" title="Ⅶ 其他仅适用于TIN的工具"></a>Ⅶ 其他仅适用于TIN的工具</h1><p>（1）如果使用的10.0之后的版本，TIN的存储版本有区别，可以使用<strong>Copy TIN</strong> 工具将 TIN 数据转成低版本（10.0之前）的 TIN 数据。</p>
<p>（2）如果需要裁剪TIN的边界，可以使用工具<strong>Delineate TIN Data Area</strong> 工具，设置最长边参数，删除 TIN 中的长边。</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutTIN_Delineate.gif" alt=""></p>
<p>（3） 如果需要比较两个TIN的差异，使用工具<strong>Compare TIN</strong>。</p>
<p><br><br><br></p>
<p>O了，至此有关TIN的一个概况结束喽。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[3D分析之常用转换工具]]></title>
      <url>/2012/11/21/3DConversionTool/</url>
      <content type="html"><![CDATA[<p><img src="http://kikitamap.com/images/blogImg/3DConversionTool_Toolset.png" alt=""></p>
<p>三维分析工具箱中，Conversion工具集为我们提供了很多用于格式转换的工具，其中有几个能为我们解决很多常见问题，这里整理下：</p>
<h1 id="1-各种数据格式的3D模型导入到ArcGIS中展示"><a href="#1-各种数据格式的3D模型导入到ArcGIS中展示" class="headerlink" title="1. 各种数据格式的3D模型导入到ArcGIS中展示"></a><strong>1. 各种数据格式的3D模型导入到ArcGIS中展示</strong></h1><p>使用 Import 3D file 工具，ArcGIS 主要支持以下 3D模型的导入：</p>
<ul>
<li>3D Studio Max (*.3ds)</li>
<li>SketchUp (*.skp)</li>
<li>VRML and GeoVRML (*.wrl)</li>
<li>OpenFlight (*.flt)</li>
<li>COLLADA (*.dae).</li>
</ul>
<p>将数据导入为ArcGIS的 Multipatch（多面体）要素类，可以选择 shapefile 和 Geodatabase 来存储。</p>
<p>这里需要注意：shapefile multipatch 是不能存储纹理的，如果需要保存纹理，要选择 GDB multipatch feature class。</p>
<p><br></p>
<h1 id="2-需要得到-Multipatch-的-2D-轮廓线"><a href="#2-需要得到-Multipatch-的-2D-轮廓线" class="headerlink" title="2. 需要得到 Multipatch 的 2D 轮廓线"></a><strong>2. 需要得到 Multipatch 的 2D 轮廓线</strong></h1><p>使用 Multipatch Footprint 工具</p>
<p><img src="http://kikitamap.com/images/blogImg/3DConversionTool_Footprint.gif" alt=""></p>
<p><br></p>
<h1 id="3-获得栅格数据三维边界线-面"><a href="#3-获得栅格数据三维边界线-面" class="headerlink" title="3. 获得栅格数据三维边界线/面"></a><strong>3. 获得栅格数据三维边界线/面</strong></h1><p>使用 Raster Domain 工具</p>
<p><img src="http://kikitamap.com/images/blogImg/3DConversionTool_RasterDomain.gif" alt=""></p>
<p><br></p>
<h1 id="4-使用点数据和现有模型制作场景"><a href="#4-使用点数据和现有模型制作场景" class="headerlink" title="4. 使用点数据和现有模型制作场景"></a><strong>4. 使用点数据和现有模型制作场景</strong></h1><p>常常有这样的应用场景：手头有采集的兴趣点数据，并且有现成的3DS、Skp等等诸多模型，需要将这些模型放置在正确地理位置，并将它们统一存入GDB中进行维护。我们可以这样来做：</p>
<p>（1） 在ArcScene或者ArcGlobe中添加点图层.</p>
<p>（2）双击图层符号，弹出【符号选择器】窗口，点击【编辑符号】。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DConversionTool_EditSymbol.png" alt=""></p>
<p>（3）在弹出的【符号属性编辑器】中，类型下拉列表中选择【3D Marker Symbol】，并在之后的窗口中选择模型的路径。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DConversionTool_3DMakerSymbol.png" alt=""></p>
<p>（4）上步中，根据需要分门别类的给每类点配以不同的模型，最后得到丰富的3D模型组成的场景。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DConversionTool_Scene.png" alt=""></p>
<p>（5） 使用工具：<strong>&nbsp;Layer 3D to Feature Class，</strong>将模型统一转入GDB，集中存储和维护。原来的模型细节及纹理得到很好的保留。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DConversionTool_Multipatch.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[3D分析之Functional Surface工具箱]]></title>
      <url>/2012/11/18/3DFunctionalSurface/</url>
      <content type="html"><![CDATA[<p><img src="http://kikitamap.com/images/blogImg/3DFunctionalSurface_Toolset.png" alt=""></p>
<h1 id="1-Add-Surface-Information（添加表面信息）"><a href="#1-Add-Surface-Information（添加表面信息）" class="headerlink" title="1. Add Surface Information（添加表面信息）"></a><strong>1. Add Surface Information（添加表面信息）</strong></h1><p>向点、线或面要素的属性表添加表面高程信息。</p>
<table>
<thead>
<tr>
<th><strong>要素几何</strong></th>
<th><strong>表面属性</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Point</td>
<td>从表面上点的 XY 坐标插入的点高程。</td>
</tr>
<tr>
<td>MultiPoint</td>
<td>针对多点记录中所有点得到的点的最小、最大和平均高程。</td>
</tr>
<tr>
<td>Polyline</td>
<td>沿着表面的线的 3D 距离。  从表面上线的路径获得的最小、最大和平均高程和坡度。</td>
</tr>
<tr>
<td>Polygon</td>
<td>面定义的表面部分的 3D 面积。  来自表面的最小、最大和平均高程和坡度。</td>
</tr>
</tbody>
</table>
<h1 id="2-Interpolate-shape（插值-Shape）"><a href="#2-Interpolate-shape（插值-Shape）" class="headerlink" title="2. Interpolate shape（插值 Shape）"></a><strong>2. Interpolate shape（插值 Shape）</strong></h1><p>根据从栅格、不规则三角网 (TIN)、或 terrain 数据集获取的高程值为要素类插入 z 值。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DFunctionalSurface_InterpolateShape.gif" alt=""></p>
<h1 id="3-nbsp-Intersect-3D-Line-With-Surface（-nbsp-3D线与表面相交）"><a href="#3-nbsp-Intersect-3D-Line-With-Surface（-nbsp-3D线与表面相交）" class="headerlink" title="3.&nbsp;Intersect 3D Line With Surface（&nbsp;3D线与表面相交）"></a><strong>3.&nbsp;Intersect 3D Line With Surface（&nbsp;3D线与表面相交）</strong></h1><p>计算 3D 线要素与一个或多个表面的几何交集，并以分割线要素和点的形式返回交集。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DFunctionalSurface_IntersectLineSurface.png" alt=""></p>
<h1 id="4-nbsp-Stack-Profile（堆栈剖面）"><a href="#4-nbsp-Stack-Profile（堆栈剖面）" class="headerlink" title="4.&nbsp;Stack Profile（堆栈剖面）"></a><strong>4.&nbsp;Stack Profile（堆栈剖面）</strong></h1><p>创建表格和可选图表，用于说明一个或多个多面体、栅格、TIN 或 terrain 表面上的线要素的剖面。</p>
<p>这个工具可以来制作剖面图。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DFunctionalSurface_Stack.png" alt=""></p>
<p>表中各个字段的含义：</p>
<ul>
<li>FIRST_DIST - 到剖面段中第一个折点的距离。</li>
<li>FIRST_Z - 剖面段中第一个折点的高度。</li>
<li>SEC_DIST - 剖面段中第二个折点的距离。</li>
<li>SEC_Z - 剖面段中第二个折点的高度。</li>
<li>LINE_ID - 用于定义剖面的线要素的唯一 ID。</li>
<li>SRC_TYPE - 剖面源的数据类型，是表面或多面体。</li>
<li>SRC_ID - 要描绘剖面的多面体要素的唯一 ID。不适用于表面输入。</li>
<li>SRC_NAME - 剖面源的名称和路径。</li>
</ul>
<h1 id="5-nbsp-Surface-Volume（表面体积）"><a href="#5-nbsp-Surface-Volume（表面体积）" class="headerlink" title="5.&nbsp;Surface Volume（表面体积）"></a><strong>5.&nbsp;Surface Volume（表面体积）</strong></h1><p>可计算指定参考平面以上或以下的栅格、不规则三角网 (TIN) 或 terrain 数据集表面的面积和体积。</p>
<p><img src="http://kikitamap.com/images/blogImg/3DFunctionalSurface_Volumn.gif" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[3D分析之3D要素工具箱]]></title>
      <url>/2012/11/18/3D3DFeatures/</url>
      <content type="html"><![CDATA[<p>整理有关 ArcGIS 10.1 3D分析工具箱中，3D Feature 工具箱中，各个工具的功能及注意事项。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Toolset.png" alt=""></p>
<h1 id="1-Add-Z-information-（添加-Z-信息）"><a href="#1-Add-Z-information-（添加-Z-信息）" class="headerlink" title="1. Add Z information （添加 Z 信息）"></a><strong>1. Add Z information （添加 Z 信息）</strong></h1><p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_AddZInfo.png" alt=""></p>
<p><strong>各种几何类型的Z信息：</strong></p>
<ul>
<li><p><strong>Points</strong> - Z 值</p>
</li>
<li><p><strong>Multipoints</strong> - Z 最小值、Z 最大值、Z 平均值、点计数</p>
</li>
<li><p><strong>Polylines</strong> - Z 最小值、Z 最大值、Z 平均值、3D 长度、最小坡度、最大坡度、平均坡度、折点计数</p>
</li>
<li><p><strong>Polygons </strong>- Z 最小值、Z 最大值、Z 平均值、3D 长度、最小坡度、最大坡度、平均坡度、折点计数</p>
</li>
<li><p><strong>Multipatches</strong>- Z 最小值、Z 最大值、表面面积、体积、最小坡度、最大坡度、平均坡度</p>
</li>
</ul>
<p><strong>关于坡度值：</strong></p>
<p>坡度以百分比值或度数的形式返回.</p>
<p>最小坡度根据值最接近 0 或水平度的线段获得。</p>
<p>最大坡度根据具有最大计算值的线段获得。</p>
<p>平均坡度通过按 3D 长度对每条线段进行加权后对所有线段的坡度求平均值获得。这会导致较长线段对结果值的影响比较短线段更大。</p>
<p>面要素的坡度值仅针对边要素计算，使用的方法与线段应用的方法一样。</p>
<p><strong>关于体积：</strong></p>
<p>只能对闭合多面体计算体积。非闭合多面体要素将返回值 0.0。</p>
<p>在 Solaris 平台上，设计的局限性当前将使工具无法确定多面体是否闭合，因此假定所有多面体均为闭合多面体，将针对所有多面体计算体积测量。</p>
<p><strong>关于噪点过滤器：</strong></p>
<p>提供可用于在进行统计计算时排除一小部分要素的选项。此选项非常适用于获得准确的最大坡度估值，因为一小部分要素的坡度值通常较极端，可能使统计结果产生偏差。</p>
<p>面积或长度选项中给出的值将被用于排除这部分要素。此参数不适用于点和多点要素。</p>
<p>NO_FILTER —不使用任何噪点过滤器。这是默认设置。</p>
<p>AREA &lt;…&gt; —对多面体要素类中的部分要素应用面积过滤器。面积 值为 0.001 表示系统将忽略多面体中面积小于 0.001 的部分。</p>
<p>LENGTH &lt;…&gt; — 对线要素类或面要素类中的部分要素应用长度过滤器。长度值为 0.001 时表示系统将忽略长度小于 0.001 的那部分要素。</p>
<h1 id="2-Buffer-3D（3D-缓冲区）"><a href="#2-Buffer-3D（3D-缓冲区）" class="headerlink" title="2. Buffer 3D（3D 缓冲区）"></a><strong>2. Buffer 3D（3D 缓冲区）</strong></h1><p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_buffer3D.png" alt=""></p>
<p>在点或线要素周围创建 3D 缓冲区。点输入将会生成<strong>球体</strong>，线输入将会生成<strong>圆柱</strong>要素。结果为Multipatch要素。</p>
<p>提高缓冲<strong>质量</strong>会生成更平滑的 3D 要素，但处理时间将会更长。</p>
<p>考虑指定一个<strong>简化值</strong>以提高复杂线要素（例如带有大量折点的曲线）的性能。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Buffer3D2.png" alt=""></p>
<h1 id="3-nbsp-Difference-3D（3D-差异）"><a href="#3-nbsp-Difference-3D（3D-差异）" class="headerlink" title="3.&nbsp;Difference 3D（3D 差异）"></a><strong>3.&nbsp;Difference 3D（3D 差异）</strong></h1><p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_diff3D.png" alt=""></p>
<p>类似于2D中 Erase 工具。</p>
<p>输入面必须是闭合的Multipatch，生成的结果不包含任何属性信息。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Diff3DTool.png" alt=""></p>
<p>参数 Output Table，勾选后，生成这样三列：</p>
<blockquote>
<p>Output_ID - 输出要素类的唯一 ID。<br>Minuend_ID - 主多面体的唯一 ID。<br>Subtrahend - 已从主多面体中减去的多面体要素的唯一 ID。</p>
</blockquote>
<h1 id="4-Enclose-Multipatch-（封闭多面体）"><a href="#4-Enclose-Multipatch-（封闭多面体）" class="headerlink" title="4. Enclose Multipatch （封闭多面体）"></a><strong>4. Enclose Multipatch （封闭多面体）</strong></h1><p>创建闭合多面体要素。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Enclose.png" alt=""></p>
<p>Grid Size：用于构造闭合多面体要素的精度。此值使用输入要素的空间参考的线性单位定义。</p>
<h1 id="5-nbsp-Feature-To-3D-By-Attribute（通过属性从要素转换到-3D）"><a href="#5-nbsp-Feature-To-3D-By-Attribute（通过属性从要素转换到-3D）" class="headerlink" title="5.&nbsp;Feature To 3D By Attribute（通过属性从要素转换到 3D）"></a><strong>5.&nbsp;Feature To 3D By Attribute（通过属性从要素转换到 3D）</strong></h1><p>从输入要素的属性中获得的Z值创建 3D 要素。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Featureto3DAttr.png" alt=""></p>
<p>此工具支持点、多点、线和面几何。</p>
<p>各要素的高程都从在指定的字段中获得。</p>
<p>对于线要素还可提供第二个高度字段。每条线的起点使用第一个高度，终点使用第二个高度。中间所有折点的高度都将根据两个端点连线的坡度进行内插。</p>
<h1 id="6-Inside-3D（3D-内部）"><a href="#6-Inside-3D（3D-内部）" class="headerlink" title="6. Inside 3D（3D 内部）"></a><strong>6. Inside 3D（3D 内部）</strong></h1><p>用于识别3D 要素是否包含在闭合的多面体中。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Inside3D.png" alt=""></p>
<p>Input Feature 可以是：point、polyline、polygon、multipatch feature class；</p>
<p>输出的表中包含：</p>
<blockquote>
<p><strong>Target_ID</strong> - 输入要素的唯一 ID。<br><strong>Status</strong> - 要素完全还是部分落入多面体内。</p>
</blockquote>
<p>如果勾选了 Complex Output Table ，生成的表中会多出来：<strong>Container_ID</strong> - 多面体的唯一 ID。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Complex.png" alt=""></p>
<h1 id="7-Intersect-3D（3D-相交）"><a href="#7-Intersect-3D（3D-相交）" class="headerlink" title="7. Intersect 3D（3D 相交）"></a><strong>7. Intersect 3D（3D 相交）</strong></h1><p>计算闭合多面体要素的交集。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Intersect3D.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Intersect3DTool.png" alt=""></p>
<p><strong>注意：</strong></p>
<p>如果只提供了一个输入要素类，将会计算该多面体数据集中各要素的相交情况；</p>
<p>如果提供了两个要素，将会确定这两个数据集的要素的相交部分，同时忽略那些只存在于一个输入中相交情形。</p>
<p><strong>输出类型：</strong></p>
<ul>
<li><p>SOLID — 创建交集闭合多面体。这是默认设置。</p>
</li>
<li><p>SURFACE — 创建表示输入要素之间共享面的多面体表面。</p>
</li>
<li><p>POLYLINE — 创建表示输入要素之间共享边的折线。</p>
</li>
</ul>
<h1 id="8-nbsp-Intersect-3D-Line-With-Multipatch（3D-线与多面体相交）"><a href="#8-nbsp-Intersect-3D-Line-With-Multipatch（3D-线与多面体相交）" class="headerlink" title="8.&nbsp;Intersect 3D Line With Multipatch（3D 线与多面体相交）"></a><strong>8.&nbsp;Intersect 3D Line With Multipatch（3D 线与多面体相交）</strong></h1><p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Intersect3DLine.png" alt=""></p>
<p>确定并返回线与多面体要素之间几何交集的数量。可选择性地将表示交集的点要素和表示在此类点分开的输入线的线要素写入输出要素类中。</p>
<p>交点计数将在消息窗口中作为整数结果返回，并可在模型和脚本中用于建立后续操作的前提条件。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Intersect3DLineMessage.png" alt=""></p>
<h1 id="9-nbsp-Is-Closed-3D（是否为闭合-3D）"><a href="#9-nbsp-Is-Closed-3D（是否为闭合-3D）" class="headerlink" title="9.&nbsp;Is Closed 3D（是否为闭合 3D）"></a><strong>9.&nbsp;Is Closed 3D（是否为闭合 3D）</strong></h1><p>评估多面体要素是否是完全封闭的。</p>
<p>将 IsClose 字段添加到现有Multipatch要素的属性表中。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_IsClosed.png" alt=""></p>
<h1 id="10-Near-3D（3D-邻近）"><a href="#10-Near-3D（3D-邻近）" class="headerlink" title="10. Near 3D（3D 邻近）"></a><strong>10. Near 3D（3D 邻近）</strong></h1><p>计算每个输入要素到一个或多个邻近要素类中的最近要素的三维距离。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Near3D.png" alt=""></p>
<p>在原输入数据的属性表中增加N多最邻近点的信息。</p>
<h1 id="11-Union-3D（3D-联合）"><a href="#11-Union-3D（3D-联合）" class="headerlink" title="11. Union 3D（3D 联合）"></a><strong>11. Union 3D（3D 联合）</strong></h1><p>基于输入要素类对闭合的重叠多面体要素进行合并。</p>
<p><img src="http://kikitamap.com/images/blogImg/3D3DFeatures_Union3D.png" alt=""></p>
<p>如果两个或多个多面体要素仅共享一条边或一个折点，则会发出一个警告，说明生成的要素不是简单要素，因此无法创建。</p>
<p>如果组中包含的多面体没有共享的体积或空间，则会返回相同的消息。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[3D分析之ArcGIS 支持的表面类型]]></title>
      <url>/2012/11/17/3DSupportedSurface/</url>
      <content type="html"><![CDATA[<p>为了表示连续的表面，ArcGIS 提供了多种表示、存储函数表面的数据格式，主要是以下四类，其中包括10.1带来的新类型：LAS Dataset。</p>
<p>我们可以借助于ArcGIS的3D分析扩展，对这些函数表面数据进行三维的显示、分析等。但是需要注意的是，这些数据并不是真正意义上的真三维，这是我们常说的2.5D。因为这些数据在某个XY坐标对对应的位置上，只能存储一个Z值，而真正的三维实体是在某个位置上有一系列的Z值。这种三维实体，ArcGIS中是以Multipatch存储和表示的。</p>
<p><strong>1.Raster</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/3DSupportedSurface_Raster.png" alt=""></p>
<p>这是最常见的一种栅格表面数据格式，通常是浮点型的连续栅格。</p>
<p><strong>2.TIN</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/3DSupportedSurface_TIN.gif" alt=""></p>
<p><strong>3.LAS Dataset</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/3DSupportedSurface_LAS.png" alt=""></p>
<p><strong>4.Terrain Dataset</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/3DSupportedSurface_Terrain.gif" alt=""></p>
<p><strong>四种格式，在各种GDB中的支持情况：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/3DSupportedSurface_GDB.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[了解 ArcScene 与 ArcGlobe]]></title>
      <url>/2012/11/17/ArcSceneArcGlobe/</url>
      <content type="html"><![CDATA[<p>ArcGIS 中，ArcScene 与 ArcGLobe 是两种3D数据可视化以及分析的组件或者说环境，它们二者有什么样的区别，如何根据自己的应用去选择呢？<br>以下是对这二者的对比信息总结：</p>
<h1 id="1-许可"><a href="#1-许可" class="headerlink" title="1. 许可"></a>1. 许可</h1><p>都需要 3D Analyst License 才能启动。</p>
<h1 id="2-坐标系统"><a href="#2-坐标系统" class="headerlink" title="2. 坐标系统"></a>2. 坐标系统</h1><p>ArcScene - 使用第一个加入ArcScene的数据的坐标系统，当不同坐标系的数据加入时，进行动态投影，这点同ArcMap。通常使用平面坐标系（投影坐标系）。<br>ArcGlobe - WGS 1984 Cube Projection *，当不同坐标系的数据加入时，进行动态投影。</p>
<ul>
<li>那神马是立方体投影（cube projection）？<br>也就是将地球投影到各面都是正方形的六面体上。如下图：</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/ArcSceneArcGlobe.gif" alt=""></p>
<p>需要说明，这种投影，经线和纬线都是直线；在纬度 +45° 和 -45° 之间，东南西北方向是准确的，比例尺是正确的；在极面上，由中心确定的方向是真实的。<br>但是这种投影不适合制图，仅适用于ArcGlobe。</p>
<h1 id="3-内存管理与缓存机制"><a href="#3-内存管理与缓存机制" class="headerlink" title="3. 内存管理与缓存机制"></a>3. 内存管理与缓存机制</h1><p>ArcScene - 将所有数据加载到内存中，必要的时候使用虚拟内存。也因此，ArcScene通常用来展示小场景、小数据量。<br>ArcGlobe - 通常专用于超大型数据集，缓存过程中会建立索引并将所有数据组织为各个切片和细节层次。</p>
<h1 id="4-数据类型的支持"><a href="#4-数据类型的支持" class="headerlink" title="4. 数据类型的支持"></a>4. 数据类型的支持</h1><p>ArcGlobe支持terrain数据，但是ArcScene不支持。<br>ArcScene中不支持Annotation。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 3D </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间分析之水文分析]]></title>
      <url>/2012/08/27/SAHydrology/</url>
      <content type="html"><![CDATA[<p>接收雨水的区域以及雨水到达出水口前所流经的网络被称为水系。流经水系的水流只是通常所说的水文循环的一个子集，水文循环还包括降雨、蒸发和地下水流。水文分析工具重点处理的是水在地表上的运动情况。“水文分析”工具用于为地表水流建立模型。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Toolset.png" alt=""></p>
<p><strong>盆域分析（Basin）</strong>：创建描绘所有流域盆地的栅格。</p>
<p><strong>填洼（Fill）</strong>：通过填充表面栅格中的汇来移除数据中的小缺陷。</p>
<p><strong>流量（Flow Accumulation）</strong>：创建每个像元累积流量的栅格。可选择性应用权重系数。</p>
<p><strong>流向（Flow Direction）</strong>：创建从每个像元到其最陡下坡相邻点的流向的栅格。</p>
<p><strong>水流长度（Flow length）</strong>：计算沿每个像元的流路径的上游（或下游）距离或加权距离。</p>
<p><strong>汇（Sink）</strong>：创建识别所有汇或内流水系区域的栅格。</p>
<p><strong>捕捉倾泻点（Snap pour point）</strong>：将倾泻点捕捉到指定范围内累积流量最大的像元。</p>
<p><strong>河流连接（Stream link）</strong>：向各交汇点之间的栅格线状网络的各部分分配唯一值。</p>
<p><strong>河网分级（Stream Order）</strong>：为表示线状网络分支的栅格线段指定数值顺序。</p>
<p><strong>栅格河网矢量化（Stream to Feature）</strong>：将表示线状网络的栅格转换为表示线状网络的要素。</p>
<p><strong>分水岭（Watershed）</strong>：确定栅格中一组像元之上的汇流区域。</p>
<p><br></p>
<p>了解水系的术语，如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Term.png" alt=""></p>
<p>以下流程图显示的是从数字高程模型 (DEM) 中提取水文信息（如分水岭边界和河流网络）的过程：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Workflow.png" alt=""></p>
<p>现在就以手中的这个DEM为例来依次使用工具集中的工具，来学习这部分功能：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_DEM.png" alt=""></p>
<p><br></p>
<h1 id="一、流向（Flow-Direction）"><a href="#一、流向（Flow-Direction）" class="headerlink" title="一、流向（Flow Direction）"></a>一、流向（Flow Direction）</h1><p>流向工具的输出是值范围介于 1 到 255 之间的整型栅格。从中心出发的各个方向值为：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_FlowDirection.gif" alt=""></p>
<p>例如，如果最陡下降方向位于当前处理像元的左侧，则将该处理像元的流向编码将为 16。</p>
<p>如果像元的 z 值在多个方向上均发生相同变化，并且该像元是凹陷点的一部分，则该像元的流向将被视为未定义。此时，该像元在输出流向栅格中的值将为这些方向的总和。例如，如果 z 值向右（流向 = 1）和向下（流向 = 4）的变化相同，则该像元的流向为 1 + 4 = 5。可以使用汇工具将具有未定义流向的像元标记为凹陷点。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_FLowDirection2.png" alt=""></p>
<p><br></p>
<h1 id="二、汇（Sink）"><a href="#二、汇（Sink）" class="headerlink" title="二、汇（Sink）"></a>二、汇（Sink）</h1><p>汇是指流向栅格中流向无法被赋予八个有效值之一的一个或一组空间连接像元。汇被视为具有未定义的流向，并被赋予等于其可能方向总和的值。</p>
<p>汇工具的输出是一个整型栅格，其中每个汇都被赋予一个唯一值。汇的编号介于 1 到汇的数量之间。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Sink.png" alt=""></p>
<p><br></p>
<h1 id="三、填洼（Fill）"><a href="#三、填洼（Fill）" class="headerlink" title="三、填洼（Fill）"></a>三、填洼（Fill）</h1><p>通过填充表面栅格中的汇来移除数据中的小缺陷。</p>
<p>凹陷点是指具有未定义流域方向的像元；其周围的像元均高于它。倾泻点相对于凹陷点的汇流区域高程最低的边界像元。如果凹陷点中充满了水，则水将从该点倾泻出去。</p>
<p><strong>TIPS：</strong>有关填充的Z限制</p>
<p>要填充的凹陷点与其倾泻点之间的最大高程差。如果凹陷点与其倾泻点之间的 z 值差大于 z 限制，则不会填充此凹陷点。</p>
<p>默认情况下将填充所有凹陷点（不考虑深度）。</p>
<p><br></p>
<h1 id="四、流量（Flow-Accumulation）"><a href="#四、流量（Flow-Accumulation）" class="headerlink" title="四、流量（Flow Accumulation）"></a>四、流量（Flow Accumulation）</h1><p>创建每个像元累积流量的栅格。流量累积将基于流入输出栅格中每个像元的像元数。</p>
<p>高流量的输出像元是集中流动区域，可用于标识河道。流量为零的输出像元是局部地形高点，可用于识别山脊。</p>
<p>流量工具不遵循压缩环境设置。输出栅格将始终处于未压缩状态。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_FLowAccu.png" alt=""></p>
<p>通过上面的填洼，求流向，得到如下流量图，看到了河道：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_FlowAccu2.png" alt=""></p>
<p><br></p>
<h1 id="五、河网分级（Stream-Order）"><a href="#五、河网分级（Stream-Order）" class="headerlink" title="五、河网分级（Stream Order）"></a>五、河网分级（Stream Order）</h1><p>河网分级是一种将级别数分配给河流网络中的连接线的方法。此级别是一种根据支流数对河流类型进行识别和分类的方法。仅需知道河流的级别，即可推断出河流的某些特征。</p>
<p>河网分级工具有两种可用于分配级别的方法。这两种方法由 Strahler (1957) 和 Shreve (1966) 提出。在这两种方法中，始终将 1 级分配给上游河段。</p>
<p><strong>Strahler 河流分级方法：</strong></p>
<p>在 Strahler 法中，所有没有支流的连接线都被分为 1 级，它们称为第一级别。当级别相同的河流交汇时，河网分级将升高。</p>
<p>因此，两条一级连接线相交会创建一条二级连接线，两条二级连接线相交会创建一条三级连接线，依此类推。但是，级别不同的两条连接线相交不会使级别升高。例如，一条一级连接线和一条二级连接线相交不会创建一条三级连接线，但会保留最高级连接线的级别。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Strahler.png" alt=""></p>
<p><strong>Shreve 河流分级方法：</strong></p>
<p>Shreve 法考虑网络中的所有连接线。与 Strahler 法相同，所有外连接线都被分为 1 级。但对于 Shreve 法中的内连接线，级别是增加的。例如，两条一级连接线相交会创建一条二级连接线，一条一级连接线和一条二级连接线相交会创建一条三级连接线，而一条二级连接线和一条三级连接线相交则会创建一条五级连接线。</p>
<p>因为级别可增加，所以 Shreve 法中的数字有时指的是量级，而不是级别。在 Shreve 法中，连接线的量级是指上游连接线的数量。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Shreve.png" alt=""></p>
<p><br></p>
<h1 id="六、栅格河网矢量化（Stream-to-Feature）"><a href="#六、栅格河网矢量化（Stream-to-Feature）" class="headerlink" title="六、栅格河网矢量化（Stream to Feature）"></a>六、栅格河网矢量化（Stream to Feature）</h1><p>栅格河网矢量化工具使用的算法主要用于矢量化河流网络或任何表示方向已知的栅格线性网络的栅格。</p>
<p>该工具使用方向栅格来帮助矢量化相交像元和相邻像元。可将两个值相同的相邻栅格河网矢量化为两条平行线。</p>
<p>这与栅格转折线 (Raster to Polyline) 工具相反，后者通常更倾向于将线折叠在一起。下图是两者的对比：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Stream2Feature.png" alt=""></p>
<p><br></p>
<h1 id="七、河流连接（Stream-link）"><a href="#七、河流连接（Stream-link）" class="headerlink" title="七、河流连接（Stream link）"></a>七、河流连接（Stream link）</h1><p>向各交汇点之间的栅格线状网络的各部分分配唯一值。</p>
<p>“连接”是指连接两个相邻交汇点、连接一个交汇点和出水口或连接一个交汇点和分水岭的河道的河段。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Streamlink1.gif" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Streamlink2.png" alt=""></p>
<p><br></p>
<h1 id="八、水流长度（Flow-Length）"><a href="#八、水流长度（Flow-Length）" class="headerlink" title="八、水流长度（Flow Length）"></a>八、水流长度（Flow Length）</h1><p>水流长度工具的主要用途是计算给定盆地内最长水流的长度。该度量值常用于计算盆地的聚集时间。这可使用 UPSTREAM 选项来完成。</p>
<p>该工具也可通过将权重栅格用作下坡运动的阻抗，来创建假设降雨和径流事件的距离-面积图。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Flowlength1.png" alt="">   <img src="http://kikitamap.com/images/blogImg/SAHydrology_Flowlength2.png" alt=""></p>
<p><br></p>
<h1 id="九、捕捉倾泻点（Snap-pour-point）"><a href="#九、捕捉倾泻点（Snap-pour-point）" class="headerlink" title="九、捕捉倾泻点（Snap pour point）"></a>九、捕捉倾泻点（Snap pour point）</h1><p>捕捉倾泻点工具用于确保在使用分水岭工具描绘流域盆地时选择累积流量大的点。</p>
<p>捕捉倾泻点将在指定倾泻点周围的捕捉距离范围内搜索累积流量最大的像元，然后将倾泻点移动到该位置。</p>
<p><br></p>
<h1 id="十、分水岭（Watershed）"><a href="#十、分水岭（Watershed）" class="headerlink" title="十、分水岭（Watershed）"></a>十、分水岭（Watershed）</h1><p>确定栅格中一组像元之上的汇流区域。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_Watershed.png" alt=""></p>
<p><br></p>
<h1 id="十一、盆域"><a href="#十一、盆域" class="headerlink" title="十一、盆域"></a>十一、盆域</h1><p>创建描绘所有流域盆地的栅格。</p>
<p>通过识别盆地间的山脊线，在分析窗口中描绘流域盆地。通过分析输入流向栅格数据找出属于同一流域盆地的所有已连接像元组。通过定位窗口边缘的倾泻点（水将从栅格倾泻出的地方）及凹陷点，然后再识别每个倾泻点上的汇流区域，来创建流域盆地。这样就得到流域盆地的栅格。</p>
<p>以下是盆域分析示例：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAHydrology_bash.png" alt=""></p>
<p><br></p>
<p>That’s all.</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间分析之多元分析]]></title>
      <url>/2012/08/27/SAMultiDimensions/</url>
      <content type="html"><![CDATA[<p>通过多元统计分析可以探查许多不同类型的属性之间的关系。</p>
<p>有两种可用的多元分析：分类（监督分类与非监督分类/Supervised&amp;Unsupervised)）和主成分分析/Principal Component Analysis  (PCA)。</p>
<p>ArcGIS 提供了如下工具：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAMultiDimensions_Toolset.png" alt=""></p>
<p><br></p>
<h1 id="一、波段集统计工具（Band-Collection-Statistics）"><a href="#一、波段集统计工具（Band-Collection-Statistics）" class="headerlink" title="一、波段集统计工具（Band Collection Statistics）"></a><strong>一、波段集统计工具（Band Collection Statistics）</strong></h1><p>栅格波段必须具有一个公共交集。如果不存在公共交集，则会出现错误，且不会创建任何输出。</p>
<p>如果栅格波段的范围不同，统计数据将以所有输入栅格波段的共同的空间范围来计算。默认情况下，像元大小为输入栅格的最大像元的大小；否则，将取决于栅格分析环境设置。</p>
<p>此工具计算每个图层的基本统计测量值（最小值、最大值、平均值和标准差），如果勾选协方差和相关矩阵，还可以得到这两个值。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAMultiDimensions_BandColSts.png" alt=""></p>
<h1 id="二、创建特征（Create-Signature）"><a href="#二、创建特征（Create-Signature）" class="headerlink" title="二、创建特征（Create Signature）"></a><strong>二、创建特征（Create Signature）</strong></h1><p>创建由输入样本数据和一组栅格波段定义的类的 ASCII 特征文件。该工具可创建将用作其他多元分析工具的输入参数的文件。</p>
<p>该文件由两部分组成：</p>
<p>1） 所有类的常规信息，例如图层数、输入栅格名称和类别数。<br>2） 每个类别的特征文件，由样本数、平均值和协方差矩阵组成。</p>
<h1 id="三、编辑特征（Edit-Signature）"><a href="#三、编辑特征（Edit-Signature）" class="headerlink" title="三、编辑特征（Edit Signature）"></a><strong>三、编辑特征（Edit Signature）</strong></h1><p>通过合并、重新编号和删除类特征来编辑和更新特征文件。</p>
<p>输入特征重映射文件是 ASCII 文件，其每一行有两列值与之对应，以冒号分隔。第一列是原始类 ID 值。第二列包含用于在特征文件中更新的新类 ID。文件中的所有条目必须基于第一列以升序进行排序。</p>
<p>编辑特征文件的写法是固定的，如下：</p>
<p>只有需要编辑的类才必须被放入特征重映射文件；任何在重映射文件中不存在的类将保持不变。</p>
<p>要合并一组类，原类 ID：新类 ID。</p>
<p>要删除类特征，使用 -9999 作为该类第二列的值。</p>
<p>要重新编号，将类 ID 重新编号为某个不存在于输入特征文件中的值。</p>
<p>示例：<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span>: <span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span>: <span class="number">11</span></span><br><span class="line"><span class="symbol">5 </span>: -<span class="number">9999</span></span><br><span class="line"><span class="symbol">9 </span>: <span class="number">3</span></span><br></pre></td></tr></table></figure></p>
<p>上例将使用 3 合并类 2 和 类 9，使用 11 合并类 4，并将删除类 5。</p>
<h1 id="四、树状图（Dendrogram）"><a href="#四、树状图（Dendrogram）" class="headerlink" title="四、树状图（Dendrogram）"></a><strong>四、树状图（Dendrogram）</strong></h1><p>构造可显示特征文件中连续合并类之间的属性距离的树状图。</p>
<p>有关其工作原理，详见：<a href="http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/009z000000q6000000/" target="_blank" rel="noopener">http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/009z000000q6000000/</a></p>
<h1 id="五、最大似然法分类（Maximum-Likelihood-Classification）"><a href="#五、最大似然法分类（Maximum-Likelihood-Classification）" class="headerlink" title="五、最大似然法分类（Maximum Likelihood Classification）"></a><strong>五、最大似然法分类（Maximum Likelihood Classification）</strong></h1><p>最大似然法分类工具所用的算法基于两条原则：</p>
<p>1） 每个类样本中的像元在多维空间中呈正态分布<br>2） 贝叶斯决策理论</p>
<p><strong>TIPS：</strong>工具中有几个参数需要注意：</p>
<p>reject_fraction：将因最低正确分配概率而得不到分类的像元部分。</p>
<p>默认值为 0.0；将对每个像元进行分类。共有 14 个有效输入：0.0、0.005、0.01、0.025、0.05、0.1、0.25、0.5、0.75、0.9、0.95、0.975、0.99 和 0.995。</p>
<p>a_priori_probabilities：指定将如何确定先验概率。</p>
<ul>
<li>EQUAL — 所有类将具有相同的先验概率。</li>
<li>SAMPLE — 先验概率将与特征文件内所有类中采样像元总数的相关的各类的像元数成比例。</li>
<li>FILE — 先验概率将会分配给输入 ASCII 先验概率文件中的各个类。</li>
</ul>
<p>以下是通过三类样本的特征文件，分类的栅格数据的示例：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAMultiDimensions_Classification.png" alt=""></p>
<h1 id="六、Iso-聚类（Iso-Cluster）"><a href="#六、Iso-聚类（Iso-Cluster）" class="headerlink" title="六、Iso 聚类（Iso Cluster）"></a><strong>六、Iso 聚类（Iso Cluster）</strong></h1><blockquote>
<p>Iso表示：iterative self-organizing –迭代自组织方法。</p>
</blockquote>
<p>Iso聚类工具对输入波段列表中组合的多元数据执行聚类。所生成的特征文件（*.gsg）可用作生成非监督分类栅格的分类工具（例如最大似然法分类）的输入。</p>
<p>类数的最小有效值为二。不存在最大聚类数。通常情况下，聚类越多，所需的迭代就越多。</p>
<h1 id="七、Iso-聚类非监督分类（Iso-Cluster-Unsupervised-Classification）"><a href="#七、Iso-聚类非监督分类（Iso-Cluster-Unsupervised-Classification）" class="headerlink" title="七、Iso 聚类非监督分类（Iso Cluster Unsupervised Classification）"></a><strong>七、Iso 聚类非监督分类（Iso Cluster Unsupervised Classification）</strong></h1><p>此工具为脚本工具，此工具结合了 Iso 聚类工具与最大似然法分类工具的功能。输出经过分类的栅格。</p>
<h1 id="八、类别概率（Class-Probability）"><a href="#八、类别概率（Class-Probability）" class="headerlink" title="八、类别概率（Class Probability）"></a><strong>八、类别概率（Class Probability）</strong></h1><p>如果发现分类中的某些区域被分配给某一类的概率不是很高，则说明可能存在混合类。</p>
<p>例如，根据分类概率波段，一个已被分类为森林的区域属于森林类的概率只有 55%。您又发现同一区域属于草地类的概率却有 40%。显然，该区域既不属于森林类也不属于草地类。它更可能是一个森林草地混合类。对于使用分类概率工具生成的分类概率，最好检查分类结果。</p>
<p>生成的多波段栅格数据的波段数等于类别数，每个波段表示某种分类的可能概率，像元值从0至100。</p>
<h1 id="九、主成分分析（Principal-Components）"><a href="#九、主成分分析（Principal-Components）" class="headerlink" title="九、主成分分析（Principal Components）"></a><strong>九、主成分分析（Principal Components）</strong></h1><p>对一组栅格波段执行主成分分析 (PCA) 并生成单波段栅格作为输出。此工具生成的是波段数与指定的成分数相同的多波段栅格。</p>
<p>主成分分析工具用于将输入多元属性空间中的输入波段内的数据变换到相对于原始空间对轴进行旋转的新的多元属性空间。新空间中的轴（属性）互不相关。之所以在主成分分析中对数据进行变换，主要是希望通过消除冗余的方式来压缩数据。</p>
<p>以上提到的几个工具，在ArcGIS 10.x版本中，除了在ArcToolbox中可以找到，在 Image Classification 工具条中也可以找到对应的功能，如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAMultiDimensions_Toolbar.png" alt=""></p>
<p>这个工具集涉及很多遥感的理论知识，仅仅使用工具是不够的，后面需要多多学习…… </p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间分析之插值分析]]></title>
      <url>/2012/08/27/SAInterpolation/</url>
      <content type="html"><![CDATA[<p>在实际工作中，由于成本的限制、测量工作实施困难大等因素，我们不能对研究区域的每一位置都进行测量（如高程、降雨、化学物质浓度和噪声等级）。这时，我们可以考虑合理选取采样点，然后通过采样点的测量值，使用适当的数学模型，对区域所有位置进行预测，形成测量值表面。插值之所以可称为一种可行的方案，是因为我们假设，空间分布对象都是空间相关的，也就是说，彼此接近的对象往往具有相似的特征。</p>
<p>ArcGIS的空间分析中，提供了插值（Interpolation）工具集，如下：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAInterpolation_Toolset.png" alt=""></p>
<p><br></p>
<h1 id="1-反距离权重法（IDW–Inverse-Distance-Weighted）"><a href="#1-反距离权重法（IDW–Inverse-Distance-Weighted）" class="headerlink" title="1. 反距离权重法（IDW–Inverse Distance Weighted）"></a><strong>1. 反距离权重法（IDW–Inverse Distance Weighted）</strong></h1><p>此方法假定所映射的变量因受到与其采样位置间的距离的影响而减小。</p>
<p><strong>幂参数：</strong></p>
<p>IDW主要依赖于反距离的幂值。基于距输出点的距离，幂参数可以控制已知点对内插值的影响。幂参数是一个正实数，默认值为 2，一般在0.5至3之间取值。随着幂值的增大，内插值将逐渐接近最近采样点的值。指定较小的幂值，将对距离较远的周围点产生更大影响，会产生更加平滑的表面。由于反距离权重公式与任何实际物理过程都不关联，因此无法确定特定幂值是否过大。作为常规准则，认为值为 30 的幂是超大幂，因此不建议使用。此外还需牢记一点，如果距离或幂值较大，则可能生成错误结果。</p>
<p><strong>障碍：</strong></p>
<p>障碍是一个用作可限制输入采样点搜索的隔断线的折线 (polyline) 数据集。一条折线 (polyline) 可以表示地表中的悬崖、山脊或某种其他中断。仅将那些位于障碍同一侧的输入采样点视为当前待处理像元。</p>
<p><strong>注意事项：</strong></p>
<p>（1）因为反距离权重法是加权平均距离，所以该平均值不可能大于最大输入或小于最小输入。因此，如果尚未对这些极值采样，便无法创建山脊或山谷。</p>
<p>（2）此工具最多可处理约 4,500 万个输入点。如果输入要素类包含 4,500 万个以上的点，工具可能无法创建结果。</p>
<p>工具执行截图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAInterpolation_Demo.png" alt=""></p>
<h1 id="2-克里金法（Kriging）"><a href="#2-克里金法（Kriging）" class="headerlink" title="2. 克里金法（Kriging）"></a><strong>2. 克里金法（Kriging）</strong></h1><p>克里金法假定采样点之间的距离或方向可以反映可用于说明表面变化的空间相关性。克里金法是一个多步过程；它包括数据的探索性统计分析、变异函数建模和创建表面，还包括研究方差表面。该方法通常用在土壤科学和地质中。</p>
<h1 id="3-自然邻域法（Natural-Neighbor）"><a href="#3-自然邻域法（Natural-Neighbor）" class="headerlink" title="3. 自然邻域法（Natural Neighbor）"></a><strong>3. 自然邻域法（Natural Neighbor）</strong></h1><p>可找到距查询点最近的输入样本子集，并基于区域大小按比例对这些样本应用权重来进行插值。该插值也称为 Sibson 或“区域占用 (area-stealing)”插值。</p>
<h1 id="4-样条函数（Spline）"><a href="#4-样条函数（Spline）" class="headerlink" title="4. 样条函数（Spline）"></a><strong>4. 样条函数（Spline）</strong></h1><p>使用二维最小曲率样条法将点插值成栅格表面。生成的平滑表面恰好经过输入点。</p>
<h1 id="5-含障碍的样条函数（Spline-with-Barriers）"><a href="#5-含障碍的样条函数（Spline-with-Barriers）" class="headerlink" title="5. 含障碍的样条函数（Spline with Barriers）"></a><strong>5. 含障碍的样条函数（Spline with Barriers）</strong></h1><p>通过最小曲率样条法利用障碍将点插值成栅格表面。障碍以面要素或折线要素的形式输入。样条函数法工具所使用的插值方法使用可最小化整体表面曲率的数学函数来估计值。</p>
<h1 id="6-地形转栅格（Topo-to-Raster）"><a href="#6-地形转栅格（Topo-to-Raster）" class="headerlink" title="6. 地形转栅格（Topo to Raster）"></a><strong>6. 地形转栅格（Topo to Raster）</strong></h1><p>将点、线和面数据插值成符合真实地表的栅格表面。</p>
<p>依据文件实现地形转栅格（Topo to Raster by file）</p>
<p>通过文件中指定的参数将点、线和面数据插值成符合真实地表的栅格表面。通过这种技术创建的表面可更好的保留输入等值线数据中的山脊线和河流网络。</p>
<h1 id="7-趋势（trend）"><a href="#7-趋势（trend）" class="headerlink" title="7. 趋势（trend）"></a><strong>7. 趋势（trend）</strong></h1><p>使用趋势面法将点插值成栅格曲面。趋势表面会逐渐变化，并捕捉数据中的粗尺度模式。</p>
<p>以上是插值工具的简单说明与比较，这些工具的背后都有庞大的理论基础和复杂的算法，需要进一步学习整理和补充。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间分析之区域分析]]></title>
      <url>/2012/08/24/SAZonal/</url>
      <content type="html"><![CDATA[<p>空间分析扩展中，有关区域分析，提供了如下工具：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAZonal_Toolset.png" alt=""></p>
<p>可以将其分为这样几类：</p>
<h1 id="一、确定区域中类的面积的工具"><a href="#一、确定区域中类的面积的工具" class="headerlink" title="一、确定区域中类的面积的工具"></a><strong>一、确定区域中类的面积的工具</strong></h1><h2 id="面积制表（Tabulate-Area）"><a href="#面积制表（Tabulate-Area）" class="headerlink" title="面积制表（Tabulate Area）"></a><strong>面积制表（Tabulate Area）</strong></h2><p>面积制表工具以表的形式进行输出。在此表中：</p>
<p>1）区域数据集的每个唯一值均有一条记录。</p>
<p>2）类数据集的每个唯一值均有一个字段。</p>
<p>3）每个记录将存储每个区域内每个类的面积。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAZonal_TabulateArea.gif" alt=""></p>
<p><strong>TIPS：</strong></p>
<p>使用此工具的常见错误：</p>
<p>1.<strong>“一个或多个输入没有关联属性表</strong>” 错误</p>
<p>此错误通常是由于区域输入中没有所需的属性表而导致的。</p>
<p>如果区域输入是一个栅格数据，请先使用构建栅格属性表为其创建一个属性表。</p>
<p>如果区域输入是一个要素数据集，则在内部转换为栅格的过程中会自动创建属性表。</p>
<p>2.“<strong>无法分配内存</strong>” 错误</p>
<p>程序使用内部表执行面积计算。如果区域输入的值域非常大（百万级别），则处理这些表的内存需求可能会接近或超出指定的系统分页文件大小。</p>
<p>如果所配置的内存总量不足，操作将失败，并将显示“无法分配内存”消息。此问题通常有两种解决方法：</p>
<p>A） 您可增大虚拟内存设置以避免出现此错误。但是，要注意的是，工具执行完毕后，操作系统不会立即释放其所占用的虚拟内存。从而可能会降低计算机的总体性能。</p>
<p>B） 另一种方法是减小区域的值域（建议方法）。步骤如下：首先向区域属性表添加一个新项和一个索引值，然后对该项使用面积制表，最后再将结果与原始区域输入相关联。<br>例如，如有仅有三个区域值 2,120,000、4,070,000 和 9,540,000，则可将它们除以 10,000，从而得到区域值 212、407 和 954。</p>
<p>3.<strong>输出面积小于预计结果</strong></p>
<p>输出表中的某些面积值可能小于预计结果。</p>
<p>这通常与输入中的 NoData 像元有关，经重采样以匹配其他更为粗糙的输入之后，这些具有高分辨率的像元将变为更大的 NoData 区域。</p>
<p>为避免此情况，请对较粗糙的输入栅格进行重采样以使其与较精细的输入栅格的分辨率相匹配，或者将像元大小栅格分析环境设置为输入的最小值。</p>
<p><br></p>
<h1 id="二、填充指定区域的工具"><a href="#二、填充指定区域的工具" class="headerlink" title="二、填充指定区域的工具"></a><strong>二、填充指定区域的工具</strong></h1><h2 id="区域填充（Zonal-Fill-）"><a href="#区域填充（Zonal-Fill-）" class="headerlink" title="区域填充（Zonal Fill ）"></a><strong>区域填充（</strong>Zonal Fill <strong>）</strong></h2><p>输入区域栅格数据可以为整型或浮点型。使用权重栅格数据沿区域边界的最小像元值填充区域。</p>
<p>区域填充可用作水文分析的一部分，将洼地填充至分水岭边界的最小高程。</p>
<p>此工具有待实践，结合水文分析学习。</p>
<h1 id="三、作用于区域形状的工具"><a href="#三、作用于区域形状的工具" class="headerlink" title="三、作用于区域形状的工具"></a><strong>三、作用于区域形状的工具</strong></h1><h2 id="分区几何统计（Zonal-Geometry）"><a href="#分区几何统计（Zonal-Geometry）" class="headerlink" title="分区几何统计（Zonal Geometry）"></a><strong>分区几何统计（Zonal Geometry）</strong></h2><p>这里说的区域是指具有相同值的所有像元。各区无需相连。栅格和要素数据集都可用于工具的输入。</p>
<p>这个工具的亮点在于可以统计区的<strong>总面积（AREA）、总周长（PERIMETER）、厚度（THICKNESS）、质心（CENTROID）</strong>。其他三个比较好理解，我们看下厚度的概念。</p>
<p>分区厚度分析可计算输入栅格上各个区域中最深或最厚点距其周围像元的距离。</p>
<p>实际上，厚度就是可在各个区域中（不包括区域外部的任何像元）绘制的最大圆的半径（以像元为单位）。如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAZonal_ZonalGeometry.png" alt="">  </p>
<h2 id="以表格显示分区几何统计（Zonal-Geometry-as-Table）"><a href="#以表格显示分区几何统计（Zonal-Geometry-as-Table）" class="headerlink" title="以表格显示分区几何统计（Zonal Geometry as Table）"></a><strong>以表格显示分区几何统计（Zonal Geometry as Table）</strong></h2><p>将上述统计结果输出到Table表中。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAZonal_ZonalGeometryasTable.png" alt=""></p>
<p>其中，最后三个参数，用于描述各个区域的椭圆近似的形状。定义椭圆形状和大小的参数为长轴、短轴和方向。各椭圆的面积与为其分配的区域的面积相等。</p>
<p>MAJORAXIS：长轴的长度；MINORAXIS：短轴的长度。以地图单位表示。</p>
<p>ORIENTATION 值的单位为度，取值范围为 0 至 180。方向定义为 x 轴与椭圆长轴之间的角度。方向的角度值以逆时针方向增加，起始于东方向（右侧水平位置）的 0 值，在长轴垂直时通过 90 位置。如果某个特定区域仅由一个像元组成，或者该区域为单个像元方块，那么会将椭圆（在此情况下为圆）的方向设置为 90 度。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAZonal_Orientation.png" alt=""></p>
<h1 id="四、确定某输入栅格值在另一区域中的频数分布的工具"><a href="#四、确定某输入栅格值在另一区域中的频数分布的工具" class="headerlink" title="四、确定某输入栅格值在另一区域中的频数分布的工具"></a><strong>四、确定某输入栅格值在另一区域中的频数分布的工具</strong></h1><h2 id="区域直方图（Zonal-Histogram）"><a href="#区域直方图（Zonal-Histogram）" class="headerlink" title="区域直方图（Zonal Histogram）"></a><strong>区域直方图（Zonal Histogram）</strong></h2><p>创建显示各唯一区域值输入中的像元值频数分布的表和直方图（Graph类型）。</p>
<p>区域字段必须为整型或字符串类型。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAZonal_Histograms.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/SAZonal_ZonalHistogram.png" alt=""></p>
<h1 id="五、作用于区域属性的工具"><a href="#五、作用于区域属性的工具" class="headerlink" title="五、作用于区域属性的工具"></a><strong>五、作用于区域属性的工具</strong></h1><h2 id="分区统计（Zonal-Statistics）"><a href="#分区统计（Zonal-Statistics）" class="headerlink" title="分区统计（Zonal Statistics）"></a><strong>分区统计（Zonal Statistics）</strong></h2><p><strong>以表格显示分区统计（**</strong>Zonal Statistics as Table<strong>**）</strong></p>
<p>这两个工具是，计算在另一个数据集的区域内栅格数据值的统计信息。这里的区域定义为输入中具有相同值的所有区。各区无需相连。栅格和要素数据集都可用于区域输入。</p>
<p>前者生成栅格数据，后者生成统计表。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAZonal_ZonalStatistics.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/SAZonal_ZonalStatistics2.png" alt=""></p>
<p><br></p>
<p>OK……</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间分析之邻域分析]]></title>
      <url>/2012/08/23/SAProximity/</url>
      <content type="html"><![CDATA[<p>ArcGIS 的空间分析扩展中，提供了这样一组邻域分析工具：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAProximity_Toolset.png" alt=""></p>
<p><br></p>
<h1 id="1-块统计（Block-Statistics）"><a href="#1-块统计（Block-Statistics）" class="headerlink" title="1. 块统计（Block Statistics）"></a><strong>1. 块统计（Block Statistics）</strong></h1><p>分块统计，按照指定邻域类型计算区域统计值，输出区域为指定邻域类型的外接矩形。</p>
<p>以下为邻域的形式：</p>
<ul>
<li>Nbr<strong>Annulus</strong>({innerRadius}, {outerRadius}, {CELL | MAP})</li>
<li>Nbr<strong>Circle</strong>({radius}, {CELL | MAP}</li>
<li>Nbr<strong>Rectangle</strong>({width}, {height}, {CELL | MAP})</li>
<li>Nbr<strong>Wedge</strong>({radius}, {start_angle}, {end_angle}, {CELL | MAP})</li>
<li>Nbr<strong>Irregular</strong>(kernel_file)</li>
<li>Nbr<strong>Weight</strong>(kernel_file)</li>
</ul>
<p>Irregular与Weight邻域类型需要指定核文件（ .txt 文件）。</p>
<p>可以进行统计的计算类型：</p>
<ul>
<li><strong>MEAN</strong>/平均值；</li>
<li><strong>MAJORITY</strong>/众数（出现次数最多的值）；</li>
<li><strong>MAXIMUM</strong>/最大值；</li>
<li><strong>MEDIAN</strong>/中值；</li>
<li><strong>MINIMUM</strong>/最小值；</li>
<li><strong>MINORITY</strong>/少数（出现次数最少的值）；</li>
<li><strong>RANGE</strong>/范围（最大值和最小值之差）。</li>
<li><strong>STD</strong>/标准差。</li>
<li><strong>SUM</strong>/总和。</li>
<li><strong>VARIETY</strong>/变异度（唯一值的数量）。</li>
</ul>
<p>例如，输入为圆形邻域，输出为外接矩形的像元范围：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAProximity_Radias.png" alt=""></p>
<h1 id="2-滤波器（Filter）"><a href="#2-滤波器（Filter）" class="headerlink" title="2. 滤波器（Filter）"></a><strong>2. 滤波器（Filter）</strong></h1><p>对栅格执行平滑（低通）滤波器或边缘增强（高通）滤波器。</p>
<p>滤波器工具既可用于消除不必要的数据，也可用于增强数据中不明显的要素的显示。</p>
<p>低通滤波（平滑边界）：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAProximity_Low.png" alt="">   </p>
<p>高通滤波（边缘增强）：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAProximity_High.png" alt="">   </p>
<h1 id="3-焦点流（Focal-Flow）"><a href="#3-焦点流（Focal-Flow）" class="headerlink" title="3. 焦点流（Focal Flow）"></a><strong>3. 焦点流（Focal Flow）</strong></h1><p>焦点流工具使用直接的 3 x 3 邻域来确定一个像元的八个相邻点中哪一个流向此像元。</p>
<p>焦点流也可以是液体由高到低流动的方向，也可以是定义的任何移动（比如污染物向污染浓度较低的地方流入）。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAProximity_FocalFlow1.gif" alt=""></p>
<p>举个例子，各个方向流向像元中心像元的值总和是最终值。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAProximity_FocalFlow2.gif" alt=""></p>
<h1 id="4-焦点统计（Focal-Statistics）"><a href="#4-焦点统计（Focal-Statistics）" class="headerlink" title="4. 焦点统计（Focal Statistics）"></a><strong>4. 焦点统计（Focal Statistics）</strong></h1><p>为每个输入像元位置计算其周围指定邻域内的值的统计数据。</p>
<p>统计类型与邻域形状与块统计是相同的，区别在于，块统计的输出是整个邻域的外接矩形范围，而焦点统计的输出，是邻域内的焦点栅格。如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAProximity_FocalStatistics.png" alt=""></p>
<h1 id="5-线统计"><a href="#5-线统计" class="headerlink" title="5. 线统计"></a><strong>5. 线统计</strong></h1><p>工具用于为每个输出栅格像元周围的圆形邻域内所有线的指定字段值计算统计量。</p>
<p>可用的统计量类型有：均值、众数、最大值、中位数、最小值、少数、范围、标准差以及变异度。只有众数、少数和中位数统计量是根据线长度进行加权的。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAProximity_LineStatistics.png" alt=""></p>
<p>还没有想到此工具的应用场景，以后有了再来追加。</p>
<h1 id="6-点统计"><a href="#6-点统计" class="headerlink" title="6. 点统计"></a><strong>6. 点统计</strong></h1><p>该工具类似于焦点统计工具，不同之处在于它直接对点要素而非栅格进行操作。直接对要素进行操作的其中一个优点在于，即使点距离过近，在转换成栅格时点也不会丢失。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间分析之表面分析]]></title>
      <url>/2012/08/20/SASurface/</url>
      <content type="html"><![CDATA[<p>我们可以利用“表面分析（Surface）”工具量化及可视化地形地貌。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Toolset.png" alt=""></p>
<p><strong>坡向（Aspect）：</strong>获得栅格表面的坡向。求得每个像元到其相邻像元方向像元值的变化率最大的下坡方向。</p>
<p><strong>等值线（Contour）：</strong>根据栅格表面创建等值线（等值线图）的线要素类。</p>
<p><strong>等值线序列（Contour List）：</strong>根据栅格表面创建所选等值线值的要素类。</p>
<p><strong>含障碍的等值线（Contour with Barriers）：</strong>根据栅格表面创建等值线。如果包含障碍要素，则允许在障碍两侧独立生成等值线。</p>
<p><strong>曲率（Curvature）：</strong>计算栅格表面的曲率，包括剖面曲率和平面曲率。</p>
<p><strong>填挖方（Cut Fill）：</strong>计算两表面间体积的变化。通常用于执行填挖操作。</p>
<p><strong>山体阴影（HillShade）：</strong>通过考虑照明源的角度和阴影，根据表面栅格创建地貌晕渲。</p>
<p><strong>视点分析（Observer Point）：</strong>识别从各栅格表面位置进行观察时可见的观察点。</p>
<p><strong>坡度（Slope）：</strong>判断栅格表面的各像元中的坡度（梯度或 z 值的最大变化率）。</p>
<p><strong>视域（Viewshed）：</strong>确定对一组观察点要素可见的栅格表面位置。</p>
<p>下面分类来看一下这些工具：</p>
<h1 id="一、-各种等值线工具"><a href="#一、-各种等值线工具" class="headerlink" title="一、 各种等值线工具"></a><strong>一、 各种等值线工具</strong></h1><p><strong>1） 等值线（Contour）</strong></p>
<p>根据栅格表面数据创建等值线线要素类。可以指定起算线和间隔。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Contour.png" alt=""></p>
<p><strong>2） 等值线列表（Contour list）</strong></p>
<p>根据栅格表面创建所指定等值线值的要素类。</p>
<p><strong>3）含障碍的等值线（Contour with Barriers）</strong></p>
<p>根据栅格表面创建等值线。如果包含障碍要素，则允许在障碍两侧独立生成等值线。</p>
<p><strong>TIPS： 关于等值线的质量问题</strong></p>
<p>少数情况下，所创建等值线的轮廓可能会呈方形或不均匀，看起来犹如沿着栅格像元的边界。出现这种情况可能是因为各栅格的值为整数且恰好落在等值线上。这并不是个问题，该等值线不过是原样呈现数据而已。</p>
<p>如果希望等值线更平滑，可行的方法包括对源数据进行平滑处理或调整起始等值线。</p>
<h1 id="二、表面特征相关工具"><a href="#二、表面特征相关工具" class="headerlink" title="二、表面特征相关工具"></a><strong>二、表面特征相关工具</strong></h1><p><strong>1） 坡向（Aspect）</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Aspect.png" alt=""></p>
<p>此工具求得每个像元到其相邻的各个像元方向的 z 值上变化率最大的下坡方向。</p>
<p>从概念上讲，坡向工具将根据要处理的像元或中心像元周围一个 3 x 3 的像元邻域的 z 值拟合出一个平面。该平面的朝向就是待处理像元的坡向。</p>
<p>输出栅格的值将是坡向的罗盘方向。坡向由 0 到 359.9 度之间的正度数表示，以北为基准方向按顺时针进行测量。会为输入栅格中的平坦（具有零坡度）像元分配 -1 坡向。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Aspect2.png" alt=""></p>
<p><strong>2） 坡度（Slope）</strong></p>
<p>坡度是指各像元中 z 值的最大变化率。</p>
<p>从概念上讲，该工具会将一个平面与要处理的像元或中心像元周围一个 3 x 3 的像元邻域的 z 值进行拟合。该平面的坡度值通过最大平均值法来计算。</p>
<p>如果邻域内某个像元位置的 z 值为 NoData，则将中心像元的 z 值指定给该位置。如果直接邻域（3 x 3 窗口）中的中心像元为 NoData，则输出将为 NoData。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Slope.gif" alt=""></p>
<p>确定输出坡度数据的测量单位（度或百分比）。</p>
<ul>
<li>DEGREE — 坡度倾角，单位：度，范围：0 ~ 90。</li>
<li>PERCENT_RISE — 高程增量百分比，也称为百分比坡度，范围：0 ~ ∞。</li>
</ul>
<p>该工具可与其他类型的连续数据（如人口）配合使用，用来识别值的急剧变化。</p>
<p>关于工具的详细算法：<a href="http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/009z000000vz000000/" target="_blank" rel="noopener">http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/009z000000vz000000/</a></p>
<p><strong>3） 曲率（Curvature）</strong></p>
<p>主要输出结果为每个像元的表面曲率。曲率是表面的二阶导数，或者可称之为坡度的坡度。曲率为正说明该像元的表面向上凸。曲率为负说明该像元的表面开口朝上凹入。值为 0 说明表面是平的。</p>
<p>可供选择的输出曲率类型为：剖面曲率（沿最大斜率的坡度）和平面曲率（垂直于最大坡度的方向）。</p>
<p>从应用的角度看，该工具的输出可用于描述流域盆地的物理特征，从而便于理解侵蚀过程和径流形成过程。坡度会影响下坡时的总体移动速率。坡向将决定流向。剖面曲率将影响流动的加速和减速，进而将影响到侵蚀和沉积。平面曲率会影响流动的汇聚和分散。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Curvature.gif" alt=""></p>
<h1 id="三、-填挖方（Cut-Fill）"><a href="#三、-填挖方（Cut-Fill）" class="headerlink" title="三、 填挖方（Cut Fill）"></a><strong>三、 填挖方（Cut Fill）</strong></h1><p>计算两表面间体积的变化。通常用于执行填挖操作。</p>
<p>默认情况下，将使用专用渲染器来高亮显示执行填挖操作的位置。该渲染器将被挖的区域绘制成蓝色，将被填的区域绘制成红色。没有变化的区域将显示为灰色。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_CutFill.png" alt="">  </p>
<h1 id="四、山影（Hillshade）"><a href="#四、山影（Hillshade）" class="headerlink" title="四、山影（Hillshade）"></a><strong>四、山影（Hillshade）</strong></h1><p><img src="http://kikitamap.com/images/blogImg/SASurface_Hillshade.gif" alt=""></p>
<p>此工具考虑的主要因素是太阳（照明源）在天空中的位置。看下此工具的参数设置：</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_HillshadeTool.png" alt=""></p>
<p><strong>方位角（Azimuth）</strong>指的是太阳的角度方向，是以北为基准方向在 0 到 360 度范围内按顺时针进行测量的。90º 的方位角为东。此工具默认方向角为 315º (NW)。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Azimuth.gif" alt=""></p>
<p><strong>高度（Altitude）</strong>指的是太阳高出地平线的角度或坡度。高度的单位为度，范围为 0（位于地平线上）到 90（位于头上）之间。此工具默认值为 45 度。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Altitude.gif" alt=""></p>
<p><strong>Model shadows</strong></p>
<p>通过对选择 Model shadows，可计算局部照明度以及像元是否落入阴影内。阴影值为0，所有其他像元的编码为介于 1 和 255 之间的整数。</p>
<p><strong>Z 因子（Z factor）</strong></p>
<p>z 单位与输入表面的 x,y 单位不同时，可使用 z 因子调整 z 单位的测量单位。计算最终输出表面时，将用 z 因子乘以输入表面的 z 值。</p>
<p>如果 x,y 单位和 z 单位采用相同的测量单位；则 z 因子为 1。这是默认值。此外，z 因子还可用于地形夸大。</p>
<p>例如，如果 z 单位是英尺而 x,y 单位是米，则应使用 z 因子 0.3048 将 z 单位从英尺转换为米（1 英尺 = 0.3048 米）</p>
<p>关于工具的详细算法：<a href="http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/009z000000z2000000/" target="_blank" rel="noopener">http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/009z000000z2000000/</a></p>
<h1 id="五、可见性分析"><a href="#五、可见性分析" class="headerlink" title="五、可见性分析"></a><strong>五、可见性分析</strong></h1><p><strong>1） 视点分析</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_ViewPoint.png" alt=""></p>
<p>视点工具生成的是在观测点处能够看到哪些位置的像元的二进制编码信息。观察点被限制为最多16 个。此工具仅支持点要素输入。</p>
<p>可见性信息存储在 VALUE 项中。如果要显示通过视点 3 能看到的所有栅格区域，就打开输出栅格属性表，然后选择视点 3 (OBS3) 等于 1 而其他所有视点等于 0 的记录。</p>
<p>例如，如下是7个观测点的可视性分析结果的属性表：</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_MultiViewPoints.png" alt=""></p>
<p><strong>2） 视域</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Viewshed.png" alt=""></p>
<p>视域工具会创建一个栅格数据，以记录可从输入<strong>视点</strong>或 <strong>视点折线要素</strong>位置看到每个区域的次数。该值记录在输出栅格表的 VALUE 项中。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_ViewshedTable.png" alt=""></p>
<p><strong>TIPS：控制可见性分析</strong></p>
<p>通过在要素属性数据集中指定不同的项，可限制所检查的栅格区域。共有九项：SPOT、OFFSETA、OFFSETB、AZIMUTH1、AZIMUTH2、VERT1、VERT2、RADIUS1 和 RADIUS2。</p>
<p>附图帮助理解：</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_Paras.png" alt=""></p>
<p>这些值的默认值：</p>
<table>
<thead>
<tr>
<th><strong>选项</strong></th>
<th><strong>默认值</strong></th>
<th><strong>参数意义</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>SPOT</td>
<td>使用双线性插值进行估计</td>
<td>观测点位置的高程</td>
</tr>
<tr>
<td>OFFSETA</td>
<td>1</td>
<td>观测点高（例如，仪器高），必须为正数</td>
</tr>
<tr>
<td>OFFSETB</td>
<td>0</td>
<td>各像元高(例如，目标高），必须为正数</td>
</tr>
<tr>
<td>AZIMUTH1</td>
<td>0</td>
<td>观测起始方位角</td>
</tr>
<tr>
<td>AZIMUTH2</td>
<td>360</td>
<td>观测终止方位角</td>
</tr>
<tr>
<td>VERT1</td>
<td>90</td>
<td>观测起始竖直角</td>
</tr>
<tr>
<td>VERT2</td>
<td>-90</td>
<td>观测终止竖直角</td>
</tr>
<tr>
<td>RADIUS1</td>
<td>0</td>
<td>起始可见半径</td>
</tr>
<tr>
<td>RADIUS2</td>
<td>无穷大</td>
<td>终止可见半径</td>
</tr>
</tbody>
</table>
<p>如果视点要素数据集是点要素类，则每个观测点都可具有属性表中的唯一一组观测约束。如果视点要素数据集是折线要素类，则沿输入折线的每个折点都会使用属性表的折线记录中包含的相同观测约束。如果某项不存在，将使用默认值。</p>
<p><img src="http://kikitamap.com/images/blogImg/SASurface_ParaGraph.gif" alt=""></p>
<p>O了，关于表面分析的工具，总结到此结束。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间分析之常用工具]]></title>
      <url>/2012/08/19/SAGeneral/</url>
      <content type="html"><![CDATA[<p>空间分析扩展模块中提供了很多方便栅格处理的工具，其中提取（Extraction）、综合（Generalization）等工具集中提供的功能是在分析处理数据中经常会用到的。</p>
<h1 id="一、提取（Extraction）"><a href="#一、提取（Extraction）" class="headerlink" title="一、提取（Extraction）"></a><strong>一、提取（Extraction）</strong></h1><p>顾名思义，这组工具就是方便我们将栅格数据按照某种条件来筛选提取。</p>
<p>工具集中提供了如下工具：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAGeneral_Toolset.png" alt=""></p>
<p><strong>Extract by Attribute：</strong>按属性提取，按照SQL表达式筛选像元值。</p>
<p><strong>Extract by Circle：</strong>按圆形提取，定义圆心和半径，按圆形提取栅格。</p>
<p><strong>Extract by Mask：</strong>按掩膜提取，按指定的栅格数据或者矢量数据的形状的提取像元。</p>
<p><strong>Extract by Point：</strong>按点提取，按给定坐标值列表进行提取。</p>
<p><strong>Extract by Polygon：</strong>按多边形提取，按给定坐标序列作为节点的多边形进行提取。</p>
<p><strong>Extract by Rectangle：</strong>按矩形提取，按给定的图层的Extent，或者定义了四至的矩形进行提取。</p>
<p><strong>Extract Value to Point ：</strong>按照点要素的位置提取对应的（一个/多个）栅格数据的像元值，其中，提取的Value可以使用像元中心值或者选择进行双线性插值提取。</p>
<p><strong>Extract Multi Value to Point：</strong>同上，只是提取多个栅格的像元值。</p>
<p><strong>Sample：</strong>采样，根据给定的栅格或者矢量数据的位置提取像元值，采样方法可选：最邻近分配法（Nearest）、双线性插值法（Bilinear）、三次卷积插值法（Cubic）。</p>
<p>以上工具用来提取栅格中的有效值、兴趣区域\点等很有用的。</p>
<h1 id="二、综合（Generalization）"><a href="#二、综合（Generalization）" class="headerlink" title="二、综合（Generalization）"></a><strong>二、综合（Generalization）</strong></h1><p>这组工具主要用来清理栅格数据，可以大致分为三个方面的功能：<strong>更改数据的分辨率、对区域进行概化、对区域边缘进行平滑</strong>。</p>
<p>这些工具的输入都要求为整型栅格。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAGeneral_GToolset.png" alt=""></p>
<p><strong>1. 更改数据分辨率：</strong></p>
<p><strong>Aggregate： </strong>聚合，生成降低分辨率的栅格。</p>
<p>其中，Cell Factor需要是一个大于1的整数，表示生成栅格的像元大小是原来的几倍。</p>
<p>生成新栅格的像元值可选：新的大像元所覆盖的输入像元的总和值、最小值、最大值、平均值、中间值。</p>
<p>效果如下，Cell factor设置为 6：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAGeneral_Aggregate.png" alt="">  ==&gt;  <img src="http://kikitamap.com/images/blogImg/SAGeneral_Aggregate2.png" alt=""></p>
<p><strong>2. 对区域进行概化：</strong></p>
<p><strong>Expand：</strong>扩展，按指定的像元数目扩展指定的栅格区域。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAGeneral_Expand.png" alt=""> ==&gt; <img src="http://kikitamap.com/images/blogImg/SAGeneral_Expand2.png" alt=""></p>
<p><strong>Shrink：</strong> 收缩，按指定像元数目收缩所选区域，方法是用邻域中出现最频繁的像元值替换该区域的值。同Expand。</p>
<p><strong>Nibble：</strong>用最邻近点的值替换掩膜范围内的栅格像元的值。</p>
<p><strong>Thin：</strong>细化，通过减少表示要素宽度的像元数来对栅格化的线状对象进行细化。</p>
<p><strong>Region Group：</strong>区域合并，记录输出中每个像元所属的连接区域的标识。每个区域都将被分配给唯一编号。</p>
<p>工作原理：扫描的第一个区域接收值 1，第二个区域接收值 2，依此类推，直到所有区域都已赋值。扫描将按从左至右、从上至下的顺序进行。被赋予输出区域的值取决于系统在扫描过程中是在什么时候遇到它们的。</p>
<p>其中，添加链接选项为“真”时。这将在输出栅格的属性表中创建名为 LINK 的项，其保留输入栅格的每个像元的原始值。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAGeneral_RegionGroup1.png" alt=""></p>
<p>如下图，原始数据具有相同值的区域有的并不连通，这时会新生成很多Region：</p>
<p><img src="http://kikitamap.com/images/blogImg/SAGeneral_RegionGroup2.png" alt=""> ==&gt; <img src="http://kikitamap.com/images/blogImg/SAGeneral_RegionGroup3.png" alt=""></p>
<p><strong>3. 对区域边缘进行平滑：</strong></p>
<p><strong>Boundary Clean：</strong>边界清理，通过扩展和收缩来平滑区域间的边界。该工具会去更改X或Y方向上所有少于三个像元的位置。</p>
<p><strong>Majority Filter：</strong>众数滤波，根据相邻像元数据值的众数替换栅格中的像元。可以认为是“少数服从多数”，太突兀的像元被周围的大部队干掉了。其中“大部队”的参数可设置，相邻像元可以4邻域或者8邻域，众数可选，需要大部分（3/4、5/8）还是过半数即可。</p>
<p><strong>TIPS： 这两个工具仅支持整形栅格输入。</strong></p>
<p>看如下示例，清理后，还是有明显变化的，细碎像元已经被处理掉了。</p>
<p><img src="http://kikitamap.com/images/blogImg/SAGeneral_Majority.png" alt=""><br><img src="http://kikitamap.com/images/blogImg/SAGeneral_Majority2.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间分析之距离分析]]></title>
      <url>/2012/08/10/SADistance/</url>
      <content type="html"><![CDATA[<p>继续总结下距离分析。如下是ArcGIS 10.x中，距离分析相关的工具：</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_Toolset.png" alt=""></p>
<p>ArcGIS中，主要可以通过如下的几种方式进行距离分析：</p>
<ul>
<li>1） 欧氏距离分析</li>
<li>2） 成本加权距离分析</li>
<li>3） 用于垂直移动限制和水平移动限制的成本加权距离分析</li>
<li>4） 获取最短路径</li>
</ul>
<p>使用ArcGIS空间分析扩展实现距离分析，最主要的是欧氏距离分析和成本加权距离分析两类工具。</p>
<h1 id="一、欧氏距离工具"><a href="#一、欧氏距离工具" class="headerlink" title="一、欧氏距离工具"></a><strong>一、欧氏距离工具</strong></h1><p>欧氏距离工具测量每个像元距离最近源的<strong>直线</strong>距离（像元中心至像元中心的距离）。</p>
<p><strong>欧氏距离（Euclidean Diatance）</strong>——  求得每个像元至最近源的距离。</p>
<p><strong>欧氏方向（Euclidean Direction）</strong>——  求得每个像元至最近源的方向。</p>
<p><strong>欧氏分配（Euclidean Allocation）</strong>——  求得每个像元的最近的源。</p>
<p><strong>TIPS：</strong></p>
<p><strong>1.源（Source）</strong></p>
<p>可以是感兴趣的地物的位置，数据方面，既可以是栅格数据，也可以是矢量数据。但注意：如果数据选用了栅格数据，数据中必须仅包含表示源的像元，其他像元需要是Nodata。如果选用矢量，在执行工具之时，内部会将其先转成栅格。</p>
<p><strong>2.欧氏距离的算法</strong></p>
<p>简单理解为：工具会求得每个像元至每个源的距离，然后取得每个像元至每个源的最短距离以输出。其中，欧氏距离是像元中心与源像元的中心的直线距离。</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_Distance.gif" alt=""></p>
<p>如果像元与两个或更多源之间的距离相等，则计算都基于像元扫描过程中遇到的第一个源。无法控制该扫描过程。</p>
<p>帮助中有这样的描述：</p>
<blockquote>
<p>工具在实际执行的过程中，进行两次顺序扫描。这样，工具的执行速度与源像元的数目、分布以及最大距离无关。影响工具执行速度的唯一因素是栅格的大小。计算时间与“分析”窗口中的像元数成线性比例。暂且不知道进行了什么样的两次顺序扫描。</p>
</blockquote>
<p><strong>3.欧氏距离输出栅格结果</strong></p>
<p>投影平面上，像元与最近源之间的最短直线距离。如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_EucDistance.png" alt=""></p>
<p><strong>4.欧氏方向输出栅格结果</strong></p>
<p>像元与最近源之间的方位角方向（以度为单位）。使用 360 度圆，刻度 360 指北，90指东，从刻度 1 顺时针增加。值 0 供源像元使用。如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_EucDirection.png" alt=""></p>
<p>5.欧氏分配输出栅格结果</p>
<p>输出的每个像元都是距其最近源的值。如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_EucAllocation.png" alt=""></p>
<h1 id="二、成本加权距离工具"><a href="#二、成本加权距离工具" class="headerlink" title="二、成本加权距离工具"></a><strong>二、成本加权距离工具</strong></h1><p>成本加权距离工具可以看成是对欧氏直线距离的进一步修改，将经过某个像元的距离赋以成本因素。举个简单的例子，翻过一座山到达目的地是最短的直线距离，绕行这座山距离较长，但是更节省时间和体力，那就后者的成本加权距离最短了。</p>
<p>1）<strong>成本距离（Cost Distance）</strong>：求得每个像元至最近源的成本距离。<br>2）<strong>成本回溯链接（Cost back link）</strong>：求的一个方向栅格，可以从任意像元沿最小成本路径返回最近源。<br>3）<strong>成本分配（Cost Allocation）</strong>：求得每个像元的最近的源。<br>4）<strong>成本路径（Cost Patch）</strong>：求的任意像元到最近源的最小成本路径。</p>
<p><strong>TIPS：</strong></p>
<ul>
<li>成本栅格可以是整形或者浮点型，但是其值中不能含有负值或者0。成本栅格中的Nodata视为障碍。</li>
<li>成本距离输出栅格数据<br>这里的简单示例中，下面一层黑白渲染的是成本栅格，颜色深的像元代表成本比较高，反之较低。结果如下：<br><img src="http://kikitamap.com/images/blogImg/SADistance_CostDistance.png" alt=""></li>
<li>成本距离回溯链接<br>要注意的是，它并不会求的要返回哪一个源像元以及如何返回。而是记录从任意像元回溯到最近源的路径上，每个像元向下一个像元指向的方向，这个方向以0-8的代码形式记录。如下图：<br><img src="http://kikitamap.com/images/blogImg/SADistance_CostBacklink1.png" alt=""><br><img src="http://kikitamap.com/images/blogImg/SADistance_CostBacklink2.png" alt=""></li>
<li>成本距离分配<br>这个类似于前面的欧氏距离分配，得到的是每个像元至最近源的成本距离。<br><img src="http://kikitamap.com/images/blogImg/SADistance_CostAllocation.png" alt=""></li>
</ul>
<h1 id="三、路径距离工具"><a href="#三、路径距离工具" class="headerlink" title="三、路径距离工具"></a><strong>三、路径距离工具</strong></h1><p>路径距离工具与成本距离相似，也可以确定从某个源到栅格上各像元位置的最小累积行程成本。但是，路径距离不仅可计算成本表面的累积成本，而且会考虑到行驶的实际曲面距离，和影响到移动总成本的水平和垂直因子。主要包含这几个工具</p>
<p>1）<strong>路径距离（Path Distance）</strong><br>2）<strong>路径回溯链接（Path back link）</strong><br>3）<strong>路径分配（Path Allocation）</strong></p>
<p>这些工具生成的累积成本表面可用于扩散模型、流动和最低成本路径分析。</p>
<p>有关水平方向以及竖直方向的因子是如何影响的，工作原理是什么，ArcGIS帮助中有详细的解释：</p>
<p><a href="http://resources.arcgis.com/en/help/main/10.1/#/How_the_horizontal_and_vertical_factors_affect_path_distance/009z000000z9000000/" target="_blank" rel="noopener">http://resources.arcgis.com/en/help/main/10.1/#/How_the_horizontal_and_vertical_factors_affect_path_distance/009z000000z9000000/</a></p>
<h1 id="四、-获得最短路径"><a href="#四、-获得最短路径" class="headerlink" title="四、 获得最短路径"></a><strong>四、 获得最短路径</strong></h1><p>1.成本距离路径</p>
<p>任意像元到最近源的最小成本路径，需要引用到上面工具中生成的成本距离和成本回溯链接栅格数据。如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_ShortestPath.png" alt=""></p>
<p>2.廊道</p>
<p>另外要说的是廊道分析工具（Corridor）。此工具用于计算两个成本栅格的累积成本栅格结果，为了求得从一个源到另一个源且经过该像元位置的最小成本路径。</p>
<p>输出栅格不是单个最小成本路径，但会得到源之间累积成本的范围。</p>
<p>最后我们可以配合其他工具将小于某一阈值的结果提取出来，例如工具Extract by Attribute提取，或者通过Con进行条件赋值等等方法，获取结果。</p>
<p>如下如所示：</p>
<p>学校A、B成本距离分析结果：</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_CostAB.png" alt=""></p>
<p>学校C、D、E的成本距离分析结果：</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_CostCDE.png" alt=""></p>
<p>有此两个距离成本结果，来分析得到A、B到C、D、E之间的廊道，也就是两组源之间的最小累积成本距离。</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_Corridor.png" alt=""></p>
<p>然后结果中我们可以按照一定的阈值来提取结果。例如累积成本在75以下的我才能接受：</p>
<p><img src="http://kikitamap.com/images/blogImg/SADistance_Corridor2.png" alt=""></p>
<p>至此，空间分析中的距离分析工具总结结束。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[空间分析之密度分析]]></title>
      <url>/2012/08/06/SADensity/</url>
      <content type="html"><![CDATA[<h1 id="一、WHY-DENSITY-？"><a href="#一、WHY-DENSITY-？" class="headerlink" title="一、WHY DENSITY ？"></a>一、WHY DENSITY ？</h1><p>通过密度分析，我们可以讲测量的来的点或者线生成连续表面，从而可以找出那些地方点或者线比较集中。也就是，密度分析是根据输入要素数据计算整个区域的数据聚集状况。</p>
<p>密度分析是通过离散点数据或者线数据进行内插的过程，根据插值原理不同，主要是分为核密度分析和普通的点\线密度分析。核密度分心中，落入搜索区的点具有不同的权重，靠近搜索中心的点或线会被赋予较大的权重，反之，权重较小，它的计算结果分布较平滑。在普通的点\线密度分析中，落在搜索区域内的点或线有相同的权重，先对其求和，再除以搜索区域的大小，从而得到每个点的密度值。</p>
<p><img src="http://kikitamap.com/images/blogImg/SADensity_Demo.png" alt=""></p>
<h1 id="二、HOWTO-DENSITY-？"><a href="#二、HOWTO-DENSITY-？" class="headerlink" title="二、HOWTO DENSITY ？"></a><strong>二、HOWTO DENSITY ？</strong></h1><p>ArcGIS 的空间分析工具箱中提供了密度分析工具集中的三个工具：</p>
<p><img src="http://kikitamap.com/images/blogImg/SADensity_Tool.png" alt=""></p>
<h2 id="1-Kernel-Density（核密度分析）"><a href="#1-Kernel-Density（核密度分析）" class="headerlink" title="1. Kernel Density（核密度分析）"></a><strong>1. Kernel Density（核密度分析）</strong></h2><p><img src="http://kikitamap.com/images/blogImg/SADensity_Tool2.png" alt=""></p>
<p>输入值可以是点或者线。</p>
<p>工作原理引自帮助：</p>
<blockquote>
<p>概念上，每个点/线上方均覆盖着一个平滑曲面。在点/线所在位置处表面值最高，随着与点的距离的增大表面值逐渐减小，在与点/线的距离等于搜索半径的位置处表面值为零。仅允许使用圆形邻域。曲面与下方的平面所围成的空间的体积等于此点的 Population 字段值，如果将此字段值指定为 NONE 则体积为 1。每个输出栅格像元的密度均为叠加在栅格像元中心的所有核表面的值之和。核函数以 Silverman 的著作（1986 年版，第 76 页，方程 4.5）中描述的二次核函数为基础。</p>
</blockquote>
<p>对于点，如果 population 字段设置使用的是除 NONE 之外的值，则每项的值用于确定点被计数的次数。例如，值 3 会导致点被算作三个点。值可以为整型也可以为浮点型。</p>
<p>对于线，如果 population 字段使用的是除 NONE 之外的值，则线的长度将由线的实际长度乘以此线的 population 字段的值而得出。</p>
<h2 id="2-Point-Density-Line-Density（点、线密度分析）："><a href="#2-Point-Density-Line-Density（点、线密度分析）：" class="headerlink" title="2. Point Density / Line Density（点、线密度分析）："></a><strong>2. Point Density / Line Density（点、线密度分析）：</strong></h2><p><img src="http://kikitamap.com/images/blogImg/SADensity_PointLine.png" alt=""></p>
<p>这两个工具的输出与核密度工具的输出的区别在于：</p>
<p>对于点密度和线密度，需要指定一个邻域，以便计算出各输出像元周围像元的密度。而核密度则可将各点的已知总体数量从点位置开始向四周分散。在核密度中，在各点周围生成表面所依据的二次公式可为表面中心（点位置）赋予最高值，并在搜索半径距离范围内减少到零。对于各输出像元，将计算各分散表面的累计交汇点总数。</p>
<p><strong>1）点密度分析</strong></p>
<p>每个栅格像元中心的周围都定义了一个邻域（邻域可以使用圆形、矩形、环形、楔形的形状来定义），将邻域内点的数量相加，然后除以邻域面积，即得到点要素的密度。如果 Population 字段设置使用的是 NONE 之外的值，则每项的值用于确定点被计数的次数。例如，值为 3 的项会导致点被算作三个点。值可以为整型也可以为浮点型。</p>
<p><strong>2）线密度分析</strong></p>
<p>使用搜索半径以各个栅格像元中心为圆心绘制一个圆。每条线上落入该圆内的部分的长度与 Population 字段值相乘。对这些数值进行求和，然后将所得的总和除以圆面积。</p>
<p><img src="http://kikitamap.com/images/blogImg/SADensity_LineDetail.gif" alt=""></p>
<p>上图中显示的是栅格像元与其圆形邻域。线 L1 和 L2 表示各条线上落入圆内部分的长度。相应的 population 字段值分别为 V1 和 V2。因此：</p>
<p><strong>Density = ((L1 <em> V1) + (L2 </em> V2)) / (area_of_circle)</strong></p>
<p>如果 population 字段使用的是除 NONE 之外的值，则线的长度将等于线的实际长度乘以其 population 字段的值。</p>
<p>详情参见：<a href="http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/009z0000000w000000/" target="_blank" rel="noopener">http://help.arcgis.com/zh-cn/arcgisdesktop/10.0/help/index.html#/na/009z0000000w000000/</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geoprocessing </tag>
            
            <tag> Spatial Analyst </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于高斯克吕格平面直角坐标系]]></title>
      <url>/2012/06/01/AboutGaussKruger/</url>
      <content type="html"><![CDATA[<p>高斯克吕格平面直角坐标系是投影坐标系的一种，根据我国的地理情况，为建立地形图的测量控制和城市、矿山等区域性的测量控制，早在1952年决定，采用高斯克吕格平面直角坐标系。</p>
<h1 id="投影面的形成："><a href="#投影面的形成：" class="headerlink" title="投影面的形成："></a><strong>投影面的形成：</strong></h1><p>椭球面是不可展曲面，无论如何选择投影函数，椭球面上的元素，投影到平面上，都会产生变形（角度、长度、面积）。高斯投影是一种等角投影（正形投影），又称为横轴椭圆柱等角投影。想象用一个椭球柱面横套在椭球外面，并与某一条子午线相切，椭球的柱的中心轴通过椭球中心，然后用一定的投影方法将中央子午线两侧各一定经差范围内的地区投影到椭圆柱面上，再将此柱展开即成为投影面。</p>
<h1 id="坐标系的定义："><a href="#坐标系的定义：" class="headerlink" title="坐标系的定义："></a><strong>坐标系的定义：</strong></h1><p>在投影面上，中央经线和赤道的投影都是直线，并且以中央经线和赤道的交点作为坐标原点，以中央经线的投影为纵坐标，以赤道的投影为横坐标，这就形成了高斯平面直角坐标系。</p>
<p><img src="http://kikitamap.com/images/blogImg/AboutGaussKruger_Defination.jpg" alt=""></p>
<h1 id="分带投影："><a href="#分带投影：" class="headerlink" title="分带投影："></a><strong>分带投影：</strong></h1><p>高斯投影对投影函数的选择条件：</p>
<p>  1）椭球面上的任意角度投影到平面后保持不变；</p>
<p>  2）作为平面坐标轴的中央经线，投影后是一条直线，并且是投影点的对称轴；</p>
<p>  3）中央子午线投影到平面后，其长度不变。</p>
<p>为了限制长度变形，就需要将投影区限定在中央经线两旁的狭窄范围内。</p>
<p>通常按经线每隔6°进行分带投影。由0°经线起每隔经差6°自西向东分带，依次编号1、2、3……。6°带的带号N和中央经线L的关系为：L=6N-3。</p>
<p>为了进一步限制变形，可以采用3°投影分带。3°带和6°带的中央经线重合，6°带的中央经线和分带经线均是3°带的中央经线。3°带的带号n和中央经线L的关系为：L=3n。</p>
<p><strong>我国3°带的范围 24~45，6°带的范围 13~23。</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/AboutGaussKruger_Zones.jpg" alt=""></p>
<p>x值无论在哪一带都是由赤道起算的自然值。</p>
<p>而由于中央经线以东取正号，以西取负号。实际工作中，为了避免横坐标y出现负值，规定在y值上500km（false easting）。同时，为了区别各带坐标不同，又规定在y值前冠以带号。</p>
<p>例如：6°带第20带中，y=-200.25m，成果表中应写为20499799.75m。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[控制测量的基本概念总结]]></title>
      <url>/2012/06/01/SurveyBasic/</url>
      <content type="html"><![CDATA[<p><strong>铅垂线：</strong></p>
<p>地球自转的离心力和地心引力，它们的合力称为重力，重力的方向即为铅垂线方向。</p>
<p><strong>大地水准面：</strong></p>
<p>我们设想一个只受重力作用，无潮汐风浪影响，完全处在静止和平衡状态的海水面扩展并延伸到大陆下面，从而形成一个与铅垂线方向正交的包围整个地球的封闭曲面。</p>
<p>注意：大地水准面是一个略有起伏的不规则的曲面，由于地表起伏以及地层内部密度变化造成质量分布不均，无法用数学公式把他精确的表达出来，也就不知道大地水准面的形状。故大地水准面不能作为控制测量计算的基准面。</p>
<p><strong>地球椭球：</strong></p>
<p>地球的形状近似于一个两级略扁的旋转椭球，因此世界各国都采用旋转椭球代表地球。它的形状大小与椭球的长短半轴a、b有关系。</p>
<p>习惯上，使用长半轴 a 和扁率 f=（a-b）/a，来表示椭球的形状和大小。</p>
<p><strong>椭球定位：</strong></p>
<p>将地球椭球面与大地水准面的相关位置确定下来的的工作就是椭球定位。这样就能将以大地水准面为基准面的野外测量成果换算到这个表面上，在它上面计算坐标。</p>
<p><strong>参考椭球：</strong></p>
<p>我们把形状和大小与大地体相近，且两者之间相对位置确定的旋转椭球称为地球椭球。参考椭球面是测量计算的基准面，椭球面的法线则是测量计算的基准线。</p>
<p>PS：世界各国总是根据本国的地面测量成果选择一个适合本国情况的参考椭球，所以参考椭球有很多个。</p>
<p><strong>大地坐标系：</strong></p>
<p>大地坐标系是在椭球面上建立起来的一种表示地面点位的球面坐标系。（大地经度L，大地维度B，大地高H）</p>
<p><strong>高斯平面直角坐标系：</strong></p>
<p>它是投影坐标系的一种，根据我国的地理情况，为建立地形图的测量控制和城市、矿山等区域性的测量控制，早在1952年决定，采用高斯克吕格平面直角坐标系。</p>
<p>椭球面是不可展曲面，无论如何选择投影函数，椭球面上的元素，投影到平面上，都会产生变形（角度、长度、面积）。高斯投影是一种等角投影（正形投影），又称为横轴椭圆柱等角投影。想象用一个椭球柱面横套在椭球外面，并与某一条子午线相切，椭球的柱的中心轴通过椭球中心，然后用一定的投影方法将中央子午线两侧各一定经差范围内的地区投影到椭圆柱面上，再将此柱展开即成为投影面。</p>
<p>在投影面上，中央经线和赤道的投影都是直线，并且以中央经线和赤道的交点作为坐标原点，以中央经线的投影为纵坐标，以赤道的投影为横坐标，这就形成了高斯平面直角坐标系。</p>
<p><br></p>
<p><strong>摘录出自《控制测量学》</strong></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[中国UTM分区]]></title>
      <url>/2012/05/23/ChineseUTMZone/</url>
      <content type="html"><![CDATA[<p>其实UTM和高斯-克吕格投影投影仅仅相差一个参数。高斯-克吕格投影是“等角横切圆柱投影”，投影后中央经线保持长度不变，即比例系数为1；UTM投影是“等角横轴割圆柱投影”，圆柱割地球于南纬80度、北纬84度两条等高圈，投影后两条割线上没有变形，中央经线上长度比0.9996。从计算结果看，两者主要差别在比例因子上，高斯-克吕格投影中央经线上的比例系数为1， UTM投影为0.9996。</p>
<p>高斯-克吕格投影自0度子午线起每隔经差6度自西向东分带，第1带的中央经度为3°；UTM投影自西经180°起每隔经差6度自西向东分带，第1带的中央经度为-177°，因此高斯-克吕格投影的第1带是UTM的第31带。此外，两投影的东伪偏移都是500公里，高斯-克吕格投影北伪偏移为零，UTM北半球投影北伪偏移为零，南半球则为10000公里。</p>
<table>
<thead>
<tr>
<th>带号</th>
<th>中央经线</th>
<th>经度范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>43</td>
<td>75E</td>
<td>72E-78E</td>
</tr>
<tr>
<td>44</td>
<td>81E</td>
<td>78E-84E</td>
</tr>
<tr>
<td>45</td>
<td>87E</td>
<td>84E-90E</td>
</tr>
<tr>
<td>46</td>
<td>93E</td>
<td>90E-96E</td>
</tr>
<tr>
<td>47</td>
<td>99E</td>
<td>96E-102E</td>
</tr>
<tr>
<td>48</td>
<td>105E</td>
<td>102E-108E</td>
</tr>
<tr>
<td>49</td>
<td>111E</td>
<td>108E-114E</td>
</tr>
<tr>
<td>50</td>
<td>117E</td>
<td>114E-120E</td>
</tr>
<tr>
<td>51</td>
<td>123E</td>
<td>120E-126E</td>
</tr>
<tr>
<td>52</td>
<td>129E</td>
<td>126E-132E</td>
</tr>
<tr>
<td>53</td>
<td>135E</td>
<td>132E-138E</td>
</tr>
</tbody>
</table>
<p>补充，方便直观理解，看看中国境内的重要经纬线：</p>
<p><img src="http://kikitamap.com/images/blogImg/ChineseUTMZone_1.gif" alt=""><img src="http://kikitamap.com/images/blogImg/ChineseUTMZone_2.gif" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcPad 10 使用与同步 ArcGIS Server 的数据全攻略（二）]]></title>
      <url>/2012/04/10/ArcPad10Synchronization2/</url>
      <content type="html"><![CDATA[<p>继续上个话题，数据准备好了，我们就开始发布服务吧~</p>
<h1 id="三、发布-ArcGIS-Server-服务"><a href="#三、发布-ArcGIS-Server-服务" class="headerlink" title="三、发布 ArcGIS Server 服务"></a><strong>三、发布 ArcGIS Server 服务</strong></h1><p>在进行到这一步的时候，我遇到过很多问题，有配置的问题，有数据的问题，有自己不够仔细的问题。这里总结下注意事项，帮助大家少走弯路。</p>
<blockquote>
<p><strong>TIPS：</strong><br><strong>首先，ArcGIS Server服务器要安装ArcPad扩展，这个扩展在ArcPad安装光盘中有。</strong><br><strong>ArcGIS Desktop 与 ArcPad 版本一定要对应：ArcPad 10.0对应ArcGIS Desktop、ArcGIS Server 10.0（.NET）; ArcPad 8.0对应ArcGIS Desktop、ArcGIS Server 9.3.1（.NET）。</strong><br><strong>必须使用 ArcGIS Server for .NET Framework ，不支持 Java，许可级别必须是 Advanced版。</strong><br><strong>将前面制作的MXD以及通过上一步方法得到的同名apo放置到C盘根目录文件夹下，例如C:/MXD。</strong><br><strong>数据尽量使用ArcGIS Tutorial Data，以防止是数据本身问题导致服务发不成，以后调通了，再用自己的数据。</strong><br><strong>发布服务，在你的GIS服务器连接上，右键 Add new Services。而不要直接在你的mxd上右键发布服务。</strong></p>
</blockquote>
<p>好，记住了这些，就开始发布服务吧，步骤和以前发布服务的方法几乎没有差异，GO ON……</p>
<p>添加服务：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization2_AddService.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization2_ServiceWizard1.png" alt=""></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization2_ServiceWizard2.png" alt=""></p>
<p>注意这一步要勾选 <strong>ArcPad</strong>，使得发布的 Map Service 可以被ArcPad所支持：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization2_ServiceWizard3.png" alt=""></p>
<p>后面几步可以保持默认……</p>
<p>最后发布成功。</p>
<p><br></p>
<h1 id="四、Arcpad-加载-ArcGIS-Server-服务并使用数据"><a href="#四、Arcpad-加载-ArcGIS-Server-服务并使用数据" class="headerlink" title="四、Arcpad 加载 ArcGIS Server 服务并使用数据"></a><strong>四、Arcpad 加载 ArcGIS Server 服务并使用数据</strong></h1><p>保证移动设备网络与Server连通，可以使用Wifi、USB等等……</p>
<p>在移动设备上打开ArcPad：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization2_MobileLaunch.jpg" alt=""></p>
<p>在添加数据下拉列表中，选择”Add Data from Server“</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization2_AddDataFromServer.png" alt=""></p>
<p>类型选择 ArcGIS Server ArcPad Service，地址填写服务器地址，点击刷新按钮可以显示服务列表，注意服务器地址填写完整：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization2_ArcPadService.jpg" alt=""></p>
<p>等待片刻，服务加载成功：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization2_ServiceAdded.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ArcPad </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcPad 10 使用与同步 ArcGIS Server 的数据全攻略（一）]]></title>
      <url>/2012/04/09/ArcPad10Synchronization1/</url>
      <content type="html"><![CDATA[<p>在移动设备上，使用ArcPad可以创建、显示、查询、编辑数据。根据工作流模式的不同，我们可以采取不同的数据组织形式。</p>
<p>首先，先了解下ArcPad 支持哪些数据格式：</p>
<blockquote>
<ol>
<li>ShapeFile；</li>
<li>ArcPad AXF 文件： 这个文件使用了SQL Server 精简版数据引擎，所以在上一篇中说部署时，需要安装SQL Server Compact for Windows Mobile；</li>
<li>ArcPad Graphics layer：用XML写的文件，可以储存 annotation, points, lines, and polygons；</li>
<li>ArcPad Photo layer：用XML写的文件，用于存储引用的照片信息，需要和照片文件放置在同个文件夹中；</li>
<li>ArcPad StreetMap 文件<ol>
<li>Raster layers，具体支持以下格式:</li>
</ol>
<ul>
<li>JPEG (*.jpg)</li>
<li>JPEG 2000 (*.jp2)</li>
<li>MrSID Generation Two, or MG2 (*.sid)</li>
<li>MrSID Generation Three, or MG3 (*.sid)</li>
<li>Portable Network Graphics, or PNG (*.png)</li>
<li>Tagged Image File Format, or TIFF, including GeoTIFF (*.tif)</li>
<li>Windows Bitmap (*.bmp)</li>
<li>CADRG raster maps</li>
</ul>
</li>
</ol>
</blockquote>
<p><br><br>​    </p>
<ul>
<li>如果想要进行“从0开始”的外业作业方式，可以在ArcPad 中创建快速工程（包含了点、线、面三个shapefile层）。</li>
<li>如果已有 shapefile 数据，只需将这些数据拷贝到移动设备中，在ArcPad添加数据时引用即可。这与ArcGIS Desktop是一致的。</li>
<li>如果已有本地Geodatabase数据，这时，也可以使用ArcPad数据管理工具条Check out数据，然后通过check in提交数据。</li>
<li>如果是企业级的应用，可以与ArcGIS Server 、ArcGIS Desktop 联合使用，使用ArcPad加载已发布的服务，并且进行版本编辑，同步服务器数据。</li>
</ul>
<p>以上提到的四种应用的场景，前三种比较好理解，也易于操作。所以最后一种，作为本文的主要总结对象，网上ArcPad的资料相对较少，遂决定梳理一下这种情况下授权、管理、编辑数据的全过程，一共我会分两次与大家分享。</p>
<p>​    </p>
<h1 id="一、激活ArcPad-Data-Manager扩展"><a href="#一、激活ArcPad-Data-Manager扩展" class="headerlink" title="一、激活ArcPad Data Manager扩展"></a>一、激活ArcPad Data Manager扩展</h1><p>必须先了解的是ArcPad Data Manger工具条。这个工具条是在PC上安装ArcPad时，自动安装的一个ArcGIS Desktop的扩展。</p>
<p>既然是扩展，当然首选需要激活，在ArcMap的菜单栏中，Custom – Extensions – 勾选 “ArcPad Data Manager”，如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization1_Extension.png" alt=""><br>​<br>这一扩展包含了ArcPad Data Manager 与 ArcPad Tools两部分，分别位于工具条与ArcToolbox具箱中。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization1_Toolbar.png" alt=""><br><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization1_Tools.png" alt=""></p>
<h1 id="二、为-ArcGIS-Server-授权数据"><a href="#二、为-ArcGIS-Server-授权数据" class="headerlink" title="二、为 ArcGIS Server 授权数据"></a>二、为 ArcGIS Server 授权数据</h1><p>用于授权给ArcGIS Server的数据是有要求的，必须满足以下条件：</p>
<p>（1）SDE GDB；（2）含有Global ID；（3）注册为版本。</p>
<p>点击 <img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization1_Author.png" alt=""> Author Project for ArcGIS Server”，进行数据授权。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization1_Welcome.png" alt=""></p>
<p>选择需要签出的数据， </p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization1_SelectData.png" alt=""></p>
<p>设置空间参考范围，以及生成ArcPad地图文档的名称， </p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization1_OutOptions.png" alt=""></p>
<p>设置完成后，会提示正确信息： </p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Synchronization1_Saved.png" alt=""></p>
<p>至此，ArcPad 数据的准备就完成了。 下一篇文章，会进入 ArcGIS Server with ArcPad Capability 的发布，ArcPad如何加载和使用ArcGIS Server 服务的主题。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ArcPad </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcPad 10 的安装部署]]></title>
      <url>/2012/03/28/ArcPad10Deployment/</url>
      <content type="html"><![CDATA[<p>ArcPad是安装在手持设备或者移动终端的一个外业ArcGIS产品，也就是说ArcPad是Esri的一款软件产品，而不是硬件设备哦。虽然不比ArcGIS Desktop功能复杂缤纷，但是对于野外作业、数据采集等工作来说，算是功能十分丰富了。</p>
<p>说到安装，首先要了解系统要求，<a href="http://resources.arcgis.com/zh-cn/content/arcpad/10.0/system-requirements" target="_blank" rel="noopener">http://resources.arcgis.com/zh-cn/content/arcpad/10.0/system-requirements</a>。ArcPad 仅支持 Windows Mobile 移动平台（5.0以上），最高可使用Windows Mobile 6.5。</p>
<p><br></p>
<blockquote>
<p><strong>说明：</strong></p>
<p>  本文及后续有关ArcPad文章的截图说明的环境：<br>    ArcPad 10.0.2 （Build 30）；<br>    Windows Mobile 6.5 模拟器，<a href="http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=17284" target="_blank" rel="noopener">下载地址</a> ；<br>    Windows Mobile 5.0 基于移动设备 Trimble Juno ST；<br>    Windows 7 。</p>
</blockquote>
<h1 id="在PC上安装ArcPad"><a href="#在PC上安装ArcPad" class="headerlink" title="在PC上安装ArcPad"></a>在PC上安装ArcPad</h1><p>运行光盘，安装ArcPad。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Deployment_Setup.jpg" alt=""></p>
<p>页面中还有一项”ArcGIS Server ArcPad Extension“，此项可以先不安装，在用到添加ArcGIS Server 服务、同步数据时才会用的这一项。关于这一部分的功能、要求、应用等，以后抽时间整理一下。安装过程很简单不赘述。</p>
<p>安装过程中，提示填写注册码，可以忽略，那ArcPad就进入了评估模式，评估模式一切功能和正式版是相同的，只是使用时间为20分钟，超过20分钟ArcPad会自动退出。如果为了方便长时间使用，需要填写<strong>注册码</strong>。自己学习研究，就用这个吧：<strong>~@RCP@DD00R~</strong>。当然，商业用途和项目开发等要使用正式版的……</p>
<p>安装完成后，开始菜单中会出现：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Deployment_Start.jpg" alt=""></p>
<p>其中，第一项ArcPad 10 for Windows 是PC端的ArcPad程序，功能上与移动端ArcPad是一致的。</p>
<p>第二项 ArcPad Deployment Manager 就是用来向手持设备部署ArcPad的。</p>
<rb>

<h1 id="手持端-ArcPad-部署"><a href="#手持端-ArcPad-部署" class="headerlink" title="手持端 ArcPad 部署"></a><strong>手持端 ArcPad 部署</strong></h1><p>1.首先安装windows同步程序。</p>
<blockquote>
<p>Windows XP： 安装 Microsoft ActiveSync ；<br>Windows vista 或 Windows 7： 安装 Windows Mobile Device Center。</p>
</blockquote>
<p>2.上述程序安装好后，连接移动设备和PC，保证连接状态正常。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Deployment_Connect1.png" alt="">  <img src="http://kikitamap.com/images/blogImg/ArcPad10Deployment_Connect2.png" alt=""></p>
<p>3.打开 开始 — ArcGIS — ArcPad 10 — ArcPad Deployment Manager。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Deployment_DeployMan.jpg" alt=""></p>
<p>在这个窗口勾选需要安装的项即可：</p>
<p><strong>Arcpad for Windows Mobile</strong> 是<strong>必然</strong>需要安装的；</p>
<ul>
<li>如果需要移动设备的“桌面快捷方式“，<strong>今日插件（Today-Plugin）</strong>可以选择安装；</li>
<li>如果需要 ArcPad 中文界面，可以勾选安装相应<strong>语言包</strong>；</li>
<li><strong>Samples</strong>，示例数据是初学者探索Arcpad 的学习资源，如果需要并且存储足够，推荐安装；</li>
<li>如果需要用到数据的check in 、check out，<strong>SQL Server Compact</strong>也需要安装了；</li>
<li>如果涉及到一些脚本的应用 <strong>VBScript Runtime</strong>也需要安装；</li>
<li>剩下两个没说到的，<strong>Streetmap </strong>和 <strong>Datum </strong>的，不需要安装，不适宜国内用户的需求。</li>
</ul>
<p>做好选择之后，点击”Deploy“，就开始了Arcpad的自动部署。当然过程中不要忘记响应移动设备的询问。</p>
<p>4.至此，Arcpad 安装完成。</p>
<p>在移动设备的 开始 – 程序 中，打开ArcPad：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcPad10Deployment_Success.gif" alt=""></p>
<p><br></p>
<p>O了，可以开始使用ArcPad了。</p>
<p>学习资源主要还是ArcPad 官方帮助，在线帮助：<a href="http://help.arcgis.com/en/arcpad/10.0/help/index.html" target="_blank" rel="noopener">http://help.arcgis.com/en/arcpad/10.0/help/index.html</a>。</p>
</rb>]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ArcPad </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcMap中将地图导出至PDF]]></title>
      <url>/2012/02/28/ArcMapExportPDF/</url>
      <content type="html"><![CDATA[<p>在使用ArcMap导出地图时，ArcGIS提供了很多种格式，其中，由于PDF方便存档、共享、查询等，就成为了不少用户喜爱的格式。在这里一起学习总结下有关地图导出成PDF的知识和设置~</p>
<p>ArcMap的【文件】下的【导出地图…】，选择PDF格式后，我们可以对导出PDF进行设置。</p>
<p><br></p>
<p><strong>常规设置：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMapExportPDF_Option.gif" alt=""></p>
<p><strong>分辨率：</strong>此参数用于设置输出图像的DPI（Dots Per Inch / 每英寸的点数）。这个值越高，图像就会越清楚，当然文档的大小和处理的时间也会随之增加。<span style="font-family: 'Microsoft YaHei';"></span></p>
<p><strong>输出图像质量：</strong>此控件是用来打印导出地图时对栅格进行重采样的。对于带有栅格数据和透明矢量图层的地图，调整此值有显著效果，可以缩减处理时间和文档大小。</p>
<p><strong>格式：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMapExportPDF_Format.gif" alt=""></p>
<p><strong>目标颜色空间：</strong>控制在输出文件中指定颜色的颜色空间。<strong>RGB </strong>是默认颜色空间，通常用于屏幕显示、喷墨打印机、激光打印机打印。CMYK 模式用于商业性印刷生产。</p>
<p><strong>压缩向量图形：</strong>导出压缩的文件。此选项仅对矢量部分和文字进行压缩。对于影像的压缩需要采用下面的选项。</p>
<p><strong>图像压缩：</strong>选择一种压缩方案。选项提供了：无（None）、RLE、LZW、压缩（Deflate）、JPEG、自适应（Adaptive）。此选项对于PDF文件，仅会对文件中的影像和栅格数据进行处理。自适应（Adaptive）模式可生成最小的文件，但也会在输出图像上产生压缩伪影。要获得对于 PDF 中栅格图像的无损压缩，可使用压缩（Deflate）模式。</p>
<p><strong>JPEG质量：</strong>这个比较好理解，对于JPEG，质量越高，地图月清晰，文件也会越大。</p>
<p><strong>图片符号：</strong>此选项用于指定图片标记符号（BMP、EMF）和图片填充符号是否转换为矢量或栅格化。</p>
<p><strong>将标记符号转换为面：</strong>此选项是将基于字符的标记符号转为面。在某些符号字体不可用或者无法被嵌入的情况下，可以勾选此选项，用来保证正确显示。但是，需要了解，此选项勾选后，会对所有基于字符的标记符号禁用字体嵌入，这就可能导致符号外观发生变化。</p>
<p><strong>嵌入所有文档字体：</strong>此选项勾选后，可将文档本身内部使用的字体都嵌入到文档内部。这样的好处就是，导出的PDF文件，即使在没有安装文档中字体的机器上，也能正常打开。这个还是很常用，建议一直勾选。但是还是提醒下：某些字体不支持嵌入，即使选中此选项也不会嵌入。</p>
<p><strong>高级：</strong></p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMapExportPDF_Advanced.gif" alt=""></p>
<p>除了用作地图的交换格式之外，从 ArcMap 导出的 PDF 文件还具有其他高级功能。PDF 文件可以包含来自 ArcMap 内容列表（TOC）中的图层，这样就可以在PDF文档中开启和禁用图层的可见性；还可以包含要素的属性以及每个地图数据框的地理配准信息。在 Adobe Reader 或 Adobe Acrobat 中查看 PDF 文档的任何用户都可以使用 Acrobat Analysis 工具检查要素属性并查找和识别地理坐标。</p>
<p><strong>图层和属性：</strong></p>
<p>通过设置此选项，ArcMap 导出的 PDF 中可以包含图层，用户可在 Adobe Acrobat 和 Reader 6.0 及其更高版本中控制这些图层的可见性。</p>
<p>凭借 Adobe Acrobat 和 Adobe Reader 的内置功能，从 ArcGIS 导出的 PDF 文件可以包含要素属性表中的要素属性。在要素属性表中字段的可见性确定了在生成的 PDF 中将导出哪些字段。我们可在 Adobe Acrobat 和 Adobe Reader 中通过对象数据工具访问这些属性。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMapExportPDF_Layers.gif" alt=""></p>
<p><strong>导出地理配准信息：</strong></p>
<p>Adobe Acrobat 和 Adobe Reader  9 以上版本可以查看 PDF 文件内部编码的地图坐标和地理配准信息。在启用导出地图地理配准信息选项的情况下导出地图，将记录 PDF 内部每个数据框的地理配准信息。在兼容的查看器（如 Adobe Reader 9）中打开地理配准的 PDF 时，用户可以访问地理空间功能（如坐标值读数和查找 x,y）。</p>
<p>另外，导出PDF还支持数据驱动页面以及导出后加密。数据驱动以后会专门再总结一篇。</p>
<p><strong>加密PDF：</strong></p>
<p>可以使用简单的 arcpy.mapping 脚本来加密 PDF 文档和并为其设置密码保护，如下示例：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pdfDoc = arcpy.mapping.PDFDocumentOpen(<span class="string">r"C:\Project.pdf"</span>)</span><br><span class="line">pdfDoc.updateDocSecurity(<span class="string">"secret"</span>, <span class="string">"secret"</span>)</span><br><span class="line">pdfDoc.saveAndClose()</span><br><span class="line"><span class="keyword">del</span> pdfDoc</span><br></pre></td></tr></table></figure>
<p>步骤：将地图导出成PDF之后，记下文件位置，替换第一行的路径；设置密码，代替示例密码“secret”；将脚本复制进Python窗口，运行即可。</p>
<p>以上就是地图导出成PDF时，全部设置的总结啦 ~</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决Godaddy邮箱无法收信的问题]]></title>
      <url>/2012/02/17/GodaddyEmailFailure/</url>
      <content type="html"><![CDATA[<p>Godaddy上面有附送免费的邮箱，每申请一个域名，都可以获得赠送一个1G的邮箱，同时空间的话可以获得5个邮箱。这些邮箱可以按照我们自己的意愿来设置域名后缀，这对中小型的外贸企业来说是个不错的选择。尤其是中国大部分的邮件服务器垃圾邮件成灾的时候！ </p>
<p>我们使用Godaddy附送的邮箱可以尽可能的避免我们的邮件被归类到垃圾邮件！（虽然Godaddy的免费邮箱速度不快，面板也不是太方便。但是结合foxmail可以很好的使用！） </p>
<p>上次在设置Godaddy邮箱的时候遇到了邮箱可以发送邮件，但是无法收邮件的问题，下面是解决方法，希望可以帮到大家！ </p>
<p>Godaddy域名附赠邮箱能发送邮件但无法接收邮件解决方法如下： </p>
<p>1.登录你的Godaddy帐号. </p>
<p>2.点击 My Account. </p>
<p>3.点击左侧栏中的 Free Products </p>
<p>4.在右侧栏中的Products列表点击 Email Account List. </p>
<p>5.在出现的邮件管理页面中选择Free email addresses for yourdomain.com(yourdomain.com是你的域名)，然后点击右边的 Manage Account. </p>
<p>6.选择 Domains 标签 </p>
<p>7.选择你要修正MX记录的邮件帐号，然后点击Server Addresses. </p>
<p>8.点击 Update my MX records for me 让系统自动帮你修正MX记录 </p>
<p><br></p>
<p>到此问题就解决了！<br>出处：<a href="http://ltl3884.iteye.com/blog/1276793" target="_blank" rel="noopener">http://ltl3884.iteye.com/blog/1276793</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Point to Raster 工作原理]]></title>
      <url>/2012/02/08/HowPointtoRasterWorks/</url>
      <content type="html"><![CDATA[<p>点在栅格中，表示为一个像元。通常，如果有两个或更多个点落入某像元范围内，ArcGIS 在为像元赋值时会随机选择这些点中的一个点。但在使用“Point to Raster”工具时，可选择像元值分配类型（频率最高、求和、平均值、标准差、最大值、最小值、范围、数目）。具有值的像元数有可能少于要转换的点数。</p>
<p><img src="http://kikitamap.com/images/blogImg/HowPointtoRasterWorks_Tool.gif" alt=""></p>
<p><strong>工具说明：</strong></p>
<p>A．可以将包含点或多点要素的任意要素类（地理数据库、shapefile 或 coverage）转换为栅格数据集。</p>
<p>B．输入字段类型决定输出栅格的类型。如果字段是整型，则输出栅格也是整型；如果字段是浮点型，则输出栅格也是浮点型。</p>
<p>C．如果输入字段包含字符串值，则输出栅格将包含一个整数值字段和一个字符串字段。</p>
<p>D．Priority Field仅与像元分配类型的 MOST_FREQUENT 选项一起使用。如果一个像元中存在多个点，优先级高的值被采用，如果优先级相同的，属性值出现频率最高的被采用，如果优先级和出现频率全都相同，采取FID最小的。如下图情况所示：</p>
<p><img src="http://kikitamap.com/images/blogImg/HowPointtoRasterWorks_RasterValue.gif" alt=""></p>
<p>若要素位于单元边界，则遵循<strong>边界规则</strong>。</p>
<ul>
<li>下图举例说明了要素恰巧落在单元边界上时适用的规则。</li>
<li>如果要素落在单元边界上，则使用它上面的单元；如果它上面没有单元，则使用下面的单元。 </li>
<li>如果左侧有一个单元，则使用此单元；如果没有，则使用右侧的单元。</li>
</ul>
<p><img src="http://kikitamap.com/images/blogImg/HowPointtoRasterWorks_Boundary.gif" alt=""></p>
<p>与之相应的，还有一个Raster to Point 工具。</p>
<p><img src="http://kikitamap.com/images/blogImg/HowPointtoRasterWorks_Raster2Point.gif" alt=""></p>
<p><strong>工具说明：</strong></p>
<p>A. 允许输入整形或者浮点型的栅格数据；输入栅格的栅格单元大小可以任意，并且可以属于任何有效的栅格数据集。</p>
<p>B. 针对输入栅格数据集的每个栅格单元，都会在输出要素类中创建一个点。这些点将定位于它们所代表的栅格单元的中心。NoData 栅格单元不会转换为点。</p>
<p>C. Field参数可选，来设置栅格数据的某个字段转换为生成点要素的属性字段。此字段可以是整型、浮点型、字符型。如果不选，默认使用Value字段。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Raster </tag>
            
            <tag> Geoprocessing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS for AutoCAD 小结]]></title>
      <url>/2012/02/07/ArcGISforAutoCAD/</url>
      <content type="html"><![CDATA[<h2 id="一、-简介"><a href="#一、-简介" class="headerlink" title="一、 简介"></a><strong>一、 简介</strong></h2><p> ArcGIS for AutoCAD是Esri提供的一个针对AutoCAD免费插件。此插件可以使AutoCAD作为ArcGIS Server的客户端加载服务；并且可以作为GIS结构编辑器来组织CAD数据，从而作为直接可用的GIS 要素类；给CAD数据定义坐标系，可以被ArcGIS产品识别。</p>
<p><br></p>
<h2 id="二、-系统要求"><a href="#二、-系统要求" class="headerlink" title="二、 系统要求"></a><strong>二、 系统要求</strong></h2><p>这里基于ArcGIS for AutoCAD 250版本。 </p>
<p> <strong>版本:</strong> </p>
<p>AutoCAD 2010/2011, 32-bit or 64-bit</p>
<p>AutoCAD Map 3D 2010/2011, 32-bit or 64-bit</p>
<p>AutoCAD Civil 3D 2010/2011, 32-bit or 64-bit</p>
<p><strong>操作系统:</strong></p>
<p>Windows 7 Enterprise, Ultimate, Professional, or Home  Premium</p>
<p>Windows Vista Enterprise, Business, Ultimate, or Home  Premium (SP1 or later) </p>
<p>Windows XP Professional or Home edition (SP3)</p>
<p><strong>Microsoft .NET Framework:</strong>   </p>
<p>Microsoft .NET Framework Version 3.5 (SP1 or later) </p>
<p> <strong>Internet 方式连接ArcGIS Server:</strong>   </p>
<p>ArcGIS Server 9.3 或更高版本发布服务 </p>
<p><br></p>
<h2 id="三、-安装与加载"><a href="#三、-安装与加载" class="headerlink" title="三、 安装与加载"></a><strong>三、 安装与加载</strong></h2><p>下面以AutoCAD 2010（x64），ArcGIS for AutoCAD 250（x64）为例，介绍一下此插件的安装使用过程。</p>
<h3 id="1-获取并安装插件"><a href="#1-获取并安装插件" class="headerlink" title="1. 获取并安装插件"></a><strong>1. 获取并安装插件</strong></h3><p>插件的下载地址：<a href="http://support.esrichina-bj.cn/2011/0224/963.html" target="_blank" rel="noopener">http://support.esrichina-bj.cn/2011/0224/963.html</a><br> 注意此插件区分32bit与64bit，选择合适版本下载，我这里使用ArcGISforAutoCADDownloadx64.exe。<br> 在已经安装AutoCAD的前提下，双击运行此exe即可。</p>
<h3 id="2-插件的加载"><a href="#2-插件的加载" class="headerlink" title="2. 插件的加载"></a><strong>2. 插件的加载</strong></h3><p>以管理员身份运行AutoCAD，在AutoCAD的命令提示行中输入：NETLOAD。出现资源管理器窗口，浏览至插件的安装目录，选择 ArcGISForAutoCAD.dll打开。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISforAutoCAD_AutoCAD.gif" alt=""></p>
<p>之后出现插件加载画面。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISforAutoCAD_Launch.gif" alt=""></p>
<p>加载ArcGIS for AutoCAD插件成功。</p>
<p>加载后，会多出ArcGIS for AutoCAD插件栏，如下图：<br><img src="http://kikitamap.com/images/blogImg/ArcGISforAutoCAD_Menu.gif" alt=""></p>
<h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a><strong>注意事项：</strong></h3><p>添加ArcGIS Online服务时，可能会遇到错误：“<strong>找不到资源：</strong>‘<strong>basemapui\basemapcenter.xaml’</strong>”。</p>
<p>解决方法：这是个已知问题，下载补丁既可以解决此问题，地址：<a href="http://resources.arcgis.com/zh-cn/content/patches-and-service-packs?fa=listPatches&amp;PID=129" target="_blank" rel="noopener">http://resources.arcgis.com/zh-cn/content/patches-and-service-packs?fa=listPatches&amp;PID=129</a></p>
<p>至此，ArcGIS for AutoCAD 插件即可以开始使用啦。</p>
<h2 id="四、-功能与使用"><a href="#四、-功能与使用" class="headerlink" title="四、 功能与使用"></a><strong>四、 功能与使用</strong></h2><h3 id="1-Map-Service"><a href="#1-Map-Service" class="headerlink" title="1. Map Service"></a><strong>1. Map Service</strong></h3><p>有了这个插件，首先可以使AutoCAD直接加载Map Service：</p>
<p>(1) ArcGIS Online</p>
<p>使用Esri Map Gallery中的地图作为地图，添加到现有的CAD工程中。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISforAutoCAD_Basemap.gif" alt=""></p>
<p>(2) ArcGIS Server</p>
<p>向现有的CAD工程中添加ArcGIS Server服务。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISforAutoCAD_AGSServer.gif" alt=""></p>
<h3 id="2-CAD-Feature-Class"><a href="#2-CAD-Feature-Class" class="headerlink" title="2. CAD Feature Class"></a><strong>2. CAD Feature Class</strong></h3><p>此插件可以将 AutoCAD 作为 GIS 方案编辑器，用来将 CAD 数据组织为可供 GIS 使用的要素类。</p>
<p>类型对象过滤器是预定义的，用来约束ArcGIS Desktop支持的feature class与DWG 对象的对应关系。</p>
<p>DWG 对象与ArcGIS 要素的强制对应关系如下：</p>
<table>
<thead>
<tr>
<th>Feature type</th>
<th>DWG object types</th>
</tr>
</thead>
<tbody>
<tr>
<td>Point</td>
<td>Point, Insert,  shape, Hatch, Proxy</td>
</tr>
<tr>
<td>Polyline</td>
<td>Arc, Circle,  Ellipse, Line, Mline, polyline, 3D polyline Ray, spline, Xline, Trace, solid,  3Dface</td>
</tr>
<tr>
<td>Polygon</td>
<td>Circle, Solid,  Ellipse, Face, closed polyline, closed 3D polyline, Mline</td>
</tr>
<tr>
<td>Annotation</td>
<td>Text, Mtext,  Attribute, Attdef</td>
</tr>
<tr>
<td>Multipatch</td>
<td>Arc, Circle,  Ellipse, Line, Mline, polyline, 3D polyline Ray, spline, Xline, Trace, solid,  3Dface</td>
</tr>
</tbody>
</table>
<h3 id="3-坐标系统"><a href="#3-坐标系统" class="headerlink" title="3. 坐标系统"></a><strong>3. 坐标系统</strong></h3><p>插件使用的坐标系统是通过*.prj 文件来定义的。当给DWG文件定义坐标系后，这个有效的空间参考是可以被ArcGIS Server、ArcMap、ArcCatalog以及ArcGIS 地理处理工具识别的。</p>
<p>关于CAD与ArcGIS一体化的文章，后面会不断更新~</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CAD </tag>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcGIS的空间参考]]></title>
      <url>/2012/02/07/ArcGISSpatialReference/</url>
      <content type="html"><![CDATA[<p><strong>1．坐标系（CoordinateSystem）</strong></p>
<p>主要提供了这个几种：地理坐标系或大地坐标系（GCS）、投影坐标系（PCS）、垂直坐标系（UCS）。坐标系在这先不多说，以后有时间自己整理下。</p>
<p><br></p>
<p><strong>2．分辨率（Resolution）：x，y值的最小距离</strong></p>
<p>分辨率值的单位与相关坐标系的单位相同。</p>
<p>默认分辨率值是 0.0001 米 (1/10 mm)，或者为其等效值（以地图单位表示）。</p>
<p>具有较小（较精细）的 x,y 分辨率的要素坐标可以具有更多的精度位数。但是，极小的 x,y分辨率可能会影响性能，因为使用了过多的磁盘空间以及更多的 I/O。</p>
<p>ESRI官方文档强烈建议，在大多数情况下使用默认的 x,y分辨率，因为默认分辨率性能非常好并且可以适用于大多数坐标精度。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISSpatialReference_Resolution.gif" alt=""></p>
<p><br></p>
<p><strong>3． 容差（Tolerance）：</strong> </p>
<p>容差值为坐标之间的最小距离。如果一个坐标在另一个坐标的容差值范围内，则会将二者视为同一位置。 默认容差是分辨率值的 10倍，大多数情况下推荐使用此设置。</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcGISSpatialReference_Tolerance.gif" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Coordinate System </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcMap的Feature Cache]]></title>
      <url>/2012/02/07/ArcMapFeatureCache/</url>
      <content type="html"><![CDATA[<p><strong>一、介绍</strong></p>
<p>使用地理数据库中存储的数据时，创建要素缓存可以加快ArcMap的执行速度。要素缓存可以将 ArcMap当前显示的要素临时存储到计算机的内存中。</p>
<p>Arcmap 中有提供了 Feature Cache 的工具，如下：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMapFeatureCache_Toolbar.gif" alt=""></p>
<p>各个工具的作用如下：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMapFeatureCache_Function.gif" alt=""></p>
<p>值得注意的是这两个工具：</p>
<ul>
<li>第一个，构建要素缓存工具是在当前地图范围内构建缓存。</li>
<li>第四个，设置自动缓存比例，也就是进行缓存的最小比例尺。注意ArcGIS自带帮助文档这里写得有误，不是最大比例尺。</li>
<li>第五个，显示要素缓存按钮，颜色会随缓存状态变化。绿色表示已缓存，红色表示未缓存。</li>
</ul>
<p><strong>二、设置自动缓存</strong></p>
<p>自动缓存通常适用于，不确定缓存边界时，或者需要缓存一系列的地图时。开启自动缓存时，会自动的去缓存超出当前已缓存范围的地图。由于自动缓存可能影响性能（占大量内存），因此应当设置自动缓存最小比例。只有当地图比例大于最小比例时，才自动创建要素缓存。</p>
<p>使用上述工具条的，切换自动缓存按钮开启。</p>
<p>或者在数据框属性中开启，如下图：</p>
<p><img src="http://kikitamap.com/images/blogImg/ArcMapFeatureCache_Enable.gif" alt=""></p>
<p><strong>三、性能提升</strong></p>
<p>对于地理数据库数据，当数据源是 ArcSDE 地理数据库时，要素缓存的优势最为显著。</p>
<p>使用文件或个人地理数据库的要素缓存能够获得微小的性能提升。</p>
<p>在特定地图范围内进行操作时，要素缓存尤其有用。</p>
<p>要素缓存不适合：在较大区域跨度内频繁平移和缩放操作。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Performance </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Geodatabase之基础]]></title>
      <url>/2012/02/07/GeodatabaseBasic/</url>
      <content type="html"><![CDATA[<p>Geodatabase是用来表达和管理地理信息的复杂数据模型，是ArcGIS的主要存储数据方式，主要存储了 featureclasses、 rasterdatasets、attributes、具有行为的高级GIS数据对象、 管理空间完整性的规则、要素栅格属性关系工具。</p>
<p><strong>一、Geodatabase 的种类：</strong></p>
<p>就其种类呢，无非是三种：File Geodatabase，PersonalGeodatabase，ArcSDEGeodatabase。 </p>
<p>1、 FileGeodatabase：以文件夹形式存储。每个Dataset作为一个文件存储，最大可达1T。对于PGDB更推荐FGDB。单用户，同一个Dataset 、独立的featureclass或者table，并发只能有一人写操作，可以多人读操作。支持跨平台。</p>
<p>2、PersonalGeodatabase：所有的Dataset都存储在MicrosoftAccess数据文件中,最大大小不超过2 GB。单用户，一个人写多人读。仅支持Windows。</p>
<p>3、ArcSDEGeodatabase：储存在关系数据库中，可使用 Oracle,MicrosoftSQL Server, IBM DB2, IBM Informix,PostgreSQL。这些多用户的数据库要求使用ArcSDE，不限制大小和用户的数量。平台支持：Windows, UNIX,Linux。</p>
<p><strong>二、Geodatabase中的Dateset</strong></p>
<p>Geodatabase 中包含基本的dataset，包括：feature classes、 rasterdatasets、attributes。还包含高级地理数据类型：coordinate systems, coordinateresolution, feature classes,topologies, networks, raster catalogs,relationships, domains。</p>
<p><strong>1、Table</strong></p>
<p>用于存储属性等。字段类型包含：Numbers（长整型、短整型、单精度、双精度）、Text、Date（日期时间型）、BLOBs（二进制大对象，例如Symbol、CAD几何要素）、GlobalID（全局标识符）、XML。</p>
<p><strong>2、Feature Class</strong></p>
<p>Feature Class以一张单独的表存储，每个要素是一条记录。种类： Points、Lines、Polygons、Annotation、 Dimensions（尺寸）、MultiPoints（由多个点组成的要素，如雷达激光点）、MultiPatches（多面体）。</p>
<p>其中要素坐标可包含Z值，表示垂直测量结果；线状要素可以包含M值，表示线性测量结果。路径是指具有唯一标识符和通用测量系统的任意线状要素（如城市街道、公路、河流或管线）。</p>
<p>与FeatureClass相关的：FeatureDataset，subtype，AttributeDomain，RelationshipClasses，Topology，Network Dataset，Geometric network，TerrainDataset，Linear referencing，Cartographicrepresentation，versioning。</p>
<p><strong>3、Raster</strong></p>
<p>栅格的地理属性通常包括：坐标系，参考坐标或 X,Y 位置（通常在栅格左上角或左下角），单元大小，行计数和列计数。<br>地理数据库可以针对多种用途管理栅格：作为单个数据集、数据集的逻辑集合和表中的图片属性.</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[有关shape文件的说明]]></title>
      <url>/2012/02/07/Aboutshapefile/</url>
      <content type="html"><![CDATA[<p>shapefile 是存储地理信息的简单文件格式，但是工作中，常会接到用户的很多问题，这里把常见的汇总下。</p>
<p><strong>一、shape 文件到底可以多大？</strong></p>
<p>shapefile 的每个文件都不能超过 2 GB。也就是说，存储数据的 .dbf 与.shp 分别不能超过 2GB。但是，所有文件的总大小可以超过 2 GB。</p>
<p><strong>二、 shape 文件是怎么构成的？</strong></p>
<p>shape 文件用 ArcGIS 查看仅显示一个文件，但是用 windows 资源管理器查看就可能看到以下文件。</p>
<ul>
<li>.shp - 存储要素几何的主文件；必需文件。</li>
<li>.shx - 存储要素几何索引的索引文件；必需文件。</li>
<li>.dbf - 存储要素属性信息的 dBASE 表；必需文件。</li>
<li>.prj - 存储坐标系信息的文件；由 ArcGIS 使用。</li>
<li>.xml - ArcGIS 的元数据 - 用于存储 shapefile 的相关信息。</li>
<li>.sbn 和 .sbx - 存储要素空间索引的文件。</li>
<li>.fbn 和 .fbx - 存储只读 shapefile 的要素空间索引的文件。</li>
<li>.ain 和 .aih - 存储某个表中或专题属性表中活动字段属性索引的文件。</li>
<li>.atx - .atx 文件针对各个 shapefile 或在 ArcCatalog 中创建的 dBASE属性索引而创建。</li>
<li>.ixs - 读/写 shapefile 的地理编码索引。</li>
<li>.mxs - 读/写 shapefile（ODB 格式）的地理编码索引。</li>
<li>.cpg - 可选文件，指定用于标识要使用的字符集的代码页。</li>
<li>强烈建议，对shape操作时，在 ArcGIS 中进行。</li>
</ul>
<p><strong>三、 shape 中创建字段注意什么？</strong></p>
<p>不能对现有字段修改，可以新建字段包括自定义数据类型；字段名长度不要超过10，超过会被截断。</p>
<p>新建字段时，有三个参数可供设置：</p>
<ul>
<li>precision（精度）—— 数字字段中可存储的位数；</li>
<li>scale（标度）—— 浮点或双精度类型字段中数值的小数点右侧的位数；</li>
<li>length（长度）—— 字符型字段的文本字段的长度。</li>
</ul>
<p>注意，long integer 当精度超过 10 时，会自动转为 Double 型。</p>
<p>相关资料：</p>
<p>由于shape文件是公开数据格式，可以很好来作为交换格式，这里是Esri官方技术描述：</p>
<p><a href="https://www.esri.com/library/whitepapers/pdfs/shapefile.pdf" target="_blank" rel="noopener">shape文件技术描述</a></p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[认识虚拟内存与分页文件]]></title>
      <url>/2012/02/07/virtualmemory/</url>
      <content type="html"><![CDATA[<p>如果计算机缺少运行程序或操作所需的RAM，则 Windows 使用虚拟内存进行补偿。</p>
<p>查看RAM数量：</p>
<p><img src="http://kikitamap.com/images/blogImg/virtualmemory.gif" alt=""></p>
<p>注意：某些情况下，Windows会报告计算机上安装的内存数量以及可以使用的内存数量。如果使用的是32位版本的Windows，则可用内存的数量可能低于安装的内存总量。</p>
<p>虚拟内存将计算机的RAM和硬盘上的临时空间组合在一起。当RAM运行速度缓慢时，虚拟内存将数据从RAM移动到称为分页文件的空间中。将数据移入与移出分页文件可以释放RAM，以便计算机可以完成工作。</p>
<p>一般而言，计算机的RAM越多，程序运行得越快。如果计算机的速度由于缺少RAM而降低，则可以尝试增加虚拟内存来进行补偿。但是，计算机从RAM读取数据的速度要比从硬盘读取数据的速度快得多，因此增加RAM是更好的方法。</p>
<p>分页文件：硬盘上一个或者多个隐藏文件 pagefile.sys，Windows用于存储未存入内存的部分程序和数据文件。页面文件和物理内存或随机存取内存（RAM）构成了虚拟内存。Windows会根据需要将数据从页面文件移至内存，或将数据从内存移至页面文件以便为新数据释放内存。也叫“交换文件”。</p>
<p><strong>错误消息与自定义大小</strong></p>
<p>如果收到警告虚拟内存不足的错误消息，则需要添加更多的RAM 或增加分页文件的大小，这样才能在计算机上运行程序。Windows 通常会自动管理大小，但是如果默认的大小不能满足您的需要，则可以手动更改虚拟内存的大小。</p>
<p>如何自定义虚拟内存的大小？</p>
<p>如果您收到虚拟内存不足的警告，则您将需要增加&lt;分页文件的最小大小。Windows设置分页文件的初始最小大小等于您计算机上安装的随机存取内存(RAM)的数量加上300兆字节(MB)，最大大小是您计算机上安装的RAM 数量的3倍。如果您看到对这些建议级别的警告，则增加最小大小和最大大小。</p>
<ol>
<li>单击打开我的电脑“属性”。</li>
<li>在左窗格中，单击“高级系统设置”。</li>
<li>在“高级”选项卡上，在“性能”下，单击“设置”。</li>
<li>单击“高级”选项卡，然后在“虚拟内存”下，单击“更改”。</li>
<li>清除“自动管理所有驱动器的分页文件大小”复选框。</li>
<li>在“驱动器[卷标]”下，单击要更改的分页文件所在的驱动器。</li>
<li>单击“自定义大小”，在“初始大小(MB)”或“最大大小(MB)”框中键入新的大小（以兆字节为单位），单击“设置”，然后单击“确定”。</li>
</ol>
<p>注意：增加大小通常不需要重新启动更改就能生效，但是如果减小大小，则需要重新启动计算机更改才能生效。建议不要禁用或删除页面文件。</p>
<p><strong>“任务管理器”内存列的含义</strong></p>
<table>
<thead>
<tr>
<th><strong>列</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>PID（进程标识符）</td>
<td>唯一标识所运行进程的编号。</td>
</tr>
<tr>
<td>用户名</td>
<td>运行该进程的用户帐户。</td>
</tr>
<tr>
<td>会话标识</td>
<td>标识进程所有者的编号。当多个用户登录时，每个用户都有一个唯一的会话标识。</td>
</tr>
<tr>
<td>CPU使用率</td>
<td>自上次更新以来，进程使用CPU的时间百分比（列标题中列为“CPU”）。</td>
</tr>
<tr>
<td>CPU时间</td>
<td>进程自其启动以来使用的总处理时间（以秒为单位）。</td>
</tr>
<tr>
<td>内存-工作集</td>
<td>私人工作集中的内存数量与进程正在使用且可以由其他进程共享的内存数量的总和。</td>
</tr>
<tr>
<td>内存-高峰工作集</td>
<td>进程所使用的工作集内存的最大数量。</td>
</tr>
<tr>
<td>内存-工作集增量</td>
<td>进程所使用的工作集内存中的更改量。</td>
</tr>
<tr>
<td>内存-专用工作集</td>
<td>工作集的子集，它专门描述了某个进程正在使用且无法与其他进程共享的内存数量。</td>
</tr>
<tr>
<td>内存-提交大小</td>
<td>为某进程使用而保留的虚拟内存的数量。</td>
</tr>
<tr>
<td>内存-页面缓冲</td>
<td>由内核或驱动程序代表进程分配的可分页内核内存的数量。可分页内存是可写入其他存储媒体（例如硬盘）的内存。</td>
</tr>
<tr>
<td>内存-非页面缓冲池</td>
<td>由内核或驱动程序代表进程分配的不可分页的内核内存的数量。不可分页的内存是不能写入其他存储媒体的内存。</td>
</tr>
<tr>
<td>页面错误</td>
<td>自某进程启动后该进程生成的页面错误数。进程访问当前不在工作集的内存页面时会出现页面错误。某些页面错误要求从磁盘中检索页面内容；其他的页面错误可在不访问磁盘的情况下解决。</td>
</tr>
<tr>
<td>页面错误增量</td>
<td>自上次更新以来页面错误数量的变化。</td>
</tr>
<tr>
<td>基本优先级</td>
<td>优先排名，它确定了所计划进程的线程顺序。</td>
</tr>
<tr>
<td>句柄数</td>
<td>进程的对象表中的对象句柄数。</td>
</tr>
<tr>
<td>线程数</td>
<td>进程中运行的线程数。</td>
</tr>
<tr>
<td>USER对象</td>
<td>当前由进程使用的USER对象数。USER 对象是来自Window管理器的对象，它包含窗口、菜单、光标、图标、挂接、加速器、监视器、键盘布局及其他内部对象。</td>
</tr>
<tr>
<td>GDI对象</td>
<td>图形输出设备应用程序编程接口(API)的图形设备接口(GDI)库中的对象数量。</td>
</tr>
<tr>
<td>I/O读取</td>
<td>由进程（包括文件、网络和设备I/O）生成的读取输入/输出操作的数量。无法计算定向到CONSOLE（控制台输入对象）句柄的I/O 读取数量。</td>
</tr>
<tr>
<td>I/O写入</td>
<td>由进程（包括文件、网络和设备I/O）生成的写入输入/输出操作的数量。无法计算定向到CONSOLE（控制台输入对象）句柄的I/O 写入数量。</td>
</tr>
<tr>
<td>I/O其他</td>
<td>由既非读取又非写入的进程（包括文件、网络和设备I/O）生成的输入/输出操作的数量。此类操作的示例是控制功能。无法计算定向到CONSOLE（控制台输入对象）句柄的I/O 其他操作数量。</td>
</tr>
<tr>
<td>I/O读取字节</td>
<td>由进程（包括文件、网络和设备I/O）生成的输入/输出操作所读取的字节数。无法计算定向到CONSOLE（控制台输入对象）句柄的I/O 读取字节数。</td>
</tr>
<tr>
<td>I/O写入字节</td>
<td>由进程（包括文件、网络和设备I/O）生成的输入/输出操作所写入的字节数。无法计算定向到CONSOLE（控制台输入对象）句柄的I/O 写入字节数。</td>
</tr>
<tr>
<td>I/O其他字节</td>
<td>由既非读取又非写入的进程（包括文件、网络和设备I/O）生成的输入/输出操作所传输的字节数。此类操作的示例是控制功能。无法计算定向到CONSOLE（控制台输入对象）句柄的I/O 其他字节数。</td>
</tr>
<tr>
<td>映像路径名称</td>
<td>硬盘上的进程位置。</td>
</tr>
<tr>
<td>命令行</td>
<td>指定为创建进程的完整命令行。</td>
</tr>
<tr>
<td>用户帐户控制(UAC)虚拟化</td>
<td>确定为此进程启用、禁用还是不允许使用用户帐户控制(UAC) 虚拟化。UAC虚拟化将文件和注册表写入错误重定向到每用户位置。</td>
</tr>
<tr>
<td>描述</td>
<td>进程的描述。</td>
</tr>
<tr>
<td>数据执行保护</td>
<td>是否为此进程启用或禁用数据执行保护。有关详细信息，请参阅什么是数据执行保护？</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Deployment </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ArcPad 8 简介]]></title>
      <url>/2012/02/07/ArcPad8Overview/</url>
      <content type="html"><![CDATA[<p>ArcPad主要是针对外业数据采集人员的一款产品，它相对独立，但不是完全孤立的，可以与GPS、测距仪、数码相机进行一体化作业。2009年4月推出的ArcPad8以其强大的功能为GIS外业人员提供了巨大的便利。</p>
<p>ArcPad包中包含了Arcpad和ArcPad Application Builder，前者主要用于外业数据采集，后者主要用于定制功能。由此大家可能还联想到ArcGIS Mobile，它是集成与ArcGIS Server高级企业版中的，主要用于通过开发来定制移动GIS功能，提供解决方案。ArcPad与ArcGIS Mobile二者可以用ArcGIS Desktop和AE来类比。</p>
<p>ArcPad在移动设备上支持Windows Mobile 5.0以上的系统，PC上支持Vista、XP，目前我用的Windows7，也没发现什么问题。注意：ArcPad8是不再支持Windows CE .NET的。</p>
<p>ArcPad的工作流程大致有三种：</p>
<p>1、<strong>快速工程</strong>：这是一种立即可用的数据采集方案，没有正式的数据结构和现有数据背景，通常需求是临时提的。直接在移动设备上打开ArcPad，选择快速工程，自动生成点线面图层，是shapefiles。通过采集和编辑之后，将这些数据文件copy到ArcGIS Desktop中，利用ArcGIS来管理数据即可。</p>
<p>2、<strong>本地数据工作流程</strong>：原来已经有数据，需要到ArcGIS Desktop中将数据导出，这用到一个工具条ArcPad Data Manager。然后利用手持设备外业采集，在ArcPad中进行编辑，最后将数据再导入即可。这种工作流程通常是用于小型的工作组。</p>
<p>3、<strong>ArcGIS Server 企业级工作流程</strong>：首先是在ArcCatalog或者ArcGIS Server Manager中发布服务，在ArcPad中浏览服务，进行数据的编辑。在ArcPad8中，增加了同步数据的功能，用户可以将在野外实时采集的数据同步到ArcGIS Server的GDB中。大大提高了工作效率。这种工作流程对SDE数据库有要求，就是数据要先注册版本，并且表中要含有字段“GlobalID”。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ArcPad </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Maplex中设置面要素标注锚点位置]]></title>
      <url>/2012/02/07/AnchorPointinMaplex/</url>
      <content type="html"><![CDATA[<p>开启Maplex标注引擎后，面要素的标注选项中有一项叫做Anchor Point，用来设置带有背景牵引线的标注的放置位置。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnchorPointinMaplex_LabelPosition.gif" alt=""></p>
<p>一共提供了四种放置位置，一起来了解下区别在哪里。</p>
<p><img src="http://kikitamap.com/images/blogImg/AnchorPointinMaplex_Type.gif" alt=""></p>
<ol>
<li>几何中心(然后轮廓线上最近点)   Geometric center (then closest point on outline)</li>
</ol>
<p>这里的几何中心是指面的重心。注意：重心并不一定都处于图形的内部。所以尝试先放置要素几何中心，如果几何中心在外部无法放置，则放置到最近的轮廓线上一点。</p>
<ol>
<li>侵蚀中心   Eroded center (always within polygon)</li>
</ol>
<p>向内“缩小”面，收紧到最后，得到中心点，类似剥洋葱，这个点一定位于面内部。</p>
<ol>
<li>多边形轮廓线上的最近点 Closest point on the polygon outline</li>
</ol>
<p>锚点将放置在多边形轮廓线上距离标注最接近的点。</p>
<ol>
<li>未裁剪多边形的几何中心(然后侵蚀中心)   Geometric center of unclipped polygon (then eroded center)</li>
</ol>
<p>先尝试忽略中间“洞”的多边形的几何中心，不行再放到侵蚀中心。<br>​<br>下图作为这几个中心的比较：</p>
<p><img src="http://kikitamap.com/images/blogImg/AnchorPointinMaplex_Compare.gif" alt=""></p>
<p>其实，如果嫌麻烦，把Placement选项设置好也可以满足大部分需求。</p>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mapping </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[KML/KMZ到ArcGIS完全转化]]></title>
      <url>/2012/02/07/importKMLKMZ/</url>
      <content type="html"><![CDATA[<p>在ArcGIS中，做KML（Keyhole Markup Language）的导入，我们可以使用两种方法：一是ArcToolbox中的转换工具；二是数据互操作扩展。本文将以ArcToolbox中的工具为例来导入KML或KMZ。当然如果没有数据互操作扩展的用户，第一种方法也是首选。 在ArcToolbox中有转换工具（Conversion Tools）下的由KML转出（From KML）下的KML转图层（KML to Layer）。 </p>
<p><img src="http://kikitamap.com/images/blogImg/importKMLKMZ_Toolset.png" alt=""></p>
<p>此工具将会把KML或KMZ文件的数据，转换到FileGDB中的数据集中，数据的展现符号化等信息存储在同名的图层文件（.lyr）中。 </p>
<p><img src="http://kikitamap.com/images/blogImg/importKMLKMZ_Tool.png" alt=""></p>
<p>注意：此工具中，仅需要选择一个目的文件夹，GDB和lyr文件都会自行创建。 其实到这里，KML文件中包含的信息已经进入ArcGIS的怀抱了。 如果有特殊需要，就Export下，可以得到shape。 </p>
<p><img src="http://kikitamap.com/images/blogImg/importKMLKMZ_Shapefile.gif" alt=""></p>
<p>另外，ArcGIS 提供了导出成KML、KMZ的工具：       </p>
<ul>
<li>图层转KML（Layer to KML）       </li>
<li>地图转KML（Map to KML）</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 木工开物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Geodata </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
